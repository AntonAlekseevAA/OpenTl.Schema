### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.IAffectedHistory
  commentId: T:OpenTl.Schema.Messages.IAffectedHistory
  id: IAffectedHistory
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.IAffectedHistory.Offset
  - OpenTl.Schema.Messages.IAffectedHistory.Pts
  - OpenTl.Schema.Messages.IAffectedHistory.PtsCount
  langs:
  - csharp
  - vb
  name: IAffectedHistory
  nameWithType: IAffectedHistory
  fullName: OpenTl.Schema.Messages.IAffectedHistory
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IAffectedHistory
    path: ../src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public interface IAffectedHistory : IObject'
    content.vb: >-
      Public Interface IAffectedHistory

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Messages.IAffectedHistory.Pts
  commentId: P:OpenTl.Schema.Messages.IAffectedHistory.Pts
  id: Pts
  parent: OpenTl.Schema.Messages.IAffectedHistory
  langs:
  - csharp
  - vb
  name: Pts
  nameWithType: IAffectedHistory.Pts
  fullName: OpenTl.Schema.Messages.IAffectedHistory.Pts
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Pts
    path: ../src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: int Pts { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Pts As Integer
  overload: OpenTl.Schema.Messages.IAffectedHistory.Pts*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IAffectedHistory.PtsCount
  commentId: P:OpenTl.Schema.Messages.IAffectedHistory.PtsCount
  id: PtsCount
  parent: OpenTl.Schema.Messages.IAffectedHistory
  langs:
  - csharp
  - vb
  name: PtsCount
  nameWithType: IAffectedHistory.PtsCount
  fullName: OpenTl.Schema.Messages.IAffectedHistory.PtsCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PtsCount
    path: ../src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: int PtsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property PtsCount As Integer
  overload: OpenTl.Schema.Messages.IAffectedHistory.PtsCount*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IAffectedHistory.Offset
  commentId: P:OpenTl.Schema.Messages.IAffectedHistory.Offset
  id: Offset
  parent: OpenTl.Schema.Messages.IAffectedHistory
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: IAffectedHistory.Offset
  fullName: OpenTl.Schema.Messages.IAffectedHistory.Offset
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Offset
    path: ../src/OpenTl.Schema/_generated/Messages/AffectedHistory/IAffectedHistory.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: int Offset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Offset As Integer
  overload: OpenTl.Schema.Messages.IAffectedHistory.Offset*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.IAffectedHistory.Pts*
  commentId: Overload:OpenTl.Schema.Messages.IAffectedHistory.Pts
  isExternal: false
  name: Pts
  nameWithType: IAffectedHistory.Pts
  fullName: OpenTl.Schema.Messages.IAffectedHistory.Pts
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Messages.IAffectedHistory.PtsCount*
  commentId: Overload:OpenTl.Schema.Messages.IAffectedHistory.PtsCount
  isExternal: false
  name: PtsCount
  nameWithType: IAffectedHistory.PtsCount
  fullName: OpenTl.Schema.Messages.IAffectedHistory.PtsCount
- uid: OpenTl.Schema.Messages.IAffectedHistory.Offset*
  commentId: Overload:OpenTl.Schema.Messages.IAffectedHistory.Offset
  isExternal: false
  name: Offset
  nameWithType: IAffectedHistory.Offset
  fullName: OpenTl.Schema.Messages.IAffectedHistory.Offset
