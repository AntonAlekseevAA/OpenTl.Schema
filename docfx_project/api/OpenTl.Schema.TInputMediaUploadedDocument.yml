### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TInputMediaUploadedDocument
  commentId: T:OpenTl.Schema.TInputMediaUploadedDocument
  id: TInputMediaUploadedDocument
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TInputMediaUploadedDocument.Attributes
  - OpenTl.Schema.TInputMediaUploadedDocument.Caption
  - OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
  - OpenTl.Schema.TInputMediaUploadedDocument.File
  - OpenTl.Schema.TInputMediaUploadedDocument.Flags
  - OpenTl.Schema.TInputMediaUploadedDocument.MimeType
  - OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
  - OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
  - OpenTl.Schema.TInputMediaUploadedDocument.Stickers
  - OpenTl.Schema.TInputMediaUploadedDocument.Thumb
  - OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
  langs:
  - csharp
  - vb
  name: TInputMediaUploadedDocument
  nameWithType: TInputMediaUploadedDocument
  fullName: OpenTl.Schema.TInputMediaUploadedDocument
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TInputMediaUploadedDocument
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TInputMediaUploadedDocument : IInputMedia, IObject'
    content.vb: >-
      Public Class TInputMediaUploadedDocument
          Implements IInputMedia, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IInputMedia
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Flags
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.Flags
  id: Flags
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TInputMediaUploadedDocument.Flags
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.TInputMediaUploadedDocument.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
  id: NosoundVideo
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: NosoundVideo
  nameWithType: TInputMediaUploadedDocument.NosoundVideo
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NosoundVideo
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool NosoundVideo { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NosoundVideo As Boolean
  overload: OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.File
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.File
  id: File
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: File
  nameWithType: TInputMediaUploadedDocument.File
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.File
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: File
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IInputFile File { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputFile
    content.vb: Public Property File As IInputFile
  overload: OpenTl.Schema.TInputMediaUploadedDocument.File*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Thumb
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.Thumb
  id: Thumb
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: Thumb
  nameWithType: TInputMediaUploadedDocument.Thumb
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Thumb
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Thumb
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IInputFile Thumb { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputFile
    content.vb: Public Property Thumb As IInputFile
  overload: OpenTl.Schema.TInputMediaUploadedDocument.Thumb*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
  id: MimeTypeAsBinary
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: MimeTypeAsBinary
  nameWithType: TInputMediaUploadedDocument.MimeTypeAsBinary
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MimeTypeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;MimeType&apos; property
  example: []
  syntax:
    content: public byte[] MimeTypeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property MimeTypeAsBinary As Byte()
  overload: OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.MimeType
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.MimeType
  id: MimeType
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: TInputMediaUploadedDocument.MimeType
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.MimeType
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MimeType
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 33
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string MimeType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MimeType As String
  overload: OpenTl.Schema.TInputMediaUploadedDocument.MimeType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Attributes
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.Attributes
  id: Attributes
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TInputMediaUploadedDocument.Attributes
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Attributes
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Attributes
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 35
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IDocumentAttribute> Attributes { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
    content.vb: Public Property Attributes As TVector(Of IDocumentAttribute)
  overload: OpenTl.Schema.TInputMediaUploadedDocument.Attributes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
  id: CaptionAsBinary
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: CaptionAsBinary
  nameWithType: TInputMediaUploadedDocument.CaptionAsBinary
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CaptionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Caption&apos; property
  example: []
  syntax:
    content: public byte[] CaptionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property CaptionAsBinary As Byte()
  overload: OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Caption
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.Caption
  id: Caption
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: Caption
  nameWithType: TInputMediaUploadedDocument.Caption
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Caption
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Caption
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 43
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Caption { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Caption As String
  overload: OpenTl.Schema.TInputMediaUploadedDocument.Caption*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Stickers
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.Stickers
  id: Stickers
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: Stickers
  nameWithType: TInputMediaUploadedDocument.Stickers
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Stickers
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Stickers
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 45
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IInputDocument> Stickers { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IInputDocument}
    content.vb: Public Property Stickers As TVector(Of IInputDocument)
  overload: OpenTl.Schema.TInputMediaUploadedDocument.Stickers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
  commentId: P:OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
  id: TtlSeconds
  parent: OpenTl.Schema.TInputMediaUploadedDocument
  langs:
  - csharp
  - vb
  name: TtlSeconds
  nameWithType: TInputMediaUploadedDocument.TtlSeconds
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TtlSeconds
    path: ../src/OpenTl.Schema/_generated/_Entities/InputMedia/TInputMediaUploadedDocument.cs
    startLine: 49
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int TtlSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TtlSeconds As Integer
  overload: OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IInputMedia
  commentId: T:OpenTl.Schema.IInputMedia
  parent: OpenTl.Schema
  isExternal: false
  name: IInputMedia
  nameWithType: IInputMedia
  fullName: OpenTl.Schema.IInputMedia
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Flags*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.Flags
  isExternal: false
  name: Flags
  nameWithType: TInputMediaUploadedDocument.Flags
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
  isExternal: false
  name: NosoundVideo
  nameWithType: TInputMediaUploadedDocument.NosoundVideo
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.NosoundVideo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.TInputMediaUploadedDocument.File*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.File
  isExternal: false
  name: File
  nameWithType: TInputMediaUploadedDocument.File
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.File
- uid: OpenTl.Schema.IInputFile
  commentId: T:OpenTl.Schema.IInputFile
  parent: OpenTl.Schema
  isExternal: false
  name: IInputFile
  nameWithType: IInputFile
  fullName: OpenTl.Schema.IInputFile
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Thumb*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.Thumb
  isExternal: false
  name: Thumb
  nameWithType: TInputMediaUploadedDocument.Thumb
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Thumb
- uid: OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
  isExternal: false
  name: MimeTypeAsBinary
  nameWithType: TInputMediaUploadedDocument.MimeTypeAsBinary
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.MimeTypeAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TInputMediaUploadedDocument.MimeType*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.MimeType
  isExternal: false
  name: MimeType
  nameWithType: TInputMediaUploadedDocument.MimeType
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.MimeType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Attributes*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.Attributes
  isExternal: false
  name: Attributes
  nameWithType: TInputMediaUploadedDocument.Attributes
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Attributes
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IDocumentAttribute>
  nameWithType: TVector<IDocumentAttribute>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IDocumentAttribute>
  nameWithType.vb: TVector(Of IDocumentAttribute)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IDocumentAttribute)
  name.vb: TVector(Of IDocumentAttribute)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IDocumentAttribute
    name: IDocumentAttribute
    nameWithType: IDocumentAttribute
    fullName: OpenTl.Schema.IDocumentAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IDocumentAttribute
    name: IDocumentAttribute
    nameWithType: IDocumentAttribute
    fullName: OpenTl.Schema.IDocumentAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
  isExternal: false
  name: CaptionAsBinary
  nameWithType: TInputMediaUploadedDocument.CaptionAsBinary
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.CaptionAsBinary
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Caption*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.Caption
  isExternal: false
  name: Caption
  nameWithType: TInputMediaUploadedDocument.Caption
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Caption
- uid: OpenTl.Schema.TInputMediaUploadedDocument.Stickers*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.Stickers
  isExternal: false
  name: Stickers
  nameWithType: TInputMediaUploadedDocument.Stickers
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.Stickers
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IInputDocument}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IInputDocument}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IInputDocument>
  nameWithType: TVector<IInputDocument>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IInputDocument>
  nameWithType.vb: TVector(Of IInputDocument)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IInputDocument)
  name.vb: TVector(Of IInputDocument)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IInputDocument
    name: IInputDocument
    nameWithType: IInputDocument
    fullName: OpenTl.Schema.IInputDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IInputDocument
    name: IInputDocument
    nameWithType: IInputDocument
    fullName: OpenTl.Schema.IInputDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds*
  commentId: Overload:OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
  isExternal: false
  name: TtlSeconds
  nameWithType: TInputMediaUploadedDocument.TtlSeconds
  fullName: OpenTl.Schema.TInputMediaUploadedDocument.TtlSeconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
