### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IAuthorization
  commentId: T:OpenTl.Schema.IAuthorization
  id: IAuthorization
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IAuthorization.ApiId
  - OpenTl.Schema.IAuthorization.AppName
  - OpenTl.Schema.IAuthorization.AppNameAsBinary
  - OpenTl.Schema.IAuthorization.AppVersion
  - OpenTl.Schema.IAuthorization.AppVersionAsBinary
  - OpenTl.Schema.IAuthorization.Country
  - OpenTl.Schema.IAuthorization.CountryAsBinary
  - OpenTl.Schema.IAuthorization.DateActive
  - OpenTl.Schema.IAuthorization.DateCreated
  - OpenTl.Schema.IAuthorization.DeviceModel
  - OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  - OpenTl.Schema.IAuthorization.Flags
  - OpenTl.Schema.IAuthorization.Hash
  - OpenTl.Schema.IAuthorization.Ip
  - OpenTl.Schema.IAuthorization.IpAsBinary
  - OpenTl.Schema.IAuthorization.Platform
  - OpenTl.Schema.IAuthorization.PlatformAsBinary
  - OpenTl.Schema.IAuthorization.Region
  - OpenTl.Schema.IAuthorization.RegionAsBinary
  - OpenTl.Schema.IAuthorization.SystemVersion
  - OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  langs:
  - csharp
  - vb
  name: IAuthorization
  nameWithType: IAuthorization
  fullName: OpenTl.Schema.IAuthorization
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IAuthorization
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IAuthorization : IObject'
    content.vb: >-
      Public Interface IAuthorization
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IAuthorization.Hash
  commentId: P:OpenTl.Schema.IAuthorization.Hash
  id: Hash
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: IAuthorization.Hash
  fullName: OpenTl.Schema.IAuthorization.Hash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Hash
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: long Hash { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Property Hash As Long
  overload: OpenTl.Schema.IAuthorization.Hash*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.Flags
  commentId: P:OpenTl.Schema.IAuthorization.Flags
  id: Flags
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IAuthorization.Flags
  fullName: OpenTl.Schema.IAuthorization.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Flags { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Flags As Integer
  overload: OpenTl.Schema.IAuthorization.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  id: DeviceModelAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: DeviceModelAsBinary
  nameWithType: IAuthorization.DeviceModelAsBinary
  fullName: OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModelAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] DeviceModelAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property DeviceModelAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.DeviceModelAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.DeviceModel
  commentId: P:OpenTl.Schema.IAuthorization.DeviceModel
  id: DeviceModel
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: DeviceModel
  nameWithType: IAuthorization.DeviceModel
  fullName: OpenTl.Schema.IAuthorization.DeviceModel
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModel
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 16
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string DeviceModel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property DeviceModel As String
  overload: OpenTl.Schema.IAuthorization.DeviceModel*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.PlatformAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.PlatformAsBinary
  id: PlatformAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: PlatformAsBinary
  nameWithType: IAuthorization.PlatformAsBinary
  fullName: OpenTl.Schema.IAuthorization.PlatformAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PlatformAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] PlatformAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property PlatformAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.PlatformAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.Platform
  commentId: P:OpenTl.Schema.IAuthorization.Platform
  id: Platform
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: IAuthorization.Platform
  fullName: OpenTl.Schema.IAuthorization.Platform
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Platform
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Platform { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Platform As String
  overload: OpenTl.Schema.IAuthorization.Platform*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  id: SystemVersionAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: SystemVersionAsBinary
  nameWithType: IAuthorization.SystemVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] SystemVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property SystemVersionAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.SystemVersionAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.SystemVersion
  commentId: P:OpenTl.Schema.IAuthorization.SystemVersion
  id: SystemVersion
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: SystemVersion
  nameWithType: IAuthorization.SystemVersion
  fullName: OpenTl.Schema.IAuthorization.SystemVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string SystemVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property SystemVersion As String
  overload: OpenTl.Schema.IAuthorization.SystemVersion*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.ApiId
  commentId: P:OpenTl.Schema.IAuthorization.ApiId
  id: ApiId
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: ApiId
  nameWithType: IAuthorization.ApiId
  fullName: OpenTl.Schema.IAuthorization.ApiId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiId
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int ApiId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property ApiId As Integer
  overload: OpenTl.Schema.IAuthorization.ApiId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.AppNameAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.AppNameAsBinary
  id: AppNameAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: AppNameAsBinary
  nameWithType: IAuthorization.AppNameAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppNameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppNameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] AppNameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property AppNameAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.AppNameAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.AppName
  commentId: P:OpenTl.Schema.IAuthorization.AppName
  id: AppName
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: IAuthorization.AppName
  fullName: OpenTl.Schema.IAuthorization.AppName
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppName
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string AppName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AppName As String
  overload: OpenTl.Schema.IAuthorization.AppName*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.AppVersionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.AppVersionAsBinary
  id: AppVersionAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: AppVersionAsBinary
  nameWithType: IAuthorization.AppVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] AppVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property AppVersionAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.AppVersionAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.AppVersion
  commentId: P:OpenTl.Schema.IAuthorization.AppVersion
  id: AppVersion
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: AppVersion
  nameWithType: IAuthorization.AppVersion
  fullName: OpenTl.Schema.IAuthorization.AppVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 30
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string AppVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AppVersion As String
  overload: OpenTl.Schema.IAuthorization.AppVersion*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.DateCreated
  commentId: P:OpenTl.Schema.IAuthorization.DateCreated
  id: DateCreated
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: DateCreated
  nameWithType: IAuthorization.DateCreated
  fullName: OpenTl.Schema.IAuthorization.DateCreated
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DateCreated
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int DateCreated { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property DateCreated As Integer
  overload: OpenTl.Schema.IAuthorization.DateCreated*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.DateActive
  commentId: P:OpenTl.Schema.IAuthorization.DateActive
  id: DateActive
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: DateActive
  nameWithType: IAuthorization.DateActive
  fullName: OpenTl.Schema.IAuthorization.DateActive
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DateActive
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 34
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int DateActive { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property DateActive As Integer
  overload: OpenTl.Schema.IAuthorization.DateActive*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.IpAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.IpAsBinary
  id: IpAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: IpAsBinary
  nameWithType: IAuthorization.IpAsBinary
  fullName: OpenTl.Schema.IAuthorization.IpAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IpAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] IpAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property IpAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.IpAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.Ip
  commentId: P:OpenTl.Schema.IAuthorization.Ip
  id: Ip
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: IAuthorization.Ip
  fullName: OpenTl.Schema.IAuthorization.Ip
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ip
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 37
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Ip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Ip As String
  overload: OpenTl.Schema.IAuthorization.Ip*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.CountryAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.CountryAsBinary
  id: CountryAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: CountryAsBinary
  nameWithType: IAuthorization.CountryAsBinary
  fullName: OpenTl.Schema.IAuthorization.CountryAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CountryAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] CountryAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property CountryAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.CountryAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.Country
  commentId: P:OpenTl.Schema.IAuthorization.Country
  id: Country
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: IAuthorization.Country
  fullName: OpenTl.Schema.IAuthorization.Country
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Country
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 40
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Country As String
  overload: OpenTl.Schema.IAuthorization.Country*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.RegionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.RegionAsBinary
  id: RegionAsBinary
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: RegionAsBinary
  nameWithType: IAuthorization.RegionAsBinary
  fullName: OpenTl.Schema.IAuthorization.RegionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RegionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 42
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] RegionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property RegionAsBinary As Byte()
  overload: OpenTl.Schema.IAuthorization.RegionAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IAuthorization.Region
  commentId: P:OpenTl.Schema.IAuthorization.Region
  id: Region
  parent: OpenTl.Schema.IAuthorization
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: IAuthorization.Region
  fullName: OpenTl.Schema.IAuthorization.Region
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Region
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/IAuthorization.cs
    startLine: 43
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Region { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Region As String
  overload: OpenTl.Schema.IAuthorization.Region*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IAuthorization.Hash*
  commentId: Overload:OpenTl.Schema.IAuthorization.Hash
  isExternal: false
  name: Hash
  nameWithType: IAuthorization.Hash
  fullName: OpenTl.Schema.IAuthorization.Hash
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.IAuthorization.Flags*
  commentId: Overload:OpenTl.Schema.IAuthorization.Flags
  isExternal: false
  name: Flags
  nameWithType: IAuthorization.Flags
  fullName: OpenTl.Schema.IAuthorization.Flags
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.IAuthorization.DeviceModelAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  isExternal: false
  name: DeviceModelAsBinary
  nameWithType: IAuthorization.DeviceModelAsBinary
  fullName: OpenTl.Schema.IAuthorization.DeviceModelAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.IAuthorization.DeviceModel*
  commentId: Overload:OpenTl.Schema.IAuthorization.DeviceModel
  isExternal: false
  name: DeviceModel
  nameWithType: IAuthorization.DeviceModel
  fullName: OpenTl.Schema.IAuthorization.DeviceModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.IAuthorization.PlatformAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.PlatformAsBinary
  isExternal: false
  name: PlatformAsBinary
  nameWithType: IAuthorization.PlatformAsBinary
  fullName: OpenTl.Schema.IAuthorization.PlatformAsBinary
- uid: OpenTl.Schema.IAuthorization.Platform*
  commentId: Overload:OpenTl.Schema.IAuthorization.Platform
  isExternal: false
  name: Platform
  nameWithType: IAuthorization.Platform
  fullName: OpenTl.Schema.IAuthorization.Platform
- uid: OpenTl.Schema.IAuthorization.SystemVersionAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  isExternal: false
  name: SystemVersionAsBinary
  nameWithType: IAuthorization.SystemVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.SystemVersionAsBinary
- uid: OpenTl.Schema.IAuthorization.SystemVersion*
  commentId: Overload:OpenTl.Schema.IAuthorization.SystemVersion
  isExternal: false
  name: SystemVersion
  nameWithType: IAuthorization.SystemVersion
  fullName: OpenTl.Schema.IAuthorization.SystemVersion
- uid: OpenTl.Schema.IAuthorization.ApiId*
  commentId: Overload:OpenTl.Schema.IAuthorization.ApiId
  isExternal: false
  name: ApiId
  nameWithType: IAuthorization.ApiId
  fullName: OpenTl.Schema.IAuthorization.ApiId
- uid: OpenTl.Schema.IAuthorization.AppNameAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.AppNameAsBinary
  isExternal: false
  name: AppNameAsBinary
  nameWithType: IAuthorization.AppNameAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppNameAsBinary
- uid: OpenTl.Schema.IAuthorization.AppName*
  commentId: Overload:OpenTl.Schema.IAuthorization.AppName
  isExternal: false
  name: AppName
  nameWithType: IAuthorization.AppName
  fullName: OpenTl.Schema.IAuthorization.AppName
- uid: OpenTl.Schema.IAuthorization.AppVersionAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.AppVersionAsBinary
  isExternal: false
  name: AppVersionAsBinary
  nameWithType: IAuthorization.AppVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppVersionAsBinary
- uid: OpenTl.Schema.IAuthorization.AppVersion*
  commentId: Overload:OpenTl.Schema.IAuthorization.AppVersion
  isExternal: false
  name: AppVersion
  nameWithType: IAuthorization.AppVersion
  fullName: OpenTl.Schema.IAuthorization.AppVersion
- uid: OpenTl.Schema.IAuthorization.DateCreated*
  commentId: Overload:OpenTl.Schema.IAuthorization.DateCreated
  isExternal: false
  name: DateCreated
  nameWithType: IAuthorization.DateCreated
  fullName: OpenTl.Schema.IAuthorization.DateCreated
- uid: OpenTl.Schema.IAuthorization.DateActive*
  commentId: Overload:OpenTl.Schema.IAuthorization.DateActive
  isExternal: false
  name: DateActive
  nameWithType: IAuthorization.DateActive
  fullName: OpenTl.Schema.IAuthorization.DateActive
- uid: OpenTl.Schema.IAuthorization.IpAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.IpAsBinary
  isExternal: false
  name: IpAsBinary
  nameWithType: IAuthorization.IpAsBinary
  fullName: OpenTl.Schema.IAuthorization.IpAsBinary
- uid: OpenTl.Schema.IAuthorization.Ip*
  commentId: Overload:OpenTl.Schema.IAuthorization.Ip
  isExternal: false
  name: Ip
  nameWithType: IAuthorization.Ip
  fullName: OpenTl.Schema.IAuthorization.Ip
- uid: OpenTl.Schema.IAuthorization.CountryAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.CountryAsBinary
  isExternal: false
  name: CountryAsBinary
  nameWithType: IAuthorization.CountryAsBinary
  fullName: OpenTl.Schema.IAuthorization.CountryAsBinary
- uid: OpenTl.Schema.IAuthorization.Country*
  commentId: Overload:OpenTl.Schema.IAuthorization.Country
  isExternal: false
  name: Country
  nameWithType: IAuthorization.Country
  fullName: OpenTl.Schema.IAuthorization.Country
- uid: OpenTl.Schema.IAuthorization.RegionAsBinary*
  commentId: Overload:OpenTl.Schema.IAuthorization.RegionAsBinary
  isExternal: false
  name: RegionAsBinary
  nameWithType: IAuthorization.RegionAsBinary
  fullName: OpenTl.Schema.IAuthorization.RegionAsBinary
- uid: OpenTl.Schema.IAuthorization.Region*
  commentId: Overload:OpenTl.Schema.IAuthorization.Region
  isExternal: false
  name: Region
  nameWithType: IAuthorization.Region
  fullName: OpenTl.Schema.IAuthorization.Region
