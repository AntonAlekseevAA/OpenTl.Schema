### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Auth.RequestSendCode
  commentId: T:OpenTl.Schema.Auth.RequestSendCode
  id: RequestSendCode
  parent: OpenTl.Schema.Auth
  children:
  - OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
  - OpenTl.Schema.Auth.RequestSendCode.ApiHash
  - OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
  - OpenTl.Schema.Auth.RequestSendCode.ApiId
  - OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
  - OpenTl.Schema.Auth.RequestSendCode.Flags
  - OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
  - OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
  langs:
  - csharp
  - vb
  name: RequestSendCode
  nameWithType: RequestSendCode
  fullName: OpenTl.Schema.Auth.RequestSendCode
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestSendCode
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: 'public class RequestSendCode : object, IRequest<ISentCode>, IRequest, IObject'
    content.vb: >-
      Public Class RequestSendCode

          Inherits Object

          Implements IRequest(Of ISentCode), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.Auth.ISentCode}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Auth.RequestSendCode.Flags
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.Flags
  id: Flags
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RequestSendCode.Flags
  fullName: OpenTl.Schema.Auth.RequestSendCode.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Auth.RequestSendCode.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
  id: AllowFlashcall
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: AllowFlashcall
  nameWithType: RequestSendCode.AllowFlashcall
  fullName: OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AllowFlashcall
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public bool AllowFlashcall { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowFlashcall As Boolean
  overload: OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
  id: PhoneNumberAsBinary
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: PhoneNumberAsBinary
  nameWithType: RequestSendCode.PhoneNumberAsBinary
  fullName: OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneNumberAsBinary
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  summary: Binary representation for the &apos;PhoneNumber&apos; property
  example: []
  syntax:
    content: public byte[] PhoneNumberAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PhoneNumberAsBinary As Byte()
  overload: OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
  id: PhoneNumber
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: RequestSendCode.PhoneNumber
  fullName: OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneNumber
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneNumber As String
  overload: OpenTl.Schema.Auth.RequestSendCode.PhoneNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
  id: CurrentNumber
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: CurrentNumber
  nameWithType: RequestSendCode.CurrentNumber
  fullName: OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CurrentNumber
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public bool CurrentNumber { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CurrentNumber As Boolean
  overload: OpenTl.Schema.Auth.RequestSendCode.CurrentNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiId
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.ApiId
  id: ApiId
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: ApiId
  nameWithType: RequestSendCode.ApiId
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiId
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public int ApiId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ApiId As Integer
  overload: OpenTl.Schema.Auth.RequestSendCode.ApiId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
  id: ApiHashAsBinary
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: ApiHashAsBinary
  nameWithType: RequestSendCode.ApiHashAsBinary
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiHashAsBinary
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  summary: Binary representation for the &apos;ApiHash&apos; property
  example: []
  syntax:
    content: public byte[] ApiHashAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property ApiHashAsBinary As Byte()
  overload: OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiHash
  commentId: P:OpenTl.Schema.Auth.RequestSendCode.ApiHash
  id: ApiHash
  parent: OpenTl.Schema.Auth.RequestSendCode
  langs:
  - csharp
  - vb
  name: ApiHash
  nameWithType: RequestSendCode.ApiHash
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiHash
    path: ../src/OpenTl.Schema/_generated/Auth/RequestSendCode.cs
    startLine: 40
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: public string ApiHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApiHash As String
  overload: OpenTl.Schema.Auth.RequestSendCode.ApiHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Auth
  commentId: N:OpenTl.Schema.Auth
  isExternal: false
  name: OpenTl.Schema.Auth
  nameWithType: OpenTl.Schema.Auth
  fullName: OpenTl.Schema.Auth
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.Auth.ISentCode}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.Auth.ISentCode}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<ISentCode>
  nameWithType: IRequest<ISentCode>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.Auth.ISentCode>
  nameWithType.vb: IRequest(Of ISentCode)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.Auth.ISentCode)
  name.vb: IRequest(Of ISentCode)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.Auth.ISentCode
    name: ISentCode
    nameWithType: ISentCode
    fullName: OpenTl.Schema.Auth.ISentCode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.Auth.ISentCode
    name: ISentCode
    nameWithType: ISentCode
    fullName: OpenTl.Schema.Auth.ISentCode
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Auth.RequestSendCode.Flags*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.Flags
  isExternal: false
  name: Flags
  nameWithType: RequestSendCode.Flags
  fullName: OpenTl.Schema.Auth.RequestSendCode.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
  isExternal: false
  name: AllowFlashcall
  nameWithType: RequestSendCode.AllowFlashcall
  fullName: OpenTl.Schema.Auth.RequestSendCode.AllowFlashcall
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
  isExternal: false
  name: PhoneNumberAsBinary
  nameWithType: RequestSendCode.PhoneNumberAsBinary
  fullName: OpenTl.Schema.Auth.RequestSendCode.PhoneNumberAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Auth.RequestSendCode.PhoneNumber*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
  isExternal: false
  name: PhoneNumber
  nameWithType: RequestSendCode.PhoneNumber
  fullName: OpenTl.Schema.Auth.RequestSendCode.PhoneNumber
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Auth.RequestSendCode.CurrentNumber*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
  isExternal: false
  name: CurrentNumber
  nameWithType: RequestSendCode.CurrentNumber
  fullName: OpenTl.Schema.Auth.RequestSendCode.CurrentNumber
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiId*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.ApiId
  isExternal: false
  name: ApiId
  nameWithType: RequestSendCode.ApiId
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
  isExternal: false
  name: ApiHashAsBinary
  nameWithType: RequestSendCode.ApiHashAsBinary
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiHashAsBinary
- uid: OpenTl.Schema.Auth.RequestSendCode.ApiHash*
  commentId: Overload:OpenTl.Schema.Auth.RequestSendCode.ApiHash
  isExternal: false
  name: ApiHash
  nameWithType: RequestSendCode.ApiHash
  fullName: OpenTl.Schema.Auth.RequestSendCode.ApiHash
