### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification
  commentId: T:OpenTl.Schema.Messages.RequestSendScreenshotNotification
  id: RequestSendScreenshotNotification
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
  - OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
  - OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
  langs:
  - csharp
  - vb
  name: RequestSendScreenshotNotification
  nameWithType: RequestSendScreenshotNotification
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestSendScreenshotNotification
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestSendScreenshotNotification : object, IRequest<IUpdates>, IRequest, IObject'
    content.vb: >-
      Public Class RequestSendScreenshotNotification

          Inherits Object

          Implements IRequest(Of IUpdates), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.IUpdates}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
  commentId: P:OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
  id: Peer
  parent: OpenTl.Schema.Messages.RequestSendScreenshotNotification
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: RequestSendScreenshotNotification.Peer
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Peer
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public IInputPeer Peer { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputPeer
    content.vb: Public Property Peer As IInputPeer
  overload: OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
  commentId: P:OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
  id: ReplyToMsgId
  parent: OpenTl.Schema.Messages.RequestSendScreenshotNotification
  langs:
  - csharp
  - vb
  name: ReplyToMsgId
  nameWithType: RequestSendScreenshotNotification.ReplyToMsgId
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ReplyToMsgId
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public int ReplyToMsgId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReplyToMsgId As Integer
  overload: OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
  commentId: P:OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
  id: RandomId
  parent: OpenTl.Schema.Messages.RequestSendScreenshotNotification
  langs:
  - csharp
  - vb
  name: RandomId
  nameWithType: RequestSendScreenshotNotification.RandomId
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RandomId
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSendScreenshotNotification.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public long RandomId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property RandomId As Long
  overload: OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.IUpdates}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.IUpdates}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IUpdates>
  nameWithType: IRequest<IUpdates>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.IUpdates>
  nameWithType.vb: IRequest(Of IUpdates)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.IUpdates)
  name.vb: IRequest(Of IUpdates)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IUpdates
    name: IUpdates
    nameWithType: IUpdates
    fullName: OpenTl.Schema.IUpdates
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IUpdates
    name: IUpdates
    nameWithType: IUpdates
    fullName: OpenTl.Schema.IUpdates
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer*
  commentId: Overload:OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
  isExternal: false
  name: Peer
  nameWithType: RequestSendScreenshotNotification.Peer
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.Peer
- uid: OpenTl.Schema.IInputPeer
  commentId: T:OpenTl.Schema.IInputPeer
  parent: OpenTl.Schema
  isExternal: false
  name: IInputPeer
  nameWithType: IInputPeer
  fullName: OpenTl.Schema.IInputPeer
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId*
  commentId: Overload:OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
  isExternal: false
  name: ReplyToMsgId
  nameWithType: RequestSendScreenshotNotification.ReplyToMsgId
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.ReplyToMsgId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId*
  commentId: Overload:OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
  isExternal: false
  name: RandomId
  nameWithType: RequestSendScreenshotNotification.RandomId
  fullName: OpenTl.Schema.Messages.RequestSendScreenshotNotification.RandomId
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
