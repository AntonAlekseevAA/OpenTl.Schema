### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TAuthorization
  commentId: T:OpenTl.Schema.TAuthorization
  id: TAuthorization
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TAuthorization.ApiId
  - OpenTl.Schema.TAuthorization.AppName
  - OpenTl.Schema.TAuthorization.AppNameAsBinary
  - OpenTl.Schema.TAuthorization.AppVersion
  - OpenTl.Schema.TAuthorization.AppVersionAsBinary
  - OpenTl.Schema.TAuthorization.Country
  - OpenTl.Schema.TAuthorization.CountryAsBinary
  - OpenTl.Schema.TAuthorization.DateActive
  - OpenTl.Schema.TAuthorization.DateCreated
  - OpenTl.Schema.TAuthorization.DeviceModel
  - OpenTl.Schema.TAuthorization.DeviceModelAsBinary
  - OpenTl.Schema.TAuthorization.Flags
  - OpenTl.Schema.TAuthorization.Hash
  - OpenTl.Schema.TAuthorization.Ip
  - OpenTl.Schema.TAuthorization.IpAsBinary
  - OpenTl.Schema.TAuthorization.Platform
  - OpenTl.Schema.TAuthorization.PlatformAsBinary
  - OpenTl.Schema.TAuthorization.Region
  - OpenTl.Schema.TAuthorization.RegionAsBinary
  - OpenTl.Schema.TAuthorization.SystemVersion
  - OpenTl.Schema.TAuthorization.SystemVersionAsBinary
  langs:
  - csharp
  - vb
  name: TAuthorization
  nameWithType: TAuthorization
  fullName: OpenTl.Schema.TAuthorization
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TAuthorization
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TAuthorization : object, IAuthorization, IObject'
    content.vb: >-
      Public Class TAuthorization

          Inherits Object

          Implements IAuthorization, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IAuthorization
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TAuthorization.Hash
  commentId: P:OpenTl.Schema.TAuthorization.Hash
  id: Hash
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: TAuthorization.Hash
  fullName: OpenTl.Schema.TAuthorization.Hash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Hash
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Hash { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Hash As Long
  overload: OpenTl.Schema.TAuthorization.Hash*
  implements:
  - OpenTl.Schema.IAuthorization.Hash
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.Flags
  commentId: P:OpenTl.Schema.TAuthorization.Flags
  id: Flags
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TAuthorization.Flags
  fullName: OpenTl.Schema.TAuthorization.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Flags { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Flags As Integer
  overload: OpenTl.Schema.TAuthorization.Flags*
  implements:
  - OpenTl.Schema.IAuthorization.Flags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.DeviceModelAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.DeviceModelAsBinary
  id: DeviceModelAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: DeviceModelAsBinary
  nameWithType: TAuthorization.DeviceModelAsBinary
  fullName: OpenTl.Schema.TAuthorization.DeviceModelAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModelAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;DeviceModel&apos; property
  example: []
  syntax:
    content: public byte[] DeviceModelAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property DeviceModelAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.DeviceModelAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.DeviceModel
  commentId: P:OpenTl.Schema.TAuthorization.DeviceModel
  id: DeviceModel
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: DeviceModel
  nameWithType: TAuthorization.DeviceModel
  fullName: OpenTl.Schema.TAuthorization.DeviceModel
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModel
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string DeviceModel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DeviceModel As String
  overload: OpenTl.Schema.TAuthorization.DeviceModel*
  implements:
  - OpenTl.Schema.IAuthorization.DeviceModel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.PlatformAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.PlatformAsBinary
  id: PlatformAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: PlatformAsBinary
  nameWithType: TAuthorization.PlatformAsBinary
  fullName: OpenTl.Schema.TAuthorization.PlatformAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PlatformAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Platform&apos; property
  example: []
  syntax:
    content: public byte[] PlatformAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PlatformAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.PlatformAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.PlatformAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.Platform
  commentId: P:OpenTl.Schema.TAuthorization.Platform
  id: Platform
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: TAuthorization.Platform
  fullName: OpenTl.Schema.TAuthorization.Platform
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Platform
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Platform { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Platform As String
  overload: OpenTl.Schema.TAuthorization.Platform*
  implements:
  - OpenTl.Schema.IAuthorization.Platform
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.SystemVersionAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.SystemVersionAsBinary
  id: SystemVersionAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: SystemVersionAsBinary
  nameWithType: TAuthorization.SystemVersionAsBinary
  fullName: OpenTl.Schema.TAuthorization.SystemVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 35
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;SystemVersion&apos; property
  example: []
  syntax:
    content: public byte[] SystemVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SystemVersionAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.SystemVersionAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.SystemVersion
  commentId: P:OpenTl.Schema.TAuthorization.SystemVersion
  id: SystemVersion
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: SystemVersion
  nameWithType: TAuthorization.SystemVersion
  fullName: OpenTl.Schema.TAuthorization.SystemVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string SystemVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemVersion As String
  overload: OpenTl.Schema.TAuthorization.SystemVersion*
  implements:
  - OpenTl.Schema.IAuthorization.SystemVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.ApiId
  commentId: P:OpenTl.Schema.TAuthorization.ApiId
  id: ApiId
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: ApiId
  nameWithType: TAuthorization.ApiId
  fullName: OpenTl.Schema.TAuthorization.ApiId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiId
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 41
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int ApiId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ApiId As Integer
  overload: OpenTl.Schema.TAuthorization.ApiId*
  implements:
  - OpenTl.Schema.IAuthorization.ApiId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.AppNameAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.AppNameAsBinary
  id: AppNameAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: AppNameAsBinary
  nameWithType: TAuthorization.AppNameAsBinary
  fullName: OpenTl.Schema.TAuthorization.AppNameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppNameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 45
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;AppName&apos; property
  example: []
  syntax:
    content: public byte[] AppNameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AppNameAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.AppNameAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.AppNameAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.AppName
  commentId: P:OpenTl.Schema.TAuthorization.AppName
  id: AppName
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: TAuthorization.AppName
  fullName: OpenTl.Schema.TAuthorization.AppName
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppName
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 49
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string AppName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppName As String
  overload: OpenTl.Schema.TAuthorization.AppName*
  implements:
  - OpenTl.Schema.IAuthorization.AppName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.AppVersionAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.AppVersionAsBinary
  id: AppVersionAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: AppVersionAsBinary
  nameWithType: TAuthorization.AppVersionAsBinary
  fullName: OpenTl.Schema.TAuthorization.AppVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 52
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;AppVersion&apos; property
  example: []
  syntax:
    content: public byte[] AppVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AppVersionAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.AppVersionAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.AppVersionAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.AppVersion
  commentId: P:OpenTl.Schema.TAuthorization.AppVersion
  id: AppVersion
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: AppVersion
  nameWithType: TAuthorization.AppVersion
  fullName: OpenTl.Schema.TAuthorization.AppVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 56
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string AppVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppVersion As String
  overload: OpenTl.Schema.TAuthorization.AppVersion*
  implements:
  - OpenTl.Schema.IAuthorization.AppVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.DateCreated
  commentId: P:OpenTl.Schema.TAuthorization.DateCreated
  id: DateCreated
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: DateCreated
  nameWithType: TAuthorization.DateCreated
  fullName: OpenTl.Schema.TAuthorization.DateCreated
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DateCreated
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 58
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int DateCreated { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DateCreated As Integer
  overload: OpenTl.Schema.TAuthorization.DateCreated*
  implements:
  - OpenTl.Schema.IAuthorization.DateCreated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.DateActive
  commentId: P:OpenTl.Schema.TAuthorization.DateActive
  id: DateActive
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: DateActive
  nameWithType: TAuthorization.DateActive
  fullName: OpenTl.Schema.TAuthorization.DateActive
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DateActive
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 61
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int DateActive { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DateActive As Integer
  overload: OpenTl.Schema.TAuthorization.DateActive*
  implements:
  - OpenTl.Schema.IAuthorization.DateActive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.IpAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.IpAsBinary
  id: IpAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: IpAsBinary
  nameWithType: TAuthorization.IpAsBinary
  fullName: OpenTl.Schema.TAuthorization.IpAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IpAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 65
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Ip&apos; property
  example: []
  syntax:
    content: public byte[] IpAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property IpAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.IpAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.IpAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.Ip
  commentId: P:OpenTl.Schema.TAuthorization.Ip
  id: Ip
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: TAuthorization.Ip
  fullName: OpenTl.Schema.TAuthorization.Ip
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ip
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 69
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Ip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Ip As String
  overload: OpenTl.Schema.TAuthorization.Ip*
  implements:
  - OpenTl.Schema.IAuthorization.Ip
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.CountryAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.CountryAsBinary
  id: CountryAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: CountryAsBinary
  nameWithType: TAuthorization.CountryAsBinary
  fullName: OpenTl.Schema.TAuthorization.CountryAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CountryAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 72
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Country&apos; property
  example: []
  syntax:
    content: public byte[] CountryAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property CountryAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.CountryAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.CountryAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.Country
  commentId: P:OpenTl.Schema.TAuthorization.Country
  id: Country
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: TAuthorization.Country
  fullName: OpenTl.Schema.TAuthorization.Country
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Country
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 76
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: OpenTl.Schema.TAuthorization.Country*
  implements:
  - OpenTl.Schema.IAuthorization.Country
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.RegionAsBinary
  commentId: P:OpenTl.Schema.TAuthorization.RegionAsBinary
  id: RegionAsBinary
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: RegionAsBinary
  nameWithType: TAuthorization.RegionAsBinary
  fullName: OpenTl.Schema.TAuthorization.RegionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RegionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 79
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Region&apos; property
  example: []
  syntax:
    content: public byte[] RegionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property RegionAsBinary As Byte()
  overload: OpenTl.Schema.TAuthorization.RegionAsBinary*
  implements:
  - OpenTl.Schema.IAuthorization.RegionAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TAuthorization.Region
  commentId: P:OpenTl.Schema.TAuthorization.Region
  id: Region
  parent: OpenTl.Schema.TAuthorization
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: TAuthorization.Region
  fullName: OpenTl.Schema.TAuthorization.Region
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Region
    path: ../src/OpenTl.Schema/_generated/_Entities/Authorization/TAuthorization.cs
    startLine: 83
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Region { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Region As String
  overload: OpenTl.Schema.TAuthorization.Region*
  implements:
  - OpenTl.Schema.IAuthorization.Region
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IAuthorization
  commentId: T:OpenTl.Schema.IAuthorization
  parent: OpenTl.Schema
  isExternal: false
  name: IAuthorization
  nameWithType: IAuthorization
  fullName: OpenTl.Schema.IAuthorization
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.TAuthorization.Hash*
  commentId: Overload:OpenTl.Schema.TAuthorization.Hash
  isExternal: false
  name: Hash
  nameWithType: TAuthorization.Hash
  fullName: OpenTl.Schema.TAuthorization.Hash
- uid: OpenTl.Schema.IAuthorization.Hash
  commentId: P:OpenTl.Schema.IAuthorization.Hash
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Hash
  nameWithType: IAuthorization.Hash
  fullName: OpenTl.Schema.IAuthorization.Hash
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TAuthorization.Flags*
  commentId: Overload:OpenTl.Schema.TAuthorization.Flags
  isExternal: false
  name: Flags
  nameWithType: TAuthorization.Flags
  fullName: OpenTl.Schema.TAuthorization.Flags
- uid: OpenTl.Schema.IAuthorization.Flags
  commentId: P:OpenTl.Schema.IAuthorization.Flags
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Flags
  nameWithType: IAuthorization.Flags
  fullName: OpenTl.Schema.IAuthorization.Flags
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TAuthorization.DeviceModelAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.DeviceModelAsBinary
  isExternal: false
  name: DeviceModelAsBinary
  nameWithType: TAuthorization.DeviceModelAsBinary
  fullName: OpenTl.Schema.TAuthorization.DeviceModelAsBinary
- uid: OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.DeviceModelAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: DeviceModelAsBinary
  nameWithType: IAuthorization.DeviceModelAsBinary
  fullName: OpenTl.Schema.IAuthorization.DeviceModelAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TAuthorization.DeviceModel*
  commentId: Overload:OpenTl.Schema.TAuthorization.DeviceModel
  isExternal: false
  name: DeviceModel
  nameWithType: TAuthorization.DeviceModel
  fullName: OpenTl.Schema.TAuthorization.DeviceModel
- uid: OpenTl.Schema.IAuthorization.DeviceModel
  commentId: P:OpenTl.Schema.IAuthorization.DeviceModel
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: DeviceModel
  nameWithType: IAuthorization.DeviceModel
  fullName: OpenTl.Schema.IAuthorization.DeviceModel
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TAuthorization.PlatformAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.PlatformAsBinary
  isExternal: false
  name: PlatformAsBinary
  nameWithType: TAuthorization.PlatformAsBinary
  fullName: OpenTl.Schema.TAuthorization.PlatformAsBinary
- uid: OpenTl.Schema.IAuthorization.PlatformAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.PlatformAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: PlatformAsBinary
  nameWithType: IAuthorization.PlatformAsBinary
  fullName: OpenTl.Schema.IAuthorization.PlatformAsBinary
- uid: OpenTl.Schema.TAuthorization.Platform*
  commentId: Overload:OpenTl.Schema.TAuthorization.Platform
  isExternal: false
  name: Platform
  nameWithType: TAuthorization.Platform
  fullName: OpenTl.Schema.TAuthorization.Platform
- uid: OpenTl.Schema.IAuthorization.Platform
  commentId: P:OpenTl.Schema.IAuthorization.Platform
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Platform
  nameWithType: IAuthorization.Platform
  fullName: OpenTl.Schema.IAuthorization.Platform
- uid: OpenTl.Schema.TAuthorization.SystemVersionAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.SystemVersionAsBinary
  isExternal: false
  name: SystemVersionAsBinary
  nameWithType: TAuthorization.SystemVersionAsBinary
  fullName: OpenTl.Schema.TAuthorization.SystemVersionAsBinary
- uid: OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.SystemVersionAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: SystemVersionAsBinary
  nameWithType: IAuthorization.SystemVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.SystemVersionAsBinary
- uid: OpenTl.Schema.TAuthorization.SystemVersion*
  commentId: Overload:OpenTl.Schema.TAuthorization.SystemVersion
  isExternal: false
  name: SystemVersion
  nameWithType: TAuthorization.SystemVersion
  fullName: OpenTl.Schema.TAuthorization.SystemVersion
- uid: OpenTl.Schema.IAuthorization.SystemVersion
  commentId: P:OpenTl.Schema.IAuthorization.SystemVersion
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: SystemVersion
  nameWithType: IAuthorization.SystemVersion
  fullName: OpenTl.Schema.IAuthorization.SystemVersion
- uid: OpenTl.Schema.TAuthorization.ApiId*
  commentId: Overload:OpenTl.Schema.TAuthorization.ApiId
  isExternal: false
  name: ApiId
  nameWithType: TAuthorization.ApiId
  fullName: OpenTl.Schema.TAuthorization.ApiId
- uid: OpenTl.Schema.IAuthorization.ApiId
  commentId: P:OpenTl.Schema.IAuthorization.ApiId
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: ApiId
  nameWithType: IAuthorization.ApiId
  fullName: OpenTl.Schema.IAuthorization.ApiId
- uid: OpenTl.Schema.TAuthorization.AppNameAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.AppNameAsBinary
  isExternal: false
  name: AppNameAsBinary
  nameWithType: TAuthorization.AppNameAsBinary
  fullName: OpenTl.Schema.TAuthorization.AppNameAsBinary
- uid: OpenTl.Schema.IAuthorization.AppNameAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.AppNameAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: AppNameAsBinary
  nameWithType: IAuthorization.AppNameAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppNameAsBinary
- uid: OpenTl.Schema.TAuthorization.AppName*
  commentId: Overload:OpenTl.Schema.TAuthorization.AppName
  isExternal: false
  name: AppName
  nameWithType: TAuthorization.AppName
  fullName: OpenTl.Schema.TAuthorization.AppName
- uid: OpenTl.Schema.IAuthorization.AppName
  commentId: P:OpenTl.Schema.IAuthorization.AppName
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: AppName
  nameWithType: IAuthorization.AppName
  fullName: OpenTl.Schema.IAuthorization.AppName
- uid: OpenTl.Schema.TAuthorization.AppVersionAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.AppVersionAsBinary
  isExternal: false
  name: AppVersionAsBinary
  nameWithType: TAuthorization.AppVersionAsBinary
  fullName: OpenTl.Schema.TAuthorization.AppVersionAsBinary
- uid: OpenTl.Schema.IAuthorization.AppVersionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.AppVersionAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: AppVersionAsBinary
  nameWithType: IAuthorization.AppVersionAsBinary
  fullName: OpenTl.Schema.IAuthorization.AppVersionAsBinary
- uid: OpenTl.Schema.TAuthorization.AppVersion*
  commentId: Overload:OpenTl.Schema.TAuthorization.AppVersion
  isExternal: false
  name: AppVersion
  nameWithType: TAuthorization.AppVersion
  fullName: OpenTl.Schema.TAuthorization.AppVersion
- uid: OpenTl.Schema.IAuthorization.AppVersion
  commentId: P:OpenTl.Schema.IAuthorization.AppVersion
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: AppVersion
  nameWithType: IAuthorization.AppVersion
  fullName: OpenTl.Schema.IAuthorization.AppVersion
- uid: OpenTl.Schema.TAuthorization.DateCreated*
  commentId: Overload:OpenTl.Schema.TAuthorization.DateCreated
  isExternal: false
  name: DateCreated
  nameWithType: TAuthorization.DateCreated
  fullName: OpenTl.Schema.TAuthorization.DateCreated
- uid: OpenTl.Schema.IAuthorization.DateCreated
  commentId: P:OpenTl.Schema.IAuthorization.DateCreated
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: DateCreated
  nameWithType: IAuthorization.DateCreated
  fullName: OpenTl.Schema.IAuthorization.DateCreated
- uid: OpenTl.Schema.TAuthorization.DateActive*
  commentId: Overload:OpenTl.Schema.TAuthorization.DateActive
  isExternal: false
  name: DateActive
  nameWithType: TAuthorization.DateActive
  fullName: OpenTl.Schema.TAuthorization.DateActive
- uid: OpenTl.Schema.IAuthorization.DateActive
  commentId: P:OpenTl.Schema.IAuthorization.DateActive
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: DateActive
  nameWithType: IAuthorization.DateActive
  fullName: OpenTl.Schema.IAuthorization.DateActive
- uid: OpenTl.Schema.TAuthorization.IpAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.IpAsBinary
  isExternal: false
  name: IpAsBinary
  nameWithType: TAuthorization.IpAsBinary
  fullName: OpenTl.Schema.TAuthorization.IpAsBinary
- uid: OpenTl.Schema.IAuthorization.IpAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.IpAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: IpAsBinary
  nameWithType: IAuthorization.IpAsBinary
  fullName: OpenTl.Schema.IAuthorization.IpAsBinary
- uid: OpenTl.Schema.TAuthorization.Ip*
  commentId: Overload:OpenTl.Schema.TAuthorization.Ip
  isExternal: false
  name: Ip
  nameWithType: TAuthorization.Ip
  fullName: OpenTl.Schema.TAuthorization.Ip
- uid: OpenTl.Schema.IAuthorization.Ip
  commentId: P:OpenTl.Schema.IAuthorization.Ip
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Ip
  nameWithType: IAuthorization.Ip
  fullName: OpenTl.Schema.IAuthorization.Ip
- uid: OpenTl.Schema.TAuthorization.CountryAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.CountryAsBinary
  isExternal: false
  name: CountryAsBinary
  nameWithType: TAuthorization.CountryAsBinary
  fullName: OpenTl.Schema.TAuthorization.CountryAsBinary
- uid: OpenTl.Schema.IAuthorization.CountryAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.CountryAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: CountryAsBinary
  nameWithType: IAuthorization.CountryAsBinary
  fullName: OpenTl.Schema.IAuthorization.CountryAsBinary
- uid: OpenTl.Schema.TAuthorization.Country*
  commentId: Overload:OpenTl.Schema.TAuthorization.Country
  isExternal: false
  name: Country
  nameWithType: TAuthorization.Country
  fullName: OpenTl.Schema.TAuthorization.Country
- uid: OpenTl.Schema.IAuthorization.Country
  commentId: P:OpenTl.Schema.IAuthorization.Country
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Country
  nameWithType: IAuthorization.Country
  fullName: OpenTl.Schema.IAuthorization.Country
- uid: OpenTl.Schema.TAuthorization.RegionAsBinary*
  commentId: Overload:OpenTl.Schema.TAuthorization.RegionAsBinary
  isExternal: false
  name: RegionAsBinary
  nameWithType: TAuthorization.RegionAsBinary
  fullName: OpenTl.Schema.TAuthorization.RegionAsBinary
- uid: OpenTl.Schema.IAuthorization.RegionAsBinary
  commentId: P:OpenTl.Schema.IAuthorization.RegionAsBinary
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: RegionAsBinary
  nameWithType: IAuthorization.RegionAsBinary
  fullName: OpenTl.Schema.IAuthorization.RegionAsBinary
- uid: OpenTl.Schema.TAuthorization.Region*
  commentId: Overload:OpenTl.Schema.TAuthorization.Region
  isExternal: false
  name: Region
  nameWithType: TAuthorization.Region
  fullName: OpenTl.Schema.TAuthorization.Region
- uid: OpenTl.Schema.IAuthorization.Region
  commentId: P:OpenTl.Schema.IAuthorization.Region
  parent: OpenTl.Schema.IAuthorization
  isExternal: false
  name: Region
  nameWithType: IAuthorization.Region
  fullName: OpenTl.Schema.IAuthorization.Region
