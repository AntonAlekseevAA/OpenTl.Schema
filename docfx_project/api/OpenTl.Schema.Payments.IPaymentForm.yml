### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Payments.IPaymentForm
  commentId: T:OpenTl.Schema.Payments.IPaymentForm
  id: IPaymentForm
  parent: OpenTl.Schema.Payments
  children:
  - OpenTl.Schema.Payments.IPaymentForm.BotId
  - OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
  - OpenTl.Schema.Payments.IPaymentForm.Flags
  - OpenTl.Schema.Payments.IPaymentForm.Invoice
  - OpenTl.Schema.Payments.IPaymentForm.NativeParams
  - OpenTl.Schema.Payments.IPaymentForm.NativeProvider
  - OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
  - OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
  - OpenTl.Schema.Payments.IPaymentForm.ProviderId
  - OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
  - OpenTl.Schema.Payments.IPaymentForm.SavedInfo
  - OpenTl.Schema.Payments.IPaymentForm.Url
  - OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
  - OpenTl.Schema.Payments.IPaymentForm.Users
  langs:
  - csharp
  - vb
  name: IPaymentForm
  nameWithType: IPaymentForm
  fullName: OpenTl.Schema.Payments.IPaymentForm
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IPaymentForm
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: 'public interface IPaymentForm : IObject'
    content.vb: >-
      Public Interface IPaymentForm

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Payments.IPaymentForm.Flags
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.Flags
  id: Flags
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IPaymentForm.Flags
  fullName: OpenTl.Schema.Payments.IPaymentForm.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Property Flags As BitArray
  overload: OpenTl.Schema.Payments.IPaymentForm.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
  id: CanSaveCredentials
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: CanSaveCredentials
  nameWithType: IPaymentForm.CanSaveCredentials
  fullName: OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CanSaveCredentials
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: bool CanSaveCredentials { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property CanSaveCredentials As Boolean
  overload: OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
  id: PasswordMissing
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: PasswordMissing
  nameWithType: IPaymentForm.PasswordMissing
  fullName: OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PasswordMissing
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: bool PasswordMissing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property PasswordMissing As Boolean
  overload: OpenTl.Schema.Payments.IPaymentForm.PasswordMissing*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.BotId
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.BotId
  id: BotId
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: BotId
  nameWithType: IPaymentForm.BotId
  fullName: OpenTl.Schema.Payments.IPaymentForm.BotId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: BotId
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: int BotId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property BotId As Integer
  overload: OpenTl.Schema.Payments.IPaymentForm.BotId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.Invoice
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.Invoice
  id: Invoice
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: Invoice
  nameWithType: IPaymentForm.Invoice
  fullName: OpenTl.Schema.Payments.IPaymentForm.Invoice
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Invoice
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: IInvoice Invoice { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInvoice
    content.vb: Property Invoice As IInvoice
  overload: OpenTl.Schema.Payments.IPaymentForm.Invoice*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.ProviderId
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.ProviderId
  id: ProviderId
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: ProviderId
  nameWithType: IPaymentForm.ProviderId
  fullName: OpenTl.Schema.Payments.IPaymentForm.ProviderId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ProviderId
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: int ProviderId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property ProviderId As Integer
  overload: OpenTl.Schema.Payments.IPaymentForm.ProviderId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
  id: UrlAsBinary
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: UrlAsBinary
  nameWithType: IPaymentForm.UrlAsBinary
  fullName: OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UrlAsBinary
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 23
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: byte[] UrlAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property UrlAsBinary As Byte()
  overload: OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.Url
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.Url
  id: Url
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: IPaymentForm.Url
  fullName: OpenTl.Schema.Payments.IPaymentForm.Url
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Url
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: string Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Url As String
  overload: OpenTl.Schema.Payments.IPaymentForm.Url*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
  id: NativeProviderAsBinary
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: NativeProviderAsBinary
  nameWithType: IPaymentForm.NativeProviderAsBinary
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NativeProviderAsBinary
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: byte[] NativeProviderAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property NativeProviderAsBinary As Byte()
  overload: OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeProvider
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.NativeProvider
  id: NativeProvider
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: NativeProvider
  nameWithType: IPaymentForm.NativeProvider
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeProvider
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NativeProvider
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: string NativeProvider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property NativeProvider As String
  overload: OpenTl.Schema.Payments.IPaymentForm.NativeProvider*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeParams
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.NativeParams
  id: NativeParams
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: NativeParams
  nameWithType: IPaymentForm.NativeParams
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeParams
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NativeParams
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: IDataJSON NativeParams { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IDataJSON
    content.vb: Property NativeParams As IDataJSON
  overload: OpenTl.Schema.Payments.IPaymentForm.NativeParams*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.SavedInfo
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.SavedInfo
  id: SavedInfo
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: SavedInfo
  nameWithType: IPaymentForm.SavedInfo
  fullName: OpenTl.Schema.Payments.IPaymentForm.SavedInfo
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SavedInfo
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 31
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: IPaymentRequestedInfo SavedInfo { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPaymentRequestedInfo
    content.vb: Property SavedInfo As IPaymentRequestedInfo
  overload: OpenTl.Schema.Payments.IPaymentForm.SavedInfo*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
  id: SavedCredentials
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: SavedCredentials
  nameWithType: IPaymentForm.SavedCredentials
  fullName: OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SavedCredentials
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 33
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: IPaymentSavedCredentials SavedCredentials { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPaymentSavedCredentials
    content.vb: Property SavedCredentials As IPaymentSavedCredentials
  overload: OpenTl.Schema.Payments.IPaymentForm.SavedCredentials*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Payments.IPaymentForm.Users
  commentId: P:OpenTl.Schema.Payments.IPaymentForm.Users
  id: Users
  parent: OpenTl.Schema.Payments.IPaymentForm
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: IPaymentForm.Users
  fullName: OpenTl.Schema.Payments.IPaymentForm.Users
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Users
    path: ../src/OpenTl.Schema/_generated/Payments/PaymentForm/IPaymentForm.cs
    startLine: 35
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: TVector<IUser> Users { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
    content.vb: Property Users As TVector(Of IUser)
  overload: OpenTl.Schema.Payments.IPaymentForm.Users*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Payments
  commentId: N:OpenTl.Schema.Payments
  isExternal: false
  name: OpenTl.Schema.Payments
  nameWithType: OpenTl.Schema.Payments
  fullName: OpenTl.Schema.Payments
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Payments.IPaymentForm.Flags*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.Flags
  isExternal: false
  name: Flags
  nameWithType: IPaymentForm.Flags
  fullName: OpenTl.Schema.Payments.IPaymentForm.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
  isExternal: false
  name: CanSaveCredentials
  nameWithType: IPaymentForm.CanSaveCredentials
  fullName: OpenTl.Schema.Payments.IPaymentForm.CanSaveCredentials
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Payments.IPaymentForm.PasswordMissing*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
  isExternal: false
  name: PasswordMissing
  nameWithType: IPaymentForm.PasswordMissing
  fullName: OpenTl.Schema.Payments.IPaymentForm.PasswordMissing
- uid: OpenTl.Schema.Payments.IPaymentForm.BotId*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.BotId
  isExternal: false
  name: BotId
  nameWithType: IPaymentForm.BotId
  fullName: OpenTl.Schema.Payments.IPaymentForm.BotId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Payments.IPaymentForm.Invoice*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.Invoice
  isExternal: false
  name: Invoice
  nameWithType: IPaymentForm.Invoice
  fullName: OpenTl.Schema.Payments.IPaymentForm.Invoice
- uid: OpenTl.Schema.IInvoice
  commentId: T:OpenTl.Schema.IInvoice
  parent: OpenTl.Schema
  isExternal: false
  name: IInvoice
  nameWithType: IInvoice
  fullName: OpenTl.Schema.IInvoice
- uid: OpenTl.Schema.Payments.IPaymentForm.ProviderId*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.ProviderId
  isExternal: false
  name: ProviderId
  nameWithType: IPaymentForm.ProviderId
  fullName: OpenTl.Schema.Payments.IPaymentForm.ProviderId
- uid: OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
  isExternal: false
  name: UrlAsBinary
  nameWithType: IPaymentForm.UrlAsBinary
  fullName: OpenTl.Schema.Payments.IPaymentForm.UrlAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Payments.IPaymentForm.Url*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.Url
  isExternal: false
  name: Url
  nameWithType: IPaymentForm.Url
  fullName: OpenTl.Schema.Payments.IPaymentForm.Url
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
  isExternal: false
  name: NativeProviderAsBinary
  nameWithType: IPaymentForm.NativeProviderAsBinary
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeProviderAsBinary
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeProvider*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.NativeProvider
  isExternal: false
  name: NativeProvider
  nameWithType: IPaymentForm.NativeProvider
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeProvider
- uid: OpenTl.Schema.Payments.IPaymentForm.NativeParams*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.NativeParams
  isExternal: false
  name: NativeParams
  nameWithType: IPaymentForm.NativeParams
  fullName: OpenTl.Schema.Payments.IPaymentForm.NativeParams
- uid: OpenTl.Schema.IDataJSON
  commentId: T:OpenTl.Schema.IDataJSON
  parent: OpenTl.Schema
  isExternal: false
  name: IDataJSON
  nameWithType: IDataJSON
  fullName: OpenTl.Schema.IDataJSON
- uid: OpenTl.Schema.Payments.IPaymentForm.SavedInfo*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.SavedInfo
  isExternal: false
  name: SavedInfo
  nameWithType: IPaymentForm.SavedInfo
  fullName: OpenTl.Schema.Payments.IPaymentForm.SavedInfo
- uid: OpenTl.Schema.IPaymentRequestedInfo
  commentId: T:OpenTl.Schema.IPaymentRequestedInfo
  parent: OpenTl.Schema
  isExternal: false
  name: IPaymentRequestedInfo
  nameWithType: IPaymentRequestedInfo
  fullName: OpenTl.Schema.IPaymentRequestedInfo
- uid: OpenTl.Schema.Payments.IPaymentForm.SavedCredentials*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
  isExternal: false
  name: SavedCredentials
  nameWithType: IPaymentForm.SavedCredentials
  fullName: OpenTl.Schema.Payments.IPaymentForm.SavedCredentials
- uid: OpenTl.Schema.IPaymentSavedCredentials
  commentId: T:OpenTl.Schema.IPaymentSavedCredentials
  parent: OpenTl.Schema
  isExternal: false
  name: IPaymentSavedCredentials
  nameWithType: IPaymentSavedCredentials
  fullName: OpenTl.Schema.IPaymentSavedCredentials
- uid: OpenTl.Schema.Payments.IPaymentForm.Users*
  commentId: Overload:OpenTl.Schema.Payments.IPaymentForm.Users
  isExternal: false
  name: Users
  nameWithType: IPaymentForm.Users
  fullName: OpenTl.Schema.Payments.IPaymentForm.Users
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IUser>
  nameWithType: TVector<IUser>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IUser>
  nameWithType.vb: TVector(Of IUser)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IUser)
  name.vb: TVector(Of IUser)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
