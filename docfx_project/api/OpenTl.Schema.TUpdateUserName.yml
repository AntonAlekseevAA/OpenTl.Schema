### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TUpdateUserName
  commentId: T:OpenTl.Schema.TUpdateUserName
  id: TUpdateUserName
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TUpdateUserName.FirstName
  - OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
  - OpenTl.Schema.TUpdateUserName.LastName
  - OpenTl.Schema.TUpdateUserName.LastNameAsBinary
  - OpenTl.Schema.TUpdateUserName.UserId
  - OpenTl.Schema.TUpdateUserName.Username
  - OpenTl.Schema.TUpdateUserName.UsernameAsBinary
  langs:
  - csharp
  - vb
  name: TUpdateUserName
  nameWithType: TUpdateUserName
  fullName: OpenTl.Schema.TUpdateUserName
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TUpdateUserName
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TUpdateUserName : object, IUpdate, IObject'
    content.vb: >-
      Public Class TUpdateUserName

          Inherits Object

          Implements IUpdate, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IUpdate
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TUpdateUserName.UserId
  commentId: P:OpenTl.Schema.TUpdateUserName.UserId
  id: UserId
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: TUpdateUserName.UserId
  fullName: OpenTl.Schema.TUpdateUserName.UserId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UserId
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int UserId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UserId As Integer
  overload: OpenTl.Schema.TUpdateUserName.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
  commentId: P:OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
  id: FirstNameAsBinary
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: FirstNameAsBinary
  nameWithType: TUpdateUserName.FirstNameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: FirstNameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;FirstName&apos; property
  example: []
  syntax:
    content: public byte[] FirstNameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property FirstNameAsBinary As Byte()
  overload: OpenTl.Schema.TUpdateUserName.FirstNameAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.FirstName
  commentId: P:OpenTl.Schema.TUpdateUserName.FirstName
  id: FirstName
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: TUpdateUserName.FirstName
  fullName: OpenTl.Schema.TUpdateUserName.FirstName
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: FirstName
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: OpenTl.Schema.TUpdateUserName.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.LastNameAsBinary
  commentId: P:OpenTl.Schema.TUpdateUserName.LastNameAsBinary
  id: LastNameAsBinary
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: LastNameAsBinary
  nameWithType: TUpdateUserName.LastNameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.LastNameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LastNameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;LastName&apos; property
  example: []
  syntax:
    content: public byte[] LastNameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property LastNameAsBinary As Byte()
  overload: OpenTl.Schema.TUpdateUserName.LastNameAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.LastName
  commentId: P:OpenTl.Schema.TUpdateUserName.LastName
  id: LastName
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: TUpdateUserName.LastName
  fullName: OpenTl.Schema.TUpdateUserName.LastName
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LastName
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: OpenTl.Schema.TUpdateUserName.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.UsernameAsBinary
  commentId: P:OpenTl.Schema.TUpdateUserName.UsernameAsBinary
  id: UsernameAsBinary
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: UsernameAsBinary
  nameWithType: TUpdateUserName.UsernameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.UsernameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UsernameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Username&apos; property
  example: []
  syntax:
    content: public byte[] UsernameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property UsernameAsBinary As Byte()
  overload: OpenTl.Schema.TUpdateUserName.UsernameAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TUpdateUserName.Username
  commentId: P:OpenTl.Schema.TUpdateUserName.Username
  id: Username
  parent: OpenTl.Schema.TUpdateUserName
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: TUpdateUserName.Username
  fullName: OpenTl.Schema.TUpdateUserName.Username
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Username
    path: ../src/OpenTl.Schema/_generated/_Entities/Update/TUpdateUserName.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: OpenTl.Schema.TUpdateUserName.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IUpdate
  commentId: T:OpenTl.Schema.IUpdate
  parent: OpenTl.Schema
  isExternal: false
  name: IUpdate
  nameWithType: IUpdate
  fullName: OpenTl.Schema.IUpdate
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.TUpdateUserName.UserId*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.UserId
  isExternal: false
  name: UserId
  nameWithType: TUpdateUserName.UserId
  fullName: OpenTl.Schema.TUpdateUserName.UserId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TUpdateUserName.FirstNameAsBinary*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
  isExternal: false
  name: FirstNameAsBinary
  nameWithType: TUpdateUserName.FirstNameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.FirstNameAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TUpdateUserName.FirstName*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.FirstName
  isExternal: false
  name: FirstName
  nameWithType: TUpdateUserName.FirstName
  fullName: OpenTl.Schema.TUpdateUserName.FirstName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TUpdateUserName.LastNameAsBinary*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.LastNameAsBinary
  isExternal: false
  name: LastNameAsBinary
  nameWithType: TUpdateUserName.LastNameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.LastNameAsBinary
- uid: OpenTl.Schema.TUpdateUserName.LastName*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.LastName
  isExternal: false
  name: LastName
  nameWithType: TUpdateUserName.LastName
  fullName: OpenTl.Schema.TUpdateUserName.LastName
- uid: OpenTl.Schema.TUpdateUserName.UsernameAsBinary*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.UsernameAsBinary
  isExternal: false
  name: UsernameAsBinary
  nameWithType: TUpdateUserName.UsernameAsBinary
  fullName: OpenTl.Schema.TUpdateUserName.UsernameAsBinary
- uid: OpenTl.Schema.TUpdateUserName.Username*
  commentId: Overload:OpenTl.Schema.TUpdateUserName.Username
  isExternal: false
  name: Username
  nameWithType: TUpdateUserName.Username
  fullName: OpenTl.Schema.TUpdateUserName.Username
