### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TInputAppEvent
  commentId: T:OpenTl.Schema.TInputAppEvent
  id: TInputAppEvent
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TInputAppEvent.Data
  - OpenTl.Schema.TInputAppEvent.DataAsBinary
  - OpenTl.Schema.TInputAppEvent.Peer
  - OpenTl.Schema.TInputAppEvent.Time
  - OpenTl.Schema.TInputAppEvent.Type
  - OpenTl.Schema.TInputAppEvent.TypeAsBinary
  langs:
  - csharp
  - vb
  name: TInputAppEvent
  nameWithType: TInputAppEvent
  fullName: OpenTl.Schema.TInputAppEvent
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TInputAppEvent
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TInputAppEvent : IInputAppEvent, IObject'
    content.vb: >-
      Public Class TInputAppEvent
          Implements IInputAppEvent, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IInputAppEvent
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TInputAppEvent.Time
  commentId: P:OpenTl.Schema.TInputAppEvent.Time
  id: Time
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: TInputAppEvent.Time
  fullName: OpenTl.Schema.TInputAppEvent.Time
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Time
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public double Time { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Time As Double
  overload: OpenTl.Schema.TInputAppEvent.Time*
  implements:
  - OpenTl.Schema.IInputAppEvent.Time
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputAppEvent.TypeAsBinary
  commentId: P:OpenTl.Schema.TInputAppEvent.TypeAsBinary
  id: TypeAsBinary
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: TypeAsBinary
  nameWithType: TInputAppEvent.TypeAsBinary
  fullName: OpenTl.Schema.TInputAppEvent.TypeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TypeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Type&apos; property
  example: []
  syntax:
    content: public byte[] TypeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property TypeAsBinary As Byte()
  overload: OpenTl.Schema.TInputAppEvent.TypeAsBinary*
  implements:
  - OpenTl.Schema.IInputAppEvent.TypeAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputAppEvent.Type
  commentId: P:OpenTl.Schema.TInputAppEvent.Type
  id: Type
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TInputAppEvent.Type
  fullName: OpenTl.Schema.TInputAppEvent.Type
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Type
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: OpenTl.Schema.TInputAppEvent.Type*
  implements:
  - OpenTl.Schema.IInputAppEvent.Type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputAppEvent.Peer
  commentId: P:OpenTl.Schema.TInputAppEvent.Peer
  id: Peer
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: TInputAppEvent.Peer
  fullName: OpenTl.Schema.TInputAppEvent.Peer
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Peer
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Peer { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Peer As Long
  overload: OpenTl.Schema.TInputAppEvent.Peer*
  implements:
  - OpenTl.Schema.IInputAppEvent.Peer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputAppEvent.DataAsBinary
  commentId: P:OpenTl.Schema.TInputAppEvent.DataAsBinary
  id: DataAsBinary
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: DataAsBinary
  nameWithType: TInputAppEvent.DataAsBinary
  fullName: OpenTl.Schema.TInputAppEvent.DataAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DataAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Data&apos; property
  example: []
  syntax:
    content: public byte[] DataAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property DataAsBinary As Byte()
  overload: OpenTl.Schema.TInputAppEvent.DataAsBinary*
  implements:
  - OpenTl.Schema.IInputAppEvent.DataAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputAppEvent.Data
  commentId: P:OpenTl.Schema.TInputAppEvent.Data
  id: Data
  parent: OpenTl.Schema.TInputAppEvent
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: TInputAppEvent.Data
  fullName: OpenTl.Schema.TInputAppEvent.Data
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Data
    path: ../src/OpenTl.Schema/_generated/_Entities/InputAppEvent/TInputAppEvent.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Data { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Data As String
  overload: OpenTl.Schema.TInputAppEvent.Data*
  implements:
  - OpenTl.Schema.IInputAppEvent.Data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IInputAppEvent
  commentId: T:OpenTl.Schema.IInputAppEvent
  parent: OpenTl.Schema
  isExternal: false
  name: IInputAppEvent
  nameWithType: IInputAppEvent
  fullName: OpenTl.Schema.IInputAppEvent
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TInputAppEvent.Time*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.Time
  isExternal: false
  name: Time
  nameWithType: TInputAppEvent.Time
  fullName: OpenTl.Schema.TInputAppEvent.Time
- uid: OpenTl.Schema.IInputAppEvent.Time
  commentId: P:OpenTl.Schema.IInputAppEvent.Time
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: Time
  nameWithType: IInputAppEvent.Time
  fullName: OpenTl.Schema.IInputAppEvent.Time
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OpenTl.Schema.TInputAppEvent.TypeAsBinary*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.TypeAsBinary
  isExternal: false
  name: TypeAsBinary
  nameWithType: TInputAppEvent.TypeAsBinary
  fullName: OpenTl.Schema.TInputAppEvent.TypeAsBinary
- uid: OpenTl.Schema.IInputAppEvent.TypeAsBinary
  commentId: P:OpenTl.Schema.IInputAppEvent.TypeAsBinary
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: TypeAsBinary
  nameWithType: IInputAppEvent.TypeAsBinary
  fullName: OpenTl.Schema.IInputAppEvent.TypeAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TInputAppEvent.Type*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.Type
  isExternal: false
  name: Type
  nameWithType: TInputAppEvent.Type
  fullName: OpenTl.Schema.TInputAppEvent.Type
- uid: OpenTl.Schema.IInputAppEvent.Type
  commentId: P:OpenTl.Schema.IInputAppEvent.Type
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: Type
  nameWithType: IInputAppEvent.Type
  fullName: OpenTl.Schema.IInputAppEvent.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TInputAppEvent.Peer*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.Peer
  isExternal: false
  name: Peer
  nameWithType: TInputAppEvent.Peer
  fullName: OpenTl.Schema.TInputAppEvent.Peer
- uid: OpenTl.Schema.IInputAppEvent.Peer
  commentId: P:OpenTl.Schema.IInputAppEvent.Peer
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: Peer
  nameWithType: IInputAppEvent.Peer
  fullName: OpenTl.Schema.IInputAppEvent.Peer
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TInputAppEvent.DataAsBinary*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.DataAsBinary
  isExternal: false
  name: DataAsBinary
  nameWithType: TInputAppEvent.DataAsBinary
  fullName: OpenTl.Schema.TInputAppEvent.DataAsBinary
- uid: OpenTl.Schema.IInputAppEvent.DataAsBinary
  commentId: P:OpenTl.Schema.IInputAppEvent.DataAsBinary
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: DataAsBinary
  nameWithType: IInputAppEvent.DataAsBinary
  fullName: OpenTl.Schema.IInputAppEvent.DataAsBinary
- uid: OpenTl.Schema.TInputAppEvent.Data*
  commentId: Overload:OpenTl.Schema.TInputAppEvent.Data
  isExternal: false
  name: Data
  nameWithType: TInputAppEvent.Data
  fullName: OpenTl.Schema.TInputAppEvent.Data
- uid: OpenTl.Schema.IInputAppEvent.Data
  commentId: P:OpenTl.Schema.IInputAppEvent.Data
  parent: OpenTl.Schema.IInputAppEvent
  isExternal: false
  name: Data
  nameWithType: IInputAppEvent.Data
  fullName: OpenTl.Schema.IInputAppEvent.Data
