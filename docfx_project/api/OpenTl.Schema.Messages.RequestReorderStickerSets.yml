### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets
  commentId: T:OpenTl.Schema.Messages.RequestReorderStickerSets
  id: RequestReorderStickerSets
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
  - OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
  - OpenTl.Schema.Messages.RequestReorderStickerSets.Order
  langs:
  - csharp
  - vb
  name: RequestReorderStickerSets
  nameWithType: RequestReorderStickerSets
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestReorderStickerSets
    path: ../src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestReorderStickerSets : object, IRequest<bool>, IRequest, IObject'
    content.vb: >-
      Public Class RequestReorderStickerSets

          Inherits Object

          Implements IRequest(Of Boolean), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{System.Boolean}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
  commentId: P:OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
  id: Flags
  parent: OpenTl.Schema.Messages.RequestReorderStickerSets
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RequestReorderStickerSets.Flags
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Messages.RequestReorderStickerSets.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
  commentId: P:OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
  id: Masks
  parent: OpenTl.Schema.Messages.RequestReorderStickerSets
  langs:
  - csharp
  - vb
  name: Masks
  nameWithType: RequestReorderStickerSets.Masks
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Masks
    path: ../src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public bool Masks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Masks As Boolean
  overload: OpenTl.Schema.Messages.RequestReorderStickerSets.Masks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Order
  commentId: P:OpenTl.Schema.Messages.RequestReorderStickerSets.Order
  id: Order
  parent: OpenTl.Schema.Messages.RequestReorderStickerSets
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: RequestReorderStickerSets.Order
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Order
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Order
    path: ../src/OpenTl.Schema/_generated/Messages/RequestReorderStickerSets.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public TVector<long> Order { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{System.Int64}
    content.vb: Public Property Order As TVector(Of Long)
  overload: OpenTl.Schema.Messages.RequestReorderStickerSets.Order*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{System.Boolean}
  commentId: T:OpenTl.Schema.IRequest{System.Boolean}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<Boolean>
  nameWithType: IRequest<Boolean>
  fullName: OpenTl.Schema.IRequest<System.Boolean>
  nameWithType.vb: IRequest(Of Boolean)
  fullName.vb: OpenTl.Schema.IRequest(Of System.Boolean)
  name.vb: IRequest(Of Boolean)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Flags*
  commentId: Overload:OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
  isExternal: false
  name: Flags
  nameWithType: RequestReorderStickerSets.Flags
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Masks*
  commentId: Overload:OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
  isExternal: false
  name: Masks
  nameWithType: RequestReorderStickerSets.Masks
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Masks
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Messages.RequestReorderStickerSets.Order*
  commentId: Overload:OpenTl.Schema.Messages.RequestReorderStickerSets.Order
  isExternal: false
  name: Order
  nameWithType: RequestReorderStickerSets.Order
  fullName: OpenTl.Schema.Messages.RequestReorderStickerSets.Order
- uid: OpenTl.Schema.TVector{System.Int64}
  commentId: T:OpenTl.Schema.TVector{System.Int64}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<Int64>
  nameWithType: TVector<Int64>
  fullName: OpenTl.Schema.TVector<System.Int64>
  nameWithType.vb: TVector(Of Int64)
  fullName.vb: OpenTl.Schema.TVector(Of System.Int64)
  name.vb: TVector(Of Int64)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
