### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults
  commentId: T:OpenTl.Schema.Messages.RequestSetBotShippingResults
  id: RequestSetBotShippingResults
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
  - OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
  - OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
  - OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
  - OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
  langs:
  - csharp
  - vb
  name: RequestSetBotShippingResults
  nameWithType: RequestSetBotShippingResults
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestSetBotShippingResults
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestSetBotShippingResults : object, IRequest<bool>, IRequest, IObject'
    content.vb: >-
      Public Class RequestSetBotShippingResults

          Inherits Object

          Implements IRequest(Of Boolean), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{System.Boolean}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
  commentId: P:OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
  id: Flags
  parent: OpenTl.Schema.Messages.RequestSetBotShippingResults
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RequestSetBotShippingResults.Flags
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
  commentId: P:OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
  id: QueryId
  parent: OpenTl.Schema.Messages.RequestSetBotShippingResults
  langs:
  - csharp
  - vb
  name: QueryId
  nameWithType: RequestSetBotShippingResults.QueryId
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: QueryId
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public long QueryId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property QueryId As Long
  overload: OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
  commentId: P:OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
  id: ErrorAsBinary
  parent: OpenTl.Schema.Messages.RequestSetBotShippingResults
  langs:
  - csharp
  - vb
  name: ErrorAsBinary
  nameWithType: RequestSetBotShippingResults.ErrorAsBinary
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ErrorAsBinary
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  summary: Binary representation for the &apos;Error&apos; property
  example: []
  syntax:
    content: public byte[] ErrorAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property ErrorAsBinary As Byte()
  overload: OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
  commentId: P:OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
  id: Error
  parent: OpenTl.Schema.Messages.RequestSetBotShippingResults
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: RequestSetBotShippingResults.Error
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Error
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public string Error { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Error As String
  overload: OpenTl.Schema.Messages.RequestSetBotShippingResults.Error*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
  commentId: P:OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
  id: ShippingOptions
  parent: OpenTl.Schema.Messages.RequestSetBotShippingResults
  langs:
  - csharp
  - vb
  name: ShippingOptions
  nameWithType: RequestSetBotShippingResults.ShippingOptions
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ShippingOptions
    path: ../src/OpenTl.Schema/_generated/Messages/RequestSetBotShippingResults.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public TVector<IShippingOption> ShippingOptions { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IShippingOption}
    content.vb: Public Property ShippingOptions As TVector(Of IShippingOption)
  overload: OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{System.Boolean}
  commentId: T:OpenTl.Schema.IRequest{System.Boolean}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<Boolean>
  nameWithType: IRequest<Boolean>
  fullName: OpenTl.Schema.IRequest<System.Boolean>
  nameWithType.vb: IRequest(Of Boolean)
  fullName.vb: OpenTl.Schema.IRequest(Of System.Boolean)
  name.vb: IRequest(Of Boolean)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags*
  commentId: Overload:OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
  isExternal: false
  name: Flags
  nameWithType: RequestSetBotShippingResults.Flags
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId*
  commentId: Overload:OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
  isExternal: false
  name: QueryId
  nameWithType: RequestSetBotShippingResults.QueryId
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.QueryId
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary*
  commentId: Overload:OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
  isExternal: false
  name: ErrorAsBinary
  nameWithType: RequestSetBotShippingResults.ErrorAsBinary
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.ErrorAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.Error*
  commentId: Overload:OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
  isExternal: false
  name: Error
  nameWithType: RequestSetBotShippingResults.Error
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.Error
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions*
  commentId: Overload:OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
  isExternal: false
  name: ShippingOptions
  nameWithType: RequestSetBotShippingResults.ShippingOptions
  fullName: OpenTl.Schema.Messages.RequestSetBotShippingResults.ShippingOptions
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IShippingOption}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IShippingOption}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IShippingOption>
  nameWithType: TVector<IShippingOption>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IShippingOption>
  nameWithType.vb: TVector(Of IShippingOption)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IShippingOption)
  name.vb: TVector(Of IShippingOption)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IShippingOption
    name: IShippingOption
    nameWithType: IShippingOption
    fullName: OpenTl.Schema.IShippingOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IShippingOption
    name: IShippingOption
    nameWithType: IShippingOption
    fullName: OpenTl.Schema.IShippingOption
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
