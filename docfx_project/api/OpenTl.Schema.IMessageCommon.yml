### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IMessageCommon
  commentId: T:OpenTl.Schema.IMessageCommon
  id: IMessageCommon
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IMessageCommon.Date
  - OpenTl.Schema.IMessageCommon.Flags
  - OpenTl.Schema.IMessageCommon.FromId
  - OpenTl.Schema.IMessageCommon.Id
  - OpenTl.Schema.IMessageCommon.MediaUnread
  - OpenTl.Schema.IMessageCommon.Mentioned
  - OpenTl.Schema.IMessageCommon.Out
  - OpenTl.Schema.IMessageCommon.Post
  - OpenTl.Schema.IMessageCommon.ReplyToMsgId
  - OpenTl.Schema.IMessageCommon.Silent
  - OpenTl.Schema.IMessageCommon.ToId
  langs:
  - csharp
  - vb
  name: IMessageCommon
  nameWithType: IMessageCommon
  fullName: OpenTl.Schema.IMessageCommon
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IMessageCommon
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IMessageCommon : IObject'
    content.vb: >-
      Public Interface IMessageCommon

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IMessageCommon.Flags
  commentId: P:OpenTl.Schema.IMessageCommon.Flags
  id: Flags
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IMessageCommon.Flags
  fullName: OpenTl.Schema.IMessageCommon.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Property Flags As BitArray
  overload: OpenTl.Schema.IMessageCommon.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Out
  commentId: P:OpenTl.Schema.IMessageCommon.Out
  id: Out
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Out
  nameWithType: IMessageCommon.Out
  fullName: OpenTl.Schema.IMessageCommon.Out
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Out
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: bool Out { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Out As Boolean
  overload: OpenTl.Schema.IMessageCommon.Out*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Mentioned
  commentId: P:OpenTl.Schema.IMessageCommon.Mentioned
  id: Mentioned
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Mentioned
  nameWithType: IMessageCommon.Mentioned
  fullName: OpenTl.Schema.IMessageCommon.Mentioned
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Mentioned
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: bool Mentioned { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Mentioned As Boolean
  overload: OpenTl.Schema.IMessageCommon.Mentioned*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.MediaUnread
  commentId: P:OpenTl.Schema.IMessageCommon.MediaUnread
  id: MediaUnread
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: MediaUnread
  nameWithType: IMessageCommon.MediaUnread
  fullName: OpenTl.Schema.IMessageCommon.MediaUnread
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MediaUnread
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: bool MediaUnread { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property MediaUnread As Boolean
  overload: OpenTl.Schema.IMessageCommon.MediaUnread*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Silent
  commentId: P:OpenTl.Schema.IMessageCommon.Silent
  id: Silent
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Silent
  nameWithType: IMessageCommon.Silent
  fullName: OpenTl.Schema.IMessageCommon.Silent
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Silent
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: bool Silent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Silent As Boolean
  overload: OpenTl.Schema.IMessageCommon.Silent*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Post
  commentId: P:OpenTl.Schema.IMessageCommon.Post
  id: Post
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Post
  nameWithType: IMessageCommon.Post
  fullName: OpenTl.Schema.IMessageCommon.Post
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Post
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: bool Post { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Post As Boolean
  overload: OpenTl.Schema.IMessageCommon.Post*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Id
  commentId: P:OpenTl.Schema.IMessageCommon.Id
  id: Id
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IMessageCommon.Id
  fullName: OpenTl.Schema.IMessageCommon.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 23
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Id As Integer
  overload: OpenTl.Schema.IMessageCommon.Id*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.FromId
  commentId: P:OpenTl.Schema.IMessageCommon.FromId
  id: FromId
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: FromId
  nameWithType: IMessageCommon.FromId
  fullName: OpenTl.Schema.IMessageCommon.FromId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: FromId
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int FromId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property FromId As Integer
  overload: OpenTl.Schema.IMessageCommon.FromId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.ToId
  commentId: P:OpenTl.Schema.IMessageCommon.ToId
  id: ToId
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: ToId
  nameWithType: IMessageCommon.ToId
  fullName: OpenTl.Schema.IMessageCommon.ToId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ToId
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: IPeer ToId { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPeer
    content.vb: Property ToId As IPeer
  overload: OpenTl.Schema.IMessageCommon.ToId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.ReplyToMsgId
  commentId: P:OpenTl.Schema.IMessageCommon.ReplyToMsgId
  id: ReplyToMsgId
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: ReplyToMsgId
  nameWithType: IMessageCommon.ReplyToMsgId
  fullName: OpenTl.Schema.IMessageCommon.ReplyToMsgId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ReplyToMsgId
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int ReplyToMsgId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property ReplyToMsgId As Integer
  overload: OpenTl.Schema.IMessageCommon.ReplyToMsgId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMessageCommon.Date
  commentId: P:OpenTl.Schema.IMessageCommon.Date
  id: Date
  parent: OpenTl.Schema.IMessageCommon
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: IMessageCommon.Date
  fullName: OpenTl.Schema.IMessageCommon.Date
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Date
    path: ../src/OpenTl.Schema/_generated/_Entities/Message/IMessageCommon.cs
    startLine: 31
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Date { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Date As Integer
  overload: OpenTl.Schema.IMessageCommon.Date*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IMessageCommon.Flags*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Flags
  isExternal: false
  name: Flags
  nameWithType: IMessageCommon.Flags
  fullName: OpenTl.Schema.IMessageCommon.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.IMessageCommon.Out*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Out
  isExternal: false
  name: Out
  nameWithType: IMessageCommon.Out
  fullName: OpenTl.Schema.IMessageCommon.Out
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.IMessageCommon.Mentioned*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Mentioned
  isExternal: false
  name: Mentioned
  nameWithType: IMessageCommon.Mentioned
  fullName: OpenTl.Schema.IMessageCommon.Mentioned
- uid: OpenTl.Schema.IMessageCommon.MediaUnread*
  commentId: Overload:OpenTl.Schema.IMessageCommon.MediaUnread
  isExternal: false
  name: MediaUnread
  nameWithType: IMessageCommon.MediaUnread
  fullName: OpenTl.Schema.IMessageCommon.MediaUnread
- uid: OpenTl.Schema.IMessageCommon.Silent*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Silent
  isExternal: false
  name: Silent
  nameWithType: IMessageCommon.Silent
  fullName: OpenTl.Schema.IMessageCommon.Silent
- uid: OpenTl.Schema.IMessageCommon.Post*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Post
  isExternal: false
  name: Post
  nameWithType: IMessageCommon.Post
  fullName: OpenTl.Schema.IMessageCommon.Post
- uid: OpenTl.Schema.IMessageCommon.Id*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Id
  isExternal: false
  name: Id
  nameWithType: IMessageCommon.Id
  fullName: OpenTl.Schema.IMessageCommon.Id
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.IMessageCommon.FromId*
  commentId: Overload:OpenTl.Schema.IMessageCommon.FromId
  isExternal: false
  name: FromId
  nameWithType: IMessageCommon.FromId
  fullName: OpenTl.Schema.IMessageCommon.FromId
- uid: OpenTl.Schema.IMessageCommon.ToId*
  commentId: Overload:OpenTl.Schema.IMessageCommon.ToId
  isExternal: false
  name: ToId
  nameWithType: IMessageCommon.ToId
  fullName: OpenTl.Schema.IMessageCommon.ToId
- uid: OpenTl.Schema.IPeer
  commentId: T:OpenTl.Schema.IPeer
  parent: OpenTl.Schema
  isExternal: false
  name: IPeer
  nameWithType: IPeer
  fullName: OpenTl.Schema.IPeer
- uid: OpenTl.Schema.IMessageCommon.ReplyToMsgId*
  commentId: Overload:OpenTl.Schema.IMessageCommon.ReplyToMsgId
  isExternal: false
  name: ReplyToMsgId
  nameWithType: IMessageCommon.ReplyToMsgId
  fullName: OpenTl.Schema.IMessageCommon.ReplyToMsgId
- uid: OpenTl.Schema.IMessageCommon.Date*
  commentId: Overload:OpenTl.Schema.IMessageCommon.Date
  isExternal: false
  name: Date
  nameWithType: IMessageCommon.Date
  fullName: OpenTl.Schema.IMessageCommon.Date
