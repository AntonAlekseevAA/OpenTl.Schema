### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  commentId: T:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  id: RequestGetBotCallbackAnswer
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
  - OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
  - OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
  - OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
  - OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
  langs:
  - csharp
  - vb
  name: RequestGetBotCallbackAnswer
  nameWithType: RequestGetBotCallbackAnswer
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestGetBotCallbackAnswer
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestGetBotCallbackAnswer : object, IRequest<IBotCallbackAnswer>, IRequest, IObject'
    content.vb: >-
      Public Class RequestGetBotCallbackAnswer

          Inherits Object

          Implements IRequest(Of IBotCallbackAnswer), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IBotCallbackAnswer}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
  commentId: P:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
  id: Flags
  parent: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RequestGetBotCallbackAnswer.Flags
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
  commentId: P:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
  id: Game
  parent: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: RequestGetBotCallbackAnswer.Game
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Game
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public bool Game { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Game As Boolean
  overload: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
  commentId: P:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
  id: Peer
  parent: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: RequestGetBotCallbackAnswer.Peer
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Peer
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public IInputPeer Peer { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputPeer
    content.vb: Public Property Peer As IInputPeer
  overload: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
  commentId: P:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
  id: MsgId
  parent: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  langs:
  - csharp
  - vb
  name: MsgId
  nameWithType: RequestGetBotCallbackAnswer.MsgId
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MsgId
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public int MsgId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MsgId As Integer
  overload: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
  commentId: P:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
  id: Data
  parent: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: RequestGetBotCallbackAnswer.Data
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Data
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetBotCallbackAnswer.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public byte[] Data { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Data As Byte()
  overload: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IBotCallbackAnswer}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IBotCallbackAnswer}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IBotCallbackAnswer>
  nameWithType: IRequest<IBotCallbackAnswer>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.Messages.IBotCallbackAnswer>
  nameWithType.vb: IRequest(Of IBotCallbackAnswer)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.Messages.IBotCallbackAnswer)
  name.vb: IRequest(Of IBotCallbackAnswer)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.Messages.IBotCallbackAnswer
    name: IBotCallbackAnswer
    nameWithType: IBotCallbackAnswer
    fullName: OpenTl.Schema.Messages.IBotCallbackAnswer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.Messages.IBotCallbackAnswer
    name: IBotCallbackAnswer
    nameWithType: IBotCallbackAnswer
    fullName: OpenTl.Schema.Messages.IBotCallbackAnswer
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
  isExternal: false
  name: Flags
  nameWithType: RequestGetBotCallbackAnswer.Flags
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
  isExternal: false
  name: Game
  nameWithType: RequestGetBotCallbackAnswer.Game
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Game
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
  isExternal: false
  name: Peer
  nameWithType: RequestGetBotCallbackAnswer.Peer
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Peer
- uid: OpenTl.Schema.IInputPeer
  commentId: T:OpenTl.Schema.IInputPeer
  parent: OpenTl.Schema
  isExternal: false
  name: IInputPeer
  nameWithType: IInputPeer
  fullName: OpenTl.Schema.IInputPeer
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
  isExternal: false
  name: MsgId
  nameWithType: RequestGetBotCallbackAnswer.MsgId
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.MsgId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
  isExternal: false
  name: Data
  nameWithType: RequestGetBotCallbackAnswer.Data
  fullName: OpenTl.Schema.Messages.RequestGetBotCallbackAnswer.Data
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
