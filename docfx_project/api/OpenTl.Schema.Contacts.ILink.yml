### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Contacts.ILink
  commentId: T:OpenTl.Schema.Contacts.ILink
  id: ILink
  parent: OpenTl.Schema.Contacts
  children:
  - OpenTl.Schema.Contacts.ILink.ForeignLink
  - OpenTl.Schema.Contacts.ILink.MyLink
  - OpenTl.Schema.Contacts.ILink.User
  langs:
  - csharp
  - vb
  name: ILink
  nameWithType: ILink
  fullName: OpenTl.Schema.Contacts.ILink
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ILink
    path: ../src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Contacts
  syntax:
    content: 'public interface ILink : IObject'
    content.vb: >-
      Public Interface ILink
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Contacts.ILink.MyLink
  commentId: P:OpenTl.Schema.Contacts.ILink.MyLink
  id: MyLink
  parent: OpenTl.Schema.Contacts.ILink
  langs:
  - csharp
  - vb
  name: MyLink
  nameWithType: ILink.MyLink
  fullName: OpenTl.Schema.Contacts.ILink.MyLink
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MyLink
    path: ../src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Contacts
  syntax:
    content: IContactLink MyLink { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IContactLink
    content.vb: Property MyLink As IContactLink
  overload: OpenTl.Schema.Contacts.ILink.MyLink*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Contacts.ILink.ForeignLink
  commentId: P:OpenTl.Schema.Contacts.ILink.ForeignLink
  id: ForeignLink
  parent: OpenTl.Schema.Contacts.ILink
  langs:
  - csharp
  - vb
  name: ForeignLink
  nameWithType: ILink.ForeignLink
  fullName: OpenTl.Schema.Contacts.ILink.ForeignLink
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ForeignLink
    path: ../src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Contacts
  syntax:
    content: IContactLink ForeignLink { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IContactLink
    content.vb: Property ForeignLink As IContactLink
  overload: OpenTl.Schema.Contacts.ILink.ForeignLink*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Contacts.ILink.User
  commentId: P:OpenTl.Schema.Contacts.ILink.User
  id: User
  parent: OpenTl.Schema.Contacts.ILink
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ILink.User
  fullName: OpenTl.Schema.Contacts.ILink.User
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: User
    path: ../src/OpenTl.Schema/_generated/Contacts/Link/ILink.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Contacts
  syntax:
    content: IUser User { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IUser
    content.vb: Property User As IUser
  overload: OpenTl.Schema.Contacts.ILink.User*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Contacts
  commentId: N:OpenTl.Schema.Contacts
  isExternal: false
  name: OpenTl.Schema.Contacts
  nameWithType: OpenTl.Schema.Contacts
  fullName: OpenTl.Schema.Contacts
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Contacts.ILink.MyLink*
  commentId: Overload:OpenTl.Schema.Contacts.ILink.MyLink
  isExternal: false
  name: MyLink
  nameWithType: ILink.MyLink
  fullName: OpenTl.Schema.Contacts.ILink.MyLink
- uid: OpenTl.Schema.IContactLink
  commentId: T:OpenTl.Schema.IContactLink
  parent: OpenTl.Schema
  isExternal: false
  name: IContactLink
  nameWithType: IContactLink
  fullName: OpenTl.Schema.IContactLink
- uid: OpenTl.Schema.Contacts.ILink.ForeignLink*
  commentId: Overload:OpenTl.Schema.Contacts.ILink.ForeignLink
  isExternal: false
  name: ForeignLink
  nameWithType: ILink.ForeignLink
  fullName: OpenTl.Schema.Contacts.ILink.ForeignLink
- uid: OpenTl.Schema.Contacts.ILink.User*
  commentId: Overload:OpenTl.Schema.Contacts.ILink.User
  isExternal: false
  name: User
  nameWithType: ILink.User
  fullName: OpenTl.Schema.Contacts.ILink.User
- uid: OpenTl.Schema.IUser
  commentId: T:OpenTl.Schema.IUser
  parent: OpenTl.Schema
  isExternal: false
  name: IUser
  nameWithType: IUser
  fullName: OpenTl.Schema.IUser
