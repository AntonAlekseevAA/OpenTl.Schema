### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IHighScore
  commentId: T:OpenTl.Schema.IHighScore
  id: IHighScore
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IHighScore.Pos
  - OpenTl.Schema.IHighScore.Score
  - OpenTl.Schema.IHighScore.UserId
  langs:
  - csharp
  - vb
  name: IHighScore
  nameWithType: IHighScore
  fullName: OpenTl.Schema.IHighScore
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IHighScore
    path: ../src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IHighScore : IObject'
    content.vb: >-
      Public Interface IHighScore
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IHighScore.Pos
  commentId: P:OpenTl.Schema.IHighScore.Pos
  id: Pos
  parent: OpenTl.Schema.IHighScore
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: IHighScore.Pos
  fullName: OpenTl.Schema.IHighScore.Pos
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Pos
    path: ../src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Pos { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Pos As Integer
  overload: OpenTl.Schema.IHighScore.Pos*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IHighScore.UserId
  commentId: P:OpenTl.Schema.IHighScore.UserId
  id: UserId
  parent: OpenTl.Schema.IHighScore
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: IHighScore.UserId
  fullName: OpenTl.Schema.IHighScore.UserId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UserId
    path: ../src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int UserId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property UserId As Integer
  overload: OpenTl.Schema.IHighScore.UserId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IHighScore.Score
  commentId: P:OpenTl.Schema.IHighScore.Score
  id: Score
  parent: OpenTl.Schema.IHighScore
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: IHighScore.Score
  fullName: OpenTl.Schema.IHighScore.Score
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Score
    path: ../src/OpenTl.Schema/_generated/_Entities/HighScore/IHighScore.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Score { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Score As Integer
  overload: OpenTl.Schema.IHighScore.Score*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IHighScore.Pos*
  commentId: Overload:OpenTl.Schema.IHighScore.Pos
  isExternal: false
  name: Pos
  nameWithType: IHighScore.Pos
  fullName: OpenTl.Schema.IHighScore.Pos
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.IHighScore.UserId*
  commentId: Overload:OpenTl.Schema.IHighScore.UserId
  isExternal: false
  name: UserId
  nameWithType: IHighScore.UserId
  fullName: OpenTl.Schema.IHighScore.UserId
- uid: OpenTl.Schema.IHighScore.Score*
  commentId: Overload:OpenTl.Schema.IHighScore.Score
  isExternal: false
  name: Score
  nameWithType: IHighScore.Score
  fullName: OpenTl.Schema.IHighScore.Score
