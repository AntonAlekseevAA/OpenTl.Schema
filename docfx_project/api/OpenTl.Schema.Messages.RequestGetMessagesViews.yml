### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews
  commentId: T:OpenTl.Schema.Messages.RequestGetMessagesViews
  id: RequestGetMessagesViews
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestGetMessagesViews.Id
  - OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
  - OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
  langs:
  - csharp
  - vb
  name: RequestGetMessagesViews
  nameWithType: RequestGetMessagesViews
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestGetMessagesViews
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestGetMessagesViews : object, IRequest<TVector<int>>, IRequest, IObject'
    content.vb: >-
      Public Class RequestGetMessagesViews

          Inherits Object

          Implements IRequest(Of TVector(Of Integer)), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.TVector{System.Int32}}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
  commentId: P:OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
  id: Peer
  parent: OpenTl.Schema.Messages.RequestGetMessagesViews
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: RequestGetMessagesViews.Peer
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Peer
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public IInputPeer Peer { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputPeer
    content.vb: Public Property Peer As IInputPeer
  overload: OpenTl.Schema.Messages.RequestGetMessagesViews.Peer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Id
  commentId: P:OpenTl.Schema.Messages.RequestGetMessagesViews.Id
  id: Id
  parent: OpenTl.Schema.Messages.RequestGetMessagesViews
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RequestGetMessagesViews.Id
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public TVector<int> Id { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{System.Int32}
    content.vb: Public Property Id As TVector(Of Integer)
  overload: OpenTl.Schema.Messages.RequestGetMessagesViews.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
  commentId: P:OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
  id: Increment
  parent: OpenTl.Schema.Messages.RequestGetMessagesViews
  langs:
  - csharp
  - vb
  name: Increment
  nameWithType: RequestGetMessagesViews.Increment
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Increment
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetMessagesViews.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public bool Increment { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Increment As Boolean
  overload: OpenTl.Schema.Messages.RequestGetMessagesViews.Increment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.TVector{System.Int32}}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.TVector{System.Int32}}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<TVector<Int32>>
  nameWithType: IRequest<TVector<Int32>>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.TVector<System.Int32>>
  nameWithType.vb: IRequest(Of TVector(Of Int32))
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.TVector(Of System.Int32))
  name.vb: IRequest(Of TVector(Of Int32))
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Peer*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
  isExternal: false
  name: Peer
  nameWithType: RequestGetMessagesViews.Peer
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Peer
- uid: OpenTl.Schema.IInputPeer
  commentId: T:OpenTl.Schema.IInputPeer
  parent: OpenTl.Schema
  isExternal: false
  name: IInputPeer
  nameWithType: IInputPeer
  fullName: OpenTl.Schema.IInputPeer
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Id*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetMessagesViews.Id
  isExternal: false
  name: Id
  nameWithType: RequestGetMessagesViews.Id
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Id
- uid: OpenTl.Schema.TVector{System.Int32}
  commentId: T:OpenTl.Schema.TVector{System.Int32}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<Int32>
  nameWithType: TVector<Int32>
  fullName: OpenTl.Schema.TVector<System.Int32>
  nameWithType.vb: TVector(Of Int32)
  fullName.vb: OpenTl.Schema.TVector(Of System.Int32)
  name.vb: TVector(Of Int32)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Messages.RequestGetMessagesViews.Increment*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
  isExternal: false
  name: Increment
  nameWithType: RequestGetMessagesViews.Increment
  fullName: OpenTl.Schema.Messages.RequestGetMessagesViews.Increment
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
