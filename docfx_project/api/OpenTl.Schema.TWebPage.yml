### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TWebPage
  commentId: T:OpenTl.Schema.TWebPage
  id: TWebPage
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TWebPage.Author
  - OpenTl.Schema.TWebPage.AuthorAsBinary
  - OpenTl.Schema.TWebPage.CachedPage
  - OpenTl.Schema.TWebPage.Description
  - OpenTl.Schema.TWebPage.DescriptionAsBinary
  - OpenTl.Schema.TWebPage.DisplayUrl
  - OpenTl.Schema.TWebPage.DisplayUrlAsBinary
  - OpenTl.Schema.TWebPage.Document
  - OpenTl.Schema.TWebPage.Duration
  - OpenTl.Schema.TWebPage.EmbedHeight
  - OpenTl.Schema.TWebPage.EmbedType
  - OpenTl.Schema.TWebPage.EmbedTypeAsBinary
  - OpenTl.Schema.TWebPage.EmbedUrl
  - OpenTl.Schema.TWebPage.EmbedUrlAsBinary
  - OpenTl.Schema.TWebPage.EmbedWidth
  - OpenTl.Schema.TWebPage.Flags
  - OpenTl.Schema.TWebPage.Hash
  - OpenTl.Schema.TWebPage.Id
  - OpenTl.Schema.TWebPage.Photo
  - OpenTl.Schema.TWebPage.SiteName
  - OpenTl.Schema.TWebPage.SiteNameAsBinary
  - OpenTl.Schema.TWebPage.Title
  - OpenTl.Schema.TWebPage.TitleAsBinary
  - OpenTl.Schema.TWebPage.Type
  - OpenTl.Schema.TWebPage.TypeAsBinary
  - OpenTl.Schema.TWebPage.Url
  - OpenTl.Schema.TWebPage.UrlAsBinary
  langs:
  - csharp
  - vb
  name: TWebPage
  nameWithType: TWebPage
  fullName: OpenTl.Schema.TWebPage
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TWebPage
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TWebPage : IWebPage, IObject'
    content.vb: >-
      Public Class TWebPage
          Implements IWebPage, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IWebPage
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TWebPage.Flags
  commentId: P:OpenTl.Schema.TWebPage.Flags
  id: Flags
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TWebPage.Flags
  fullName: OpenTl.Schema.TWebPage.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.TWebPage.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Id
  commentId: P:OpenTl.Schema.TWebPage.Id
  id: Id
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TWebPage.Id
  fullName: OpenTl.Schema.TWebPage.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: OpenTl.Schema.TWebPage.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.UrlAsBinary
  commentId: P:OpenTl.Schema.TWebPage.UrlAsBinary
  id: UrlAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: UrlAsBinary
  nameWithType: TWebPage.UrlAsBinary
  fullName: OpenTl.Schema.TWebPage.UrlAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UrlAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Url&apos; property
  example: []
  syntax:
    content: public byte[] UrlAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property UrlAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.UrlAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Url
  commentId: P:OpenTl.Schema.TWebPage.Url
  id: Url
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: TWebPage.Url
  fullName: OpenTl.Schema.TWebPage.Url
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Url
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Url As String
  overload: OpenTl.Schema.TWebPage.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.DisplayUrlAsBinary
  commentId: P:OpenTl.Schema.TWebPage.DisplayUrlAsBinary
  id: DisplayUrlAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: DisplayUrlAsBinary
  nameWithType: TWebPage.DisplayUrlAsBinary
  fullName: OpenTl.Schema.TWebPage.DisplayUrlAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DisplayUrlAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;DisplayUrl&apos; property
  example: []
  syntax:
    content: public byte[] DisplayUrlAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property DisplayUrlAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.DisplayUrlAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.DisplayUrl
  commentId: P:OpenTl.Schema.TWebPage.DisplayUrl
  id: DisplayUrl
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: DisplayUrl
  nameWithType: TWebPage.DisplayUrl
  fullName: OpenTl.Schema.TWebPage.DisplayUrl
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DisplayUrl
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string DisplayUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayUrl As String
  overload: OpenTl.Schema.TWebPage.DisplayUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Hash
  commentId: P:OpenTl.Schema.TWebPage.Hash
  id: Hash
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: TWebPage.Hash
  fullName: OpenTl.Schema.TWebPage.Hash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Hash
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 34
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Hash { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Hash As Integer
  overload: OpenTl.Schema.TWebPage.Hash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.TypeAsBinary
  commentId: P:OpenTl.Schema.TWebPage.TypeAsBinary
  id: TypeAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: TypeAsBinary
  nameWithType: TWebPage.TypeAsBinary
  fullName: OpenTl.Schema.TWebPage.TypeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TypeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 38
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Type&apos; property
  example: []
  syntax:
    content: public byte[] TypeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property TypeAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.TypeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Type
  commentId: P:OpenTl.Schema.TWebPage.Type
  id: Type
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TWebPage.Type
  fullName: OpenTl.Schema.TWebPage.Type
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Type
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 43
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: OpenTl.Schema.TWebPage.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.SiteNameAsBinary
  commentId: P:OpenTl.Schema.TWebPage.SiteNameAsBinary
  id: SiteNameAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: SiteNameAsBinary
  nameWithType: TWebPage.SiteNameAsBinary
  fullName: OpenTl.Schema.TWebPage.SiteNameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SiteNameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 46
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;SiteName&apos; property
  example: []
  syntax:
    content: public byte[] SiteNameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SiteNameAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.SiteNameAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.SiteName
  commentId: P:OpenTl.Schema.TWebPage.SiteName
  id: SiteName
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: SiteName
  nameWithType: TWebPage.SiteName
  fullName: OpenTl.Schema.TWebPage.SiteName
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SiteName
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 51
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string SiteName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SiteName As String
  overload: OpenTl.Schema.TWebPage.SiteName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.TitleAsBinary
  commentId: P:OpenTl.Schema.TWebPage.TitleAsBinary
  id: TitleAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: TitleAsBinary
  nameWithType: TWebPage.TitleAsBinary
  fullName: OpenTl.Schema.TWebPage.TitleAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TitleAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 54
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Title&apos; property
  example: []
  syntax:
    content: public byte[] TitleAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property TitleAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.TitleAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Title
  commentId: P:OpenTl.Schema.TWebPage.Title
  id: Title
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TWebPage.Title
  fullName: OpenTl.Schema.TWebPage.Title
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Title
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 59
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: OpenTl.Schema.TWebPage.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.DescriptionAsBinary
  commentId: P:OpenTl.Schema.TWebPage.DescriptionAsBinary
  id: DescriptionAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: DescriptionAsBinary
  nameWithType: TWebPage.DescriptionAsBinary
  fullName: OpenTl.Schema.TWebPage.DescriptionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DescriptionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 62
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Description&apos; property
  example: []
  syntax:
    content: public byte[] DescriptionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property DescriptionAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.DescriptionAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Description
  commentId: P:OpenTl.Schema.TWebPage.Description
  id: Description
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TWebPage.Description
  fullName: OpenTl.Schema.TWebPage.Description
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Description
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 67
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: OpenTl.Schema.TWebPage.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Photo
  commentId: P:OpenTl.Schema.TWebPage.Photo
  id: Photo
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Photo
  nameWithType: TWebPage.Photo
  fullName: OpenTl.Schema.TWebPage.Photo
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Photo
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 69
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IPhoto Photo { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPhoto
    content.vb: Public Property Photo As IPhoto
  overload: OpenTl.Schema.TWebPage.Photo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedUrlAsBinary
  commentId: P:OpenTl.Schema.TWebPage.EmbedUrlAsBinary
  id: EmbedUrlAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedUrlAsBinary
  nameWithType: TWebPage.EmbedUrlAsBinary
  fullName: OpenTl.Schema.TWebPage.EmbedUrlAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedUrlAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 74
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;EmbedUrl&apos; property
  example: []
  syntax:
    content: public byte[] EmbedUrlAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property EmbedUrlAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.EmbedUrlAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedUrl
  commentId: P:OpenTl.Schema.TWebPage.EmbedUrl
  id: EmbedUrl
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedUrl
  nameWithType: TWebPage.EmbedUrl
  fullName: OpenTl.Schema.TWebPage.EmbedUrl
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedUrl
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 79
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string EmbedUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EmbedUrl As String
  overload: OpenTl.Schema.TWebPage.EmbedUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedTypeAsBinary
  commentId: P:OpenTl.Schema.TWebPage.EmbedTypeAsBinary
  id: EmbedTypeAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedTypeAsBinary
  nameWithType: TWebPage.EmbedTypeAsBinary
  fullName: OpenTl.Schema.TWebPage.EmbedTypeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedTypeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 82
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;EmbedType&apos; property
  example: []
  syntax:
    content: public byte[] EmbedTypeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property EmbedTypeAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.EmbedTypeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedType
  commentId: P:OpenTl.Schema.TWebPage.EmbedType
  id: EmbedType
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedType
  nameWithType: TWebPage.EmbedType
  fullName: OpenTl.Schema.TWebPage.EmbedType
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedType
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 87
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string EmbedType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EmbedType As String
  overload: OpenTl.Schema.TWebPage.EmbedType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedWidth
  commentId: P:OpenTl.Schema.TWebPage.EmbedWidth
  id: EmbedWidth
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedWidth
  nameWithType: TWebPage.EmbedWidth
  fullName: OpenTl.Schema.TWebPage.EmbedWidth
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedWidth
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 89
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int EmbedWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EmbedWidth As Integer
  overload: OpenTl.Schema.TWebPage.EmbedWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.EmbedHeight
  commentId: P:OpenTl.Schema.TWebPage.EmbedHeight
  id: EmbedHeight
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: EmbedHeight
  nameWithType: TWebPage.EmbedHeight
  fullName: OpenTl.Schema.TWebPage.EmbedHeight
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmbedHeight
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 93
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int EmbedHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EmbedHeight As Integer
  overload: OpenTl.Schema.TWebPage.EmbedHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Duration
  commentId: P:OpenTl.Schema.TWebPage.Duration
  id: Duration
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: TWebPage.Duration
  fullName: OpenTl.Schema.TWebPage.Duration
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Duration
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 97
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Duration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Duration As Integer
  overload: OpenTl.Schema.TWebPage.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.AuthorAsBinary
  commentId: P:OpenTl.Schema.TWebPage.AuthorAsBinary
  id: AuthorAsBinary
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: AuthorAsBinary
  nameWithType: TWebPage.AuthorAsBinary
  fullName: OpenTl.Schema.TWebPage.AuthorAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AuthorAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 102
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Author&apos; property
  example: []
  syntax:
    content: public byte[] AuthorAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AuthorAsBinary As Byte()
  overload: OpenTl.Schema.TWebPage.AuthorAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Author
  commentId: P:OpenTl.Schema.TWebPage.Author
  id: Author
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: TWebPage.Author
  fullName: OpenTl.Schema.TWebPage.Author
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Author
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 107
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Author { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Author As String
  overload: OpenTl.Schema.TWebPage.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.Document
  commentId: P:OpenTl.Schema.TWebPage.Document
  id: Document
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: TWebPage.Document
  fullName: OpenTl.Schema.TWebPage.Document
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Document
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 109
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IDocument Document { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IDocument
    content.vb: Public Property Document As IDocument
  overload: OpenTl.Schema.TWebPage.Document*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TWebPage.CachedPage
  commentId: P:OpenTl.Schema.TWebPage.CachedPage
  id: CachedPage
  parent: OpenTl.Schema.TWebPage
  langs:
  - csharp
  - vb
  name: CachedPage
  nameWithType: TWebPage.CachedPage
  fullName: OpenTl.Schema.TWebPage.CachedPage
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CachedPage
    path: ../src/OpenTl.Schema/_generated/_Entities/WebPage/TWebPage.cs
    startLine: 113
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IPage CachedPage { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPage
    content.vb: Public Property CachedPage As IPage
  overload: OpenTl.Schema.TWebPage.CachedPage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IWebPage
  commentId: T:OpenTl.Schema.IWebPage
  parent: OpenTl.Schema
  isExternal: false
  name: IWebPage
  nameWithType: IWebPage
  fullName: OpenTl.Schema.IWebPage
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TWebPage.Flags*
  commentId: Overload:OpenTl.Schema.TWebPage.Flags
  isExternal: false
  name: Flags
  nameWithType: TWebPage.Flags
  fullName: OpenTl.Schema.TWebPage.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.TWebPage.Id*
  commentId: Overload:OpenTl.Schema.TWebPage.Id
  isExternal: false
  name: Id
  nameWithType: TWebPage.Id
  fullName: OpenTl.Schema.TWebPage.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TWebPage.UrlAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.UrlAsBinary
  isExternal: false
  name: UrlAsBinary
  nameWithType: TWebPage.UrlAsBinary
  fullName: OpenTl.Schema.TWebPage.UrlAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TWebPage.Url*
  commentId: Overload:OpenTl.Schema.TWebPage.Url
  isExternal: false
  name: Url
  nameWithType: TWebPage.Url
  fullName: OpenTl.Schema.TWebPage.Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TWebPage.DisplayUrlAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.DisplayUrlAsBinary
  isExternal: false
  name: DisplayUrlAsBinary
  nameWithType: TWebPage.DisplayUrlAsBinary
  fullName: OpenTl.Schema.TWebPage.DisplayUrlAsBinary
- uid: OpenTl.Schema.TWebPage.DisplayUrl*
  commentId: Overload:OpenTl.Schema.TWebPage.DisplayUrl
  isExternal: false
  name: DisplayUrl
  nameWithType: TWebPage.DisplayUrl
  fullName: OpenTl.Schema.TWebPage.DisplayUrl
- uid: OpenTl.Schema.TWebPage.Hash*
  commentId: Overload:OpenTl.Schema.TWebPage.Hash
  isExternal: false
  name: Hash
  nameWithType: TWebPage.Hash
  fullName: OpenTl.Schema.TWebPage.Hash
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TWebPage.TypeAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.TypeAsBinary
  isExternal: false
  name: TypeAsBinary
  nameWithType: TWebPage.TypeAsBinary
  fullName: OpenTl.Schema.TWebPage.TypeAsBinary
- uid: OpenTl.Schema.TWebPage.Type*
  commentId: Overload:OpenTl.Schema.TWebPage.Type
  isExternal: false
  name: Type
  nameWithType: TWebPage.Type
  fullName: OpenTl.Schema.TWebPage.Type
- uid: OpenTl.Schema.TWebPage.SiteNameAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.SiteNameAsBinary
  isExternal: false
  name: SiteNameAsBinary
  nameWithType: TWebPage.SiteNameAsBinary
  fullName: OpenTl.Schema.TWebPage.SiteNameAsBinary
- uid: OpenTl.Schema.TWebPage.SiteName*
  commentId: Overload:OpenTl.Schema.TWebPage.SiteName
  isExternal: false
  name: SiteName
  nameWithType: TWebPage.SiteName
  fullName: OpenTl.Schema.TWebPage.SiteName
- uid: OpenTl.Schema.TWebPage.TitleAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.TitleAsBinary
  isExternal: false
  name: TitleAsBinary
  nameWithType: TWebPage.TitleAsBinary
  fullName: OpenTl.Schema.TWebPage.TitleAsBinary
- uid: OpenTl.Schema.TWebPage.Title*
  commentId: Overload:OpenTl.Schema.TWebPage.Title
  isExternal: false
  name: Title
  nameWithType: TWebPage.Title
  fullName: OpenTl.Schema.TWebPage.Title
- uid: OpenTl.Schema.TWebPage.DescriptionAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.DescriptionAsBinary
  isExternal: false
  name: DescriptionAsBinary
  nameWithType: TWebPage.DescriptionAsBinary
  fullName: OpenTl.Schema.TWebPage.DescriptionAsBinary
- uid: OpenTl.Schema.TWebPage.Description*
  commentId: Overload:OpenTl.Schema.TWebPage.Description
  isExternal: false
  name: Description
  nameWithType: TWebPage.Description
  fullName: OpenTl.Schema.TWebPage.Description
- uid: OpenTl.Schema.TWebPage.Photo*
  commentId: Overload:OpenTl.Schema.TWebPage.Photo
  isExternal: false
  name: Photo
  nameWithType: TWebPage.Photo
  fullName: OpenTl.Schema.TWebPage.Photo
- uid: OpenTl.Schema.IPhoto
  commentId: T:OpenTl.Schema.IPhoto
  parent: OpenTl.Schema
  isExternal: false
  name: IPhoto
  nameWithType: IPhoto
  fullName: OpenTl.Schema.IPhoto
- uid: OpenTl.Schema.TWebPage.EmbedUrlAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedUrlAsBinary
  isExternal: false
  name: EmbedUrlAsBinary
  nameWithType: TWebPage.EmbedUrlAsBinary
  fullName: OpenTl.Schema.TWebPage.EmbedUrlAsBinary
- uid: OpenTl.Schema.TWebPage.EmbedUrl*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedUrl
  isExternal: false
  name: EmbedUrl
  nameWithType: TWebPage.EmbedUrl
  fullName: OpenTl.Schema.TWebPage.EmbedUrl
- uid: OpenTl.Schema.TWebPage.EmbedTypeAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedTypeAsBinary
  isExternal: false
  name: EmbedTypeAsBinary
  nameWithType: TWebPage.EmbedTypeAsBinary
  fullName: OpenTl.Schema.TWebPage.EmbedTypeAsBinary
- uid: OpenTl.Schema.TWebPage.EmbedType*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedType
  isExternal: false
  name: EmbedType
  nameWithType: TWebPage.EmbedType
  fullName: OpenTl.Schema.TWebPage.EmbedType
- uid: OpenTl.Schema.TWebPage.EmbedWidth*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedWidth
  isExternal: false
  name: EmbedWidth
  nameWithType: TWebPage.EmbedWidth
  fullName: OpenTl.Schema.TWebPage.EmbedWidth
- uid: OpenTl.Schema.TWebPage.EmbedHeight*
  commentId: Overload:OpenTl.Schema.TWebPage.EmbedHeight
  isExternal: false
  name: EmbedHeight
  nameWithType: TWebPage.EmbedHeight
  fullName: OpenTl.Schema.TWebPage.EmbedHeight
- uid: OpenTl.Schema.TWebPage.Duration*
  commentId: Overload:OpenTl.Schema.TWebPage.Duration
  isExternal: false
  name: Duration
  nameWithType: TWebPage.Duration
  fullName: OpenTl.Schema.TWebPage.Duration
- uid: OpenTl.Schema.TWebPage.AuthorAsBinary*
  commentId: Overload:OpenTl.Schema.TWebPage.AuthorAsBinary
  isExternal: false
  name: AuthorAsBinary
  nameWithType: TWebPage.AuthorAsBinary
  fullName: OpenTl.Schema.TWebPage.AuthorAsBinary
- uid: OpenTl.Schema.TWebPage.Author*
  commentId: Overload:OpenTl.Schema.TWebPage.Author
  isExternal: false
  name: Author
  nameWithType: TWebPage.Author
  fullName: OpenTl.Schema.TWebPage.Author
- uid: OpenTl.Schema.TWebPage.Document*
  commentId: Overload:OpenTl.Schema.TWebPage.Document
  isExternal: false
  name: Document
  nameWithType: TWebPage.Document
  fullName: OpenTl.Schema.TWebPage.Document
- uid: OpenTl.Schema.IDocument
  commentId: T:OpenTl.Schema.IDocument
  parent: OpenTl.Schema
  isExternal: false
  name: IDocument
  nameWithType: IDocument
  fullName: OpenTl.Schema.IDocument
- uid: OpenTl.Schema.TWebPage.CachedPage*
  commentId: Overload:OpenTl.Schema.TWebPage.CachedPage
  isExternal: false
  name: CachedPage
  nameWithType: TWebPage.CachedPage
  fullName: OpenTl.Schema.TWebPage.CachedPage
- uid: OpenTl.Schema.IPage
  commentId: T:OpenTl.Schema.IPage
  parent: OpenTl.Schema
  isExternal: false
  name: IPage
  nameWithType: IPage
  fullName: OpenTl.Schema.IPage
