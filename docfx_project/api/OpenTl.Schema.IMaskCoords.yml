### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IMaskCoords
  commentId: T:OpenTl.Schema.IMaskCoords
  id: IMaskCoords
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IMaskCoords.N
  - OpenTl.Schema.IMaskCoords.X
  - OpenTl.Schema.IMaskCoords.Y
  - OpenTl.Schema.IMaskCoords.Zoom
  langs:
  - csharp
  - vb
  name: IMaskCoords
  nameWithType: IMaskCoords
  fullName: OpenTl.Schema.IMaskCoords
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IMaskCoords
    path: ../src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IMaskCoords : IObject'
    content.vb: >-
      Public Interface IMaskCoords

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IMaskCoords.N
  commentId: P:OpenTl.Schema.IMaskCoords.N
  id: N
  parent: OpenTl.Schema.IMaskCoords
  langs:
  - csharp
  - vb
  name: N
  nameWithType: IMaskCoords.N
  fullName: OpenTl.Schema.IMaskCoords.N
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: N
    path: ../src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int N { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property N As Integer
  overload: OpenTl.Schema.IMaskCoords.N*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMaskCoords.X
  commentId: P:OpenTl.Schema.IMaskCoords.X
  id: X
  parent: OpenTl.Schema.IMaskCoords
  langs:
  - csharp
  - vb
  name: X
  nameWithType: IMaskCoords.X
  fullName: OpenTl.Schema.IMaskCoords.X
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: X
    path: ../src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: double X { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Property X As Double
  overload: OpenTl.Schema.IMaskCoords.X*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMaskCoords.Y
  commentId: P:OpenTl.Schema.IMaskCoords.Y
  id: Y
  parent: OpenTl.Schema.IMaskCoords
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: IMaskCoords.Y
  fullName: OpenTl.Schema.IMaskCoords.Y
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Y
    path: ../src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: double Y { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Property Y As Double
  overload: OpenTl.Schema.IMaskCoords.Y*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IMaskCoords.Zoom
  commentId: P:OpenTl.Schema.IMaskCoords.Zoom
  id: Zoom
  parent: OpenTl.Schema.IMaskCoords
  langs:
  - csharp
  - vb
  name: Zoom
  nameWithType: IMaskCoords.Zoom
  fullName: OpenTl.Schema.IMaskCoords.Zoom
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Zoom
    path: ../src/OpenTl.Schema/_generated/_Entities/MaskCoords/IMaskCoords.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: double Zoom { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Property Zoom As Double
  overload: OpenTl.Schema.IMaskCoords.Zoom*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IMaskCoords.N*
  commentId: Overload:OpenTl.Schema.IMaskCoords.N
  isExternal: false
  name: N
  nameWithType: IMaskCoords.N
  fullName: OpenTl.Schema.IMaskCoords.N
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.IMaskCoords.X*
  commentId: Overload:OpenTl.Schema.IMaskCoords.X
  isExternal: false
  name: X
  nameWithType: IMaskCoords.X
  fullName: OpenTl.Schema.IMaskCoords.X
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OpenTl.Schema.IMaskCoords.Y*
  commentId: Overload:OpenTl.Schema.IMaskCoords.Y
  isExternal: false
  name: Y
  nameWithType: IMaskCoords.Y
  fullName: OpenTl.Schema.IMaskCoords.Y
- uid: OpenTl.Schema.IMaskCoords.Zoom*
  commentId: Overload:OpenTl.Schema.IMaskCoords.Zoom
  isExternal: false
  name: Zoom
  nameWithType: IMaskCoords.Zoom
  fullName: OpenTl.Schema.IMaskCoords.Zoom
