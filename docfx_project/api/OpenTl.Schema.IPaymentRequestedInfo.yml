### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IPaymentRequestedInfo
  commentId: T:OpenTl.Schema.IPaymentRequestedInfo
  id: IPaymentRequestedInfo
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IPaymentRequestedInfo.Email
  - OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
  - OpenTl.Schema.IPaymentRequestedInfo.Flags
  - OpenTl.Schema.IPaymentRequestedInfo.Name
  - OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
  - OpenTl.Schema.IPaymentRequestedInfo.Phone
  - OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
  - OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
  langs:
  - csharp
  - vb
  name: IPaymentRequestedInfo
  nameWithType: IPaymentRequestedInfo
  fullName: OpenTl.Schema.IPaymentRequestedInfo
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IPaymentRequestedInfo
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IPaymentRequestedInfo : IObject'
    content.vb: >-
      Public Interface IPaymentRequestedInfo

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IPaymentRequestedInfo.Flags
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.Flags
  id: Flags
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IPaymentRequestedInfo.Flags
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Property Flags As BitArray
  overload: OpenTl.Schema.IPaymentRequestedInfo.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
  id: NameAsBinary
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: NameAsBinary
  nameWithType: IPaymentRequestedInfo.NameAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] NameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property NameAsBinary As Byte()
  overload: OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.Name
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.Name
  id: Name
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IPaymentRequestedInfo.Name
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Name
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Name
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: OpenTl.Schema.IPaymentRequestedInfo.Name*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
  id: PhoneAsBinary
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: PhoneAsBinary
  nameWithType: IPaymentRequestedInfo.PhoneAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 16
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] PhoneAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property PhoneAsBinary As Byte()
  overload: OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.Phone
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.Phone
  id: Phone
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: IPaymentRequestedInfo.Phone
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Phone
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Phone
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Phone As String
  overload: OpenTl.Schema.IPaymentRequestedInfo.Phone*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
  id: EmailAsBinary
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: EmailAsBinary
  nameWithType: IPaymentRequestedInfo.EmailAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmailAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] EmailAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property EmailAsBinary As Byte()
  overload: OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.Email
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.Email
  id: Email
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: IPaymentRequestedInfo.Email
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Email
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Email
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Email As String
  overload: OpenTl.Schema.IPaymentRequestedInfo.Email*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
  commentId: P:OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
  id: ShippingAddress
  parent: OpenTl.Schema.IPaymentRequestedInfo
  langs:
  - csharp
  - vb
  name: ShippingAddress
  nameWithType: IPaymentRequestedInfo.ShippingAddress
  fullName: OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ShippingAddress
    path: ../src/OpenTl.Schema/_generated/_Entities/PaymentRequestedInfo/IPaymentRequestedInfo.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: IPostAddress ShippingAddress { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPostAddress
    content.vb: Property ShippingAddress As IPostAddress
  overload: OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IPaymentRequestedInfo.Flags*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.Flags
  isExternal: false
  name: Flags
  nameWithType: IPaymentRequestedInfo.Flags
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
  isExternal: false
  name: NameAsBinary
  nameWithType: IPaymentRequestedInfo.NameAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.NameAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.IPaymentRequestedInfo.Name*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.Name
  isExternal: false
  name: Name
  nameWithType: IPaymentRequestedInfo.Name
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
  isExternal: false
  name: PhoneAsBinary
  nameWithType: IPaymentRequestedInfo.PhoneAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.PhoneAsBinary
- uid: OpenTl.Schema.IPaymentRequestedInfo.Phone*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.Phone
  isExternal: false
  name: Phone
  nameWithType: IPaymentRequestedInfo.Phone
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Phone
- uid: OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
  isExternal: false
  name: EmailAsBinary
  nameWithType: IPaymentRequestedInfo.EmailAsBinary
  fullName: OpenTl.Schema.IPaymentRequestedInfo.EmailAsBinary
- uid: OpenTl.Schema.IPaymentRequestedInfo.Email*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.Email
  isExternal: false
  name: Email
  nameWithType: IPaymentRequestedInfo.Email
  fullName: OpenTl.Schema.IPaymentRequestedInfo.Email
- uid: OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress*
  commentId: Overload:OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
  isExternal: false
  name: ShippingAddress
  nameWithType: IPaymentRequestedInfo.ShippingAddress
  fullName: OpenTl.Schema.IPaymentRequestedInfo.ShippingAddress
- uid: OpenTl.Schema.IPostAddress
  commentId: T:OpenTl.Schema.IPostAddress
  parent: OpenTl.Schema
  isExternal: false
  name: IPostAddress
  nameWithType: IPostAddress
  fullName: OpenTl.Schema.IPostAddress
