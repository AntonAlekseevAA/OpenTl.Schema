### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IPhoneConnection
  commentId: T:OpenTl.Schema.IPhoneConnection
  id: IPhoneConnection
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IPhoneConnection.Id
  - OpenTl.Schema.IPhoneConnection.Ip
  - OpenTl.Schema.IPhoneConnection.IpAsBinary
  - OpenTl.Schema.IPhoneConnection.Ipv6
  - OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
  - OpenTl.Schema.IPhoneConnection.PeerTag
  - OpenTl.Schema.IPhoneConnection.Port
  langs:
  - csharp
  - vb
  name: IPhoneConnection
  nameWithType: IPhoneConnection
  fullName: OpenTl.Schema.IPhoneConnection
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IPhoneConnection
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IPhoneConnection : IObject'
    content.vb: >-
      Public Interface IPhoneConnection
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IPhoneConnection.Id
  commentId: P:OpenTl.Schema.IPhoneConnection.Id
  id: Id
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IPhoneConnection.Id
  fullName: OpenTl.Schema.IPhoneConnection.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Property Id As Long
  overload: OpenTl.Schema.IPhoneConnection.Id*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.IpAsBinary
  commentId: P:OpenTl.Schema.IPhoneConnection.IpAsBinary
  id: IpAsBinary
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: IpAsBinary
  nameWithType: IPhoneConnection.IpAsBinary
  fullName: OpenTl.Schema.IPhoneConnection.IpAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IpAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] IpAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property IpAsBinary As Byte()
  overload: OpenTl.Schema.IPhoneConnection.IpAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.Ip
  commentId: P:OpenTl.Schema.IPhoneConnection.Ip
  id: Ip
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: IPhoneConnection.Ip
  fullName: OpenTl.Schema.IPhoneConnection.Ip
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ip
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Ip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Ip As String
  overload: OpenTl.Schema.IPhoneConnection.Ip*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
  commentId: P:OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
  id: Ipv6AsBinary
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: Ipv6AsBinary
  nameWithType: IPhoneConnection.Ipv6AsBinary
  fullName: OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ipv6AsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 16
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] Ipv6AsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property Ipv6AsBinary As Byte()
  overload: OpenTl.Schema.IPhoneConnection.Ipv6AsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.Ipv6
  commentId: P:OpenTl.Schema.IPhoneConnection.Ipv6
  id: Ipv6
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: Ipv6
  nameWithType: IPhoneConnection.Ipv6
  fullName: OpenTl.Schema.IPhoneConnection.Ipv6
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ipv6
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Ipv6 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Ipv6 As String
  overload: OpenTl.Schema.IPhoneConnection.Ipv6*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.Port
  commentId: P:OpenTl.Schema.IPhoneConnection.Port
  id: Port
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: IPhoneConnection.Port
  fullName: OpenTl.Schema.IPhoneConnection.Port
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Port
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Port As Integer
  overload: OpenTl.Schema.IPhoneConnection.Port*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IPhoneConnection.PeerTag
  commentId: P:OpenTl.Schema.IPhoneConnection.PeerTag
  id: PeerTag
  parent: OpenTl.Schema.IPhoneConnection
  langs:
  - csharp
  - vb
  name: PeerTag
  nameWithType: IPhoneConnection.PeerTag
  fullName: OpenTl.Schema.IPhoneConnection.PeerTag
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PeerTag
    path: ../src/OpenTl.Schema/_generated/_Entities/PhoneConnection/IPhoneConnection.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] PeerTag { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property PeerTag As Byte()
  overload: OpenTl.Schema.IPhoneConnection.PeerTag*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IPhoneConnection.Id*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.Id
  isExternal: false
  name: Id
  nameWithType: IPhoneConnection.Id
  fullName: OpenTl.Schema.IPhoneConnection.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.IPhoneConnection.IpAsBinary*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.IpAsBinary
  isExternal: false
  name: IpAsBinary
  nameWithType: IPhoneConnection.IpAsBinary
  fullName: OpenTl.Schema.IPhoneConnection.IpAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.IPhoneConnection.Ip*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.Ip
  isExternal: false
  name: Ip
  nameWithType: IPhoneConnection.Ip
  fullName: OpenTl.Schema.IPhoneConnection.Ip
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.IPhoneConnection.Ipv6AsBinary*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
  isExternal: false
  name: Ipv6AsBinary
  nameWithType: IPhoneConnection.Ipv6AsBinary
  fullName: OpenTl.Schema.IPhoneConnection.Ipv6AsBinary
- uid: OpenTl.Schema.IPhoneConnection.Ipv6*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.Ipv6
  isExternal: false
  name: Ipv6
  nameWithType: IPhoneConnection.Ipv6
  fullName: OpenTl.Schema.IPhoneConnection.Ipv6
- uid: OpenTl.Schema.IPhoneConnection.Port*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.Port
  isExternal: false
  name: Port
  nameWithType: IPhoneConnection.Port
  fullName: OpenTl.Schema.IPhoneConnection.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.IPhoneConnection.PeerTag*
  commentId: Overload:OpenTl.Schema.IPhoneConnection.PeerTag
  isExternal: false
  name: PeerTag
  nameWithType: IPhoneConnection.PeerTag
  fullName: OpenTl.Schema.IPhoneConnection.PeerTag
