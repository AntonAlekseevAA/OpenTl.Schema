### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TPhoto
  commentId: T:OpenTl.Schema.TPhoto
  id: TPhoto
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TPhoto.AccessHash
  - OpenTl.Schema.TPhoto.Date
  - OpenTl.Schema.TPhoto.Flags
  - OpenTl.Schema.TPhoto.HasStickers
  - OpenTl.Schema.TPhoto.Id
  - OpenTl.Schema.TPhoto.Sizes
  langs:
  - csharp
  - vb
  name: TPhoto
  nameWithType: TPhoto
  fullName: OpenTl.Schema.TPhoto
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TPhoto
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TPhoto : object, IPhoto, IObject'
    content.vb: >-
      Public Class TPhoto

          Inherits Object

          Implements IPhoto, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IPhoto
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TPhoto.Flags
  commentId: P:OpenTl.Schema.TPhoto.Flags
  id: Flags
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TPhoto.Flags
  fullName: OpenTl.Schema.TPhoto.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.TPhoto.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPhoto.HasStickers
  commentId: P:OpenTl.Schema.TPhoto.HasStickers
  id: HasStickers
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: HasStickers
  nameWithType: TPhoto.HasStickers
  fullName: OpenTl.Schema.TPhoto.HasStickers
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: HasStickers
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool HasStickers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasStickers As Boolean
  overload: OpenTl.Schema.TPhoto.HasStickers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPhoto.Id
  commentId: P:OpenTl.Schema.TPhoto.Id
  id: Id
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TPhoto.Id
  fullName: OpenTl.Schema.TPhoto.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: OpenTl.Schema.TPhoto.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPhoto.AccessHash
  commentId: P:OpenTl.Schema.TPhoto.AccessHash
  id: AccessHash
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: AccessHash
  nameWithType: TPhoto.AccessHash
  fullName: OpenTl.Schema.TPhoto.AccessHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AccessHash
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long AccessHash { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property AccessHash As Long
  overload: OpenTl.Schema.TPhoto.AccessHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPhoto.Date
  commentId: P:OpenTl.Schema.TPhoto.Date
  id: Date
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: TPhoto.Date
  fullName: OpenTl.Schema.TPhoto.Date
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Date
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Date { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Date As Integer
  overload: OpenTl.Schema.TPhoto.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPhoto.Sizes
  commentId: P:OpenTl.Schema.TPhoto.Sizes
  id: Sizes
  parent: OpenTl.Schema.TPhoto
  langs:
  - csharp
  - vb
  name: Sizes
  nameWithType: TPhoto.Sizes
  fullName: OpenTl.Schema.TPhoto.Sizes
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Sizes
    path: ../src/OpenTl.Schema/_generated/_Entities/Photo/TPhoto.cs
    startLine: 30
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IPhotoSize> Sizes { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IPhotoSize}
    content.vb: Public Property Sizes As TVector(Of IPhotoSize)
  overload: OpenTl.Schema.TPhoto.Sizes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IPhoto
  commentId: T:OpenTl.Schema.IPhoto
  parent: OpenTl.Schema
  isExternal: false
  name: IPhoto
  nameWithType: IPhoto
  fullName: OpenTl.Schema.IPhoto
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.TPhoto.Flags*
  commentId: Overload:OpenTl.Schema.TPhoto.Flags
  isExternal: false
  name: Flags
  nameWithType: TPhoto.Flags
  fullName: OpenTl.Schema.TPhoto.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.TPhoto.HasStickers*
  commentId: Overload:OpenTl.Schema.TPhoto.HasStickers
  isExternal: false
  name: HasStickers
  nameWithType: TPhoto.HasStickers
  fullName: OpenTl.Schema.TPhoto.HasStickers
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.TPhoto.Id*
  commentId: Overload:OpenTl.Schema.TPhoto.Id
  isExternal: false
  name: Id
  nameWithType: TPhoto.Id
  fullName: OpenTl.Schema.TPhoto.Id
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TPhoto.AccessHash*
  commentId: Overload:OpenTl.Schema.TPhoto.AccessHash
  isExternal: false
  name: AccessHash
  nameWithType: TPhoto.AccessHash
  fullName: OpenTl.Schema.TPhoto.AccessHash
- uid: OpenTl.Schema.TPhoto.Date*
  commentId: Overload:OpenTl.Schema.TPhoto.Date
  isExternal: false
  name: Date
  nameWithType: TPhoto.Date
  fullName: OpenTl.Schema.TPhoto.Date
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TPhoto.Sizes*
  commentId: Overload:OpenTl.Schema.TPhoto.Sizes
  isExternal: false
  name: Sizes
  nameWithType: TPhoto.Sizes
  fullName: OpenTl.Schema.TPhoto.Sizes
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IPhotoSize}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IPhotoSize}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IPhotoSize>
  nameWithType: TVector<IPhotoSize>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IPhotoSize>
  nameWithType.vb: TVector(Of IPhotoSize)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IPhotoSize)
  name.vb: TVector(Of IPhotoSize)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IPhotoSize
    name: IPhotoSize
    nameWithType: IPhotoSize
    fullName: OpenTl.Schema.IPhotoSize
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IPhotoSize
    name: IPhotoSize
    nameWithType: IPhotoSize
    fullName: OpenTl.Schema.IPhotoSize
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
