### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TDocument
  commentId: T:OpenTl.Schema.TDocument
  id: TDocument
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TDocument.AccessHash
  - OpenTl.Schema.TDocument.Attributes
  - OpenTl.Schema.TDocument.Date
  - OpenTl.Schema.TDocument.DcId
  - OpenTl.Schema.TDocument.Id
  - OpenTl.Schema.TDocument.MimeType
  - OpenTl.Schema.TDocument.MimeTypeAsBinary
  - OpenTl.Schema.TDocument.Size
  - OpenTl.Schema.TDocument.Thumb
  - OpenTl.Schema.TDocument.Version
  langs:
  - csharp
  - vb
  name: TDocument
  nameWithType: TDocument
  fullName: OpenTl.Schema.TDocument
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TDocument
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TDocument : object, IDocument, IObject'
    content.vb: >-
      Public Class TDocument

          Inherits Object

          Implements IDocument, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IDocument
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TDocument.Id
  commentId: P:OpenTl.Schema.TDocument.Id
  id: Id
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TDocument.Id
  fullName: OpenTl.Schema.TDocument.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: OpenTl.Schema.TDocument.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.AccessHash
  commentId: P:OpenTl.Schema.TDocument.AccessHash
  id: AccessHash
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: AccessHash
  nameWithType: TDocument.AccessHash
  fullName: OpenTl.Schema.TDocument.AccessHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AccessHash
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long AccessHash { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property AccessHash As Long
  overload: OpenTl.Schema.TDocument.AccessHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.Date
  commentId: P:OpenTl.Schema.TDocument.Date
  id: Date
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: TDocument.Date
  fullName: OpenTl.Schema.TDocument.Date
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Date
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Date { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Date As Integer
  overload: OpenTl.Schema.TDocument.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.MimeTypeAsBinary
  commentId: P:OpenTl.Schema.TDocument.MimeTypeAsBinary
  id: MimeTypeAsBinary
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: MimeTypeAsBinary
  nameWithType: TDocument.MimeTypeAsBinary
  fullName: OpenTl.Schema.TDocument.MimeTypeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MimeTypeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;MimeType&apos; property
  example: []
  syntax:
    content: public byte[] MimeTypeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property MimeTypeAsBinary As Byte()
  overload: OpenTl.Schema.TDocument.MimeTypeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.MimeType
  commentId: P:OpenTl.Schema.TDocument.MimeType
  id: MimeType
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: TDocument.MimeType
  fullName: OpenTl.Schema.TDocument.MimeType
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MimeType
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string MimeType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MimeType As String
  overload: OpenTl.Schema.TDocument.MimeType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.Size
  commentId: P:OpenTl.Schema.TDocument.Size
  id: Size
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: TDocument.Size
  fullName: OpenTl.Schema.TDocument.Size
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Size
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 30
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Size { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Size As Integer
  overload: OpenTl.Schema.TDocument.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.Thumb
  commentId: P:OpenTl.Schema.TDocument.Thumb
  id: Thumb
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Thumb
  nameWithType: TDocument.Thumb
  fullName: OpenTl.Schema.TDocument.Thumb
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Thumb
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 33
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IPhotoSize Thumb { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPhotoSize
    content.vb: Public Property Thumb As IPhotoSize
  overload: OpenTl.Schema.TDocument.Thumb*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.DcId
  commentId: P:OpenTl.Schema.TDocument.DcId
  id: DcId
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: DcId
  nameWithType: TDocument.DcId
  fullName: OpenTl.Schema.TDocument.DcId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DcId
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int DcId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DcId As Integer
  overload: OpenTl.Schema.TDocument.DcId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.Version
  commentId: P:OpenTl.Schema.TDocument.Version
  id: Version
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: TDocument.Version
  fullName: OpenTl.Schema.TDocument.Version
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Version
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Version As Integer
  overload: OpenTl.Schema.TDocument.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TDocument.Attributes
  commentId: P:OpenTl.Schema.TDocument.Attributes
  id: Attributes
  parent: OpenTl.Schema.TDocument
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TDocument.Attributes
  fullName: OpenTl.Schema.TDocument.Attributes
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Attributes
    path: ../src/OpenTl.Schema/_generated/_Entities/Document/TDocument.cs
    startLine: 42
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IDocumentAttribute> Attributes { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
    content.vb: Public Property Attributes As TVector(Of IDocumentAttribute)
  overload: OpenTl.Schema.TDocument.Attributes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IDocument
  commentId: T:OpenTl.Schema.IDocument
  parent: OpenTl.Schema
  isExternal: false
  name: IDocument
  nameWithType: IDocument
  fullName: OpenTl.Schema.IDocument
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.TDocument.Id*
  commentId: Overload:OpenTl.Schema.TDocument.Id
  isExternal: false
  name: Id
  nameWithType: TDocument.Id
  fullName: OpenTl.Schema.TDocument.Id
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TDocument.AccessHash*
  commentId: Overload:OpenTl.Schema.TDocument.AccessHash
  isExternal: false
  name: AccessHash
  nameWithType: TDocument.AccessHash
  fullName: OpenTl.Schema.TDocument.AccessHash
- uid: OpenTl.Schema.TDocument.Date*
  commentId: Overload:OpenTl.Schema.TDocument.Date
  isExternal: false
  name: Date
  nameWithType: TDocument.Date
  fullName: OpenTl.Schema.TDocument.Date
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TDocument.MimeTypeAsBinary*
  commentId: Overload:OpenTl.Schema.TDocument.MimeTypeAsBinary
  isExternal: false
  name: MimeTypeAsBinary
  nameWithType: TDocument.MimeTypeAsBinary
  fullName: OpenTl.Schema.TDocument.MimeTypeAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TDocument.MimeType*
  commentId: Overload:OpenTl.Schema.TDocument.MimeType
  isExternal: false
  name: MimeType
  nameWithType: TDocument.MimeType
  fullName: OpenTl.Schema.TDocument.MimeType
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TDocument.Size*
  commentId: Overload:OpenTl.Schema.TDocument.Size
  isExternal: false
  name: Size
  nameWithType: TDocument.Size
  fullName: OpenTl.Schema.TDocument.Size
- uid: OpenTl.Schema.TDocument.Thumb*
  commentId: Overload:OpenTl.Schema.TDocument.Thumb
  isExternal: false
  name: Thumb
  nameWithType: TDocument.Thumb
  fullName: OpenTl.Schema.TDocument.Thumb
- uid: OpenTl.Schema.IPhotoSize
  commentId: T:OpenTl.Schema.IPhotoSize
  parent: OpenTl.Schema
  isExternal: false
  name: IPhotoSize
  nameWithType: IPhotoSize
  fullName: OpenTl.Schema.IPhotoSize
- uid: OpenTl.Schema.TDocument.DcId*
  commentId: Overload:OpenTl.Schema.TDocument.DcId
  isExternal: false
  name: DcId
  nameWithType: TDocument.DcId
  fullName: OpenTl.Schema.TDocument.DcId
- uid: OpenTl.Schema.TDocument.Version*
  commentId: Overload:OpenTl.Schema.TDocument.Version
  isExternal: false
  name: Version
  nameWithType: TDocument.Version
  fullName: OpenTl.Schema.TDocument.Version
- uid: OpenTl.Schema.TDocument.Attributes*
  commentId: Overload:OpenTl.Schema.TDocument.Attributes
  isExternal: false
  name: Attributes
  nameWithType: TDocument.Attributes
  fullName: OpenTl.Schema.TDocument.Attributes
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IDocumentAttribute}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IDocumentAttribute>
  nameWithType: TVector<IDocumentAttribute>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IDocumentAttribute>
  nameWithType.vb: TVector(Of IDocumentAttribute)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IDocumentAttribute)
  name.vb: TVector(Of IDocumentAttribute)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IDocumentAttribute
    name: IDocumentAttribute
    nameWithType: IDocumentAttribute
    fullName: OpenTl.Schema.IDocumentAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IDocumentAttribute
    name: IDocumentAttribute
    nameWithType: IDocumentAttribute
    fullName: OpenTl.Schema.IDocumentAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
