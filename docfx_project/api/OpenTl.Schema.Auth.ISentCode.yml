### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Auth.ISentCode
  commentId: T:OpenTl.Schema.Auth.ISentCode
  id: ISentCode
  parent: OpenTl.Schema.Auth
  children:
  - OpenTl.Schema.Auth.ISentCode.Flags
  - OpenTl.Schema.Auth.ISentCode.NextType
  - OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
  - OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
  - OpenTl.Schema.Auth.ISentCode.PhoneRegistered
  - OpenTl.Schema.Auth.ISentCode.Timeout
  - OpenTl.Schema.Auth.ISentCode.Type
  langs:
  - csharp
  - vb
  name: ISentCode
  nameWithType: ISentCode
  fullName: OpenTl.Schema.Auth.ISentCode
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ISentCode
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: 'public interface ISentCode : IObject'
    content.vb: >-
      Public Interface ISentCode
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Auth.ISentCode.Flags
  commentId: P:OpenTl.Schema.Auth.ISentCode.Flags
  id: Flags
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: ISentCode.Flags
  fullName: OpenTl.Schema.Auth.ISentCode.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Property Flags As BitArray
  overload: OpenTl.Schema.Auth.ISentCode.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.PhoneRegistered
  commentId: P:OpenTl.Schema.Auth.ISentCode.PhoneRegistered
  id: PhoneRegistered
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: PhoneRegistered
  nameWithType: ISentCode.PhoneRegistered
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneRegistered
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneRegistered
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: bool PhoneRegistered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property PhoneRegistered As Boolean
  overload: OpenTl.Schema.Auth.ISentCode.PhoneRegistered*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.Type
  commentId: P:OpenTl.Schema.Auth.ISentCode.Type
  id: Type
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ISentCode.Type
  fullName: OpenTl.Schema.Auth.ISentCode.Type
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Type
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: ISentCodeType Type { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.Auth.ISentCodeType
    content.vb: Property Type As ISentCodeType
  overload: OpenTl.Schema.Auth.ISentCode.Type*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
  commentId: P:OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
  id: PhoneCodeHashAsBinary
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: PhoneCodeHashAsBinary
  nameWithType: ISentCode.PhoneCodeHashAsBinary
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCodeHashAsBinary
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: byte[] PhoneCodeHashAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property PhoneCodeHashAsBinary As Byte()
  overload: OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
  commentId: P:OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
  id: PhoneCodeHash
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: PhoneCodeHash
  nameWithType: ISentCode.PhoneCodeHash
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCodeHash
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: string PhoneCodeHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PhoneCodeHash As String
  overload: OpenTl.Schema.Auth.ISentCode.PhoneCodeHash*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.NextType
  commentId: P:OpenTl.Schema.Auth.ISentCode.NextType
  id: NextType
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: NextType
  nameWithType: ISentCode.NextType
  fullName: OpenTl.Schema.Auth.ISentCode.NextType
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NextType
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: ICodeType NextType { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.Auth.ICodeType
    content.vb: Property NextType As ICodeType
  overload: OpenTl.Schema.Auth.ISentCode.NextType*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Auth.ISentCode.Timeout
  commentId: P:OpenTl.Schema.Auth.ISentCode.Timeout
  id: Timeout
  parent: OpenTl.Schema.Auth.ISentCode
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: ISentCode.Timeout
  fullName: OpenTl.Schema.Auth.ISentCode.Timeout
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Timeout
    path: ../src/OpenTl.Schema/_generated/Auth/SentCode/ISentCode.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Auth
  syntax:
    content: int Timeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Timeout As Integer
  overload: OpenTl.Schema.Auth.ISentCode.Timeout*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Auth
  commentId: N:OpenTl.Schema.Auth
  isExternal: false
  name: OpenTl.Schema.Auth
  nameWithType: OpenTl.Schema.Auth
  fullName: OpenTl.Schema.Auth
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Auth.ISentCode.Flags*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.Flags
  isExternal: false
  name: Flags
  nameWithType: ISentCode.Flags
  fullName: OpenTl.Schema.Auth.ISentCode.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.Auth.ISentCode.PhoneRegistered*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.PhoneRegistered
  isExternal: false
  name: PhoneRegistered
  nameWithType: ISentCode.PhoneRegistered
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneRegistered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Auth.ISentCode.Type*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.Type
  isExternal: false
  name: Type
  nameWithType: ISentCode.Type
  fullName: OpenTl.Schema.Auth.ISentCode.Type
- uid: OpenTl.Schema.Auth.ISentCodeType
  commentId: T:OpenTl.Schema.Auth.ISentCodeType
  parent: OpenTl.Schema.Auth
  isExternal: false
  name: ISentCodeType
  nameWithType: ISentCodeType
  fullName: OpenTl.Schema.Auth.ISentCodeType
- uid: OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
  isExternal: false
  name: PhoneCodeHashAsBinary
  nameWithType: ISentCode.PhoneCodeHashAsBinary
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneCodeHashAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Auth.ISentCode.PhoneCodeHash*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
  isExternal: false
  name: PhoneCodeHash
  nameWithType: ISentCode.PhoneCodeHash
  fullName: OpenTl.Schema.Auth.ISentCode.PhoneCodeHash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Auth.ISentCode.NextType*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.NextType
  isExternal: false
  name: NextType
  nameWithType: ISentCode.NextType
  fullName: OpenTl.Schema.Auth.ISentCode.NextType
- uid: OpenTl.Schema.Auth.ICodeType
  commentId: T:OpenTl.Schema.Auth.ICodeType
  parent: OpenTl.Schema.Auth
  isExternal: false
  name: ICodeType
  nameWithType: ICodeType
  fullName: OpenTl.Schema.Auth.ICodeType
- uid: OpenTl.Schema.Auth.ISentCode.Timeout*
  commentId: Overload:OpenTl.Schema.Auth.ISentCode.Timeout
  isExternal: false
  name: Timeout
  nameWithType: ISentCode.Timeout
  fullName: OpenTl.Schema.Auth.ISentCode.Timeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
