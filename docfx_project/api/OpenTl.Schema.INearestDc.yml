### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.INearestDc
  commentId: T:OpenTl.Schema.INearestDc
  id: INearestDc
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.INearestDc.Country
  - OpenTl.Schema.INearestDc.CountryAsBinary
  - OpenTl.Schema.INearestDc.NearestDc
  - OpenTl.Schema.INearestDc.ThisDc
  langs:
  - csharp
  - vb
  name: INearestDc
  nameWithType: INearestDc
  fullName: OpenTl.Schema.INearestDc
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: INearestDc
    path: ../src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface INearestDc : IObject'
    content.vb: >-
      Public Interface INearestDc

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.INearestDc.CountryAsBinary
  commentId: P:OpenTl.Schema.INearestDc.CountryAsBinary
  id: CountryAsBinary
  parent: OpenTl.Schema.INearestDc
  langs:
  - csharp
  - vb
  name: CountryAsBinary
  nameWithType: INearestDc.CountryAsBinary
  fullName: OpenTl.Schema.INearestDc.CountryAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CountryAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] CountryAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property CountryAsBinary As Byte()
  overload: OpenTl.Schema.INearestDc.CountryAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.INearestDc.Country
  commentId: P:OpenTl.Schema.INearestDc.Country
  id: Country
  parent: OpenTl.Schema.INearestDc
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: INearestDc.Country
  fullName: OpenTl.Schema.INearestDc.Country
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Country
    path: ../src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
    startLine: 12
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Country As String
  overload: OpenTl.Schema.INearestDc.Country*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.INearestDc.ThisDc
  commentId: P:OpenTl.Schema.INearestDc.ThisDc
  id: ThisDc
  parent: OpenTl.Schema.INearestDc
  langs:
  - csharp
  - vb
  name: ThisDc
  nameWithType: INearestDc.ThisDc
  fullName: OpenTl.Schema.INearestDc.ThisDc
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ThisDc
    path: ../src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int ThisDc { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property ThisDc As Integer
  overload: OpenTl.Schema.INearestDc.ThisDc*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.INearestDc.NearestDc
  commentId: P:OpenTl.Schema.INearestDc.NearestDc
  id: NearestDc
  parent: OpenTl.Schema.INearestDc
  langs:
  - csharp
  - vb
  name: NearestDc
  nameWithType: INearestDc.NearestDc
  fullName: OpenTl.Schema.INearestDc.NearestDc
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NearestDc
    path: ../src/OpenTl.Schema/_generated/_Entities/NearestDc/INearestDc.cs
    startLine: 16
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int NearestDc { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property NearestDc As Integer
  overload: OpenTl.Schema.INearestDc.NearestDc*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.INearestDc.CountryAsBinary*
  commentId: Overload:OpenTl.Schema.INearestDc.CountryAsBinary
  isExternal: false
  name: CountryAsBinary
  nameWithType: INearestDc.CountryAsBinary
  fullName: OpenTl.Schema.INearestDc.CountryAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.INearestDc.Country*
  commentId: Overload:OpenTl.Schema.INearestDc.Country
  isExternal: false
  name: Country
  nameWithType: INearestDc.Country
  fullName: OpenTl.Schema.INearestDc.Country
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.INearestDc.ThisDc*
  commentId: Overload:OpenTl.Schema.INearestDc.ThisDc
  isExternal: false
  name: ThisDc
  nameWithType: INearestDc.ThisDc
  fullName: OpenTl.Schema.INearestDc.ThisDc
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.INearestDc.NearestDc*
  commentId: Overload:OpenTl.Schema.INearestDc.NearestDc
  isExternal: false
  name: NearestDc
  nameWithType: INearestDc.NearestDc
  fullName: OpenTl.Schema.INearestDc.NearestDc
