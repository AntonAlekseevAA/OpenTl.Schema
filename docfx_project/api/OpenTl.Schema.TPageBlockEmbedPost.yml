### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TPageBlockEmbedPost
  commentId: T:OpenTl.Schema.TPageBlockEmbedPost
  id: TPageBlockEmbedPost
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TPageBlockEmbedPost.Author
  - OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
  - OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
  - OpenTl.Schema.TPageBlockEmbedPost.Blocks
  - OpenTl.Schema.TPageBlockEmbedPost.Caption
  - OpenTl.Schema.TPageBlockEmbedPost.Date
  - OpenTl.Schema.TPageBlockEmbedPost.Url
  - OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
  - OpenTl.Schema.TPageBlockEmbedPost.WebpageId
  langs:
  - csharp
  - vb
  name: TPageBlockEmbedPost
  nameWithType: TPageBlockEmbedPost
  fullName: OpenTl.Schema.TPageBlockEmbedPost
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TPageBlockEmbedPost
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TPageBlockEmbedPost : IPageBlock, IObject'
    content.vb: >-
      Public Class TPageBlockEmbedPost
          Implements IPageBlock, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IPageBlock
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
  id: UrlAsBinary
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: UrlAsBinary
  nameWithType: TPageBlockEmbedPost.UrlAsBinary
  fullName: OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UrlAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Url&apos; property
  example: []
  syntax:
    content: public byte[] UrlAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property UrlAsBinary As Byte()
  overload: OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.Url
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.Url
  id: Url
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: TPageBlockEmbedPost.Url
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Url
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Url
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Url As String
  overload: OpenTl.Schema.TPageBlockEmbedPost.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.WebpageId
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.WebpageId
  id: WebpageId
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: WebpageId
  nameWithType: TPageBlockEmbedPost.WebpageId
  fullName: OpenTl.Schema.TPageBlockEmbedPost.WebpageId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: WebpageId
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long WebpageId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property WebpageId As Long
  overload: OpenTl.Schema.TPageBlockEmbedPost.WebpageId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
  id: AuthorPhotoId
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: AuthorPhotoId
  nameWithType: TPageBlockEmbedPost.AuthorPhotoId
  fullName: OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AuthorPhotoId
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long AuthorPhotoId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property AuthorPhotoId As Long
  overload: OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
  id: AuthorAsBinary
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: AuthorAsBinary
  nameWithType: TPageBlockEmbedPost.AuthorAsBinary
  fullName: OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AuthorAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Author&apos; property
  example: []
  syntax:
    content: public byte[] AuthorAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AuthorAsBinary As Byte()
  overload: OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.Author
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.Author
  id: Author
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: TPageBlockEmbedPost.Author
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Author
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Author
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Author { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Author As String
  overload: OpenTl.Schema.TPageBlockEmbedPost.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.Date
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.Date
  id: Date
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: TPageBlockEmbedPost.Date
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Date
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Date
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 34
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Date { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Date As Integer
  overload: OpenTl.Schema.TPageBlockEmbedPost.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.Blocks
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.Blocks
  id: Blocks
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: Blocks
  nameWithType: TPageBlockEmbedPost.Blocks
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Blocks
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Blocks
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 37
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IPageBlock> Blocks { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IPageBlock}
    content.vb: Public Property Blocks As TVector(Of IPageBlock)
  overload: OpenTl.Schema.TPageBlockEmbedPost.Blocks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TPageBlockEmbedPost.Caption
  commentId: P:OpenTl.Schema.TPageBlockEmbedPost.Caption
  id: Caption
  parent: OpenTl.Schema.TPageBlockEmbedPost
  langs:
  - csharp
  - vb
  name: Caption
  nameWithType: TPageBlockEmbedPost.Caption
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Caption
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Caption
    path: ../src/OpenTl.Schema/_generated/_Entities/PageBlock/TPageBlockEmbedPost.cs
    startLine: 40
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IRichText Caption { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IRichText
    content.vb: Public Property Caption As IRichText
  overload: OpenTl.Schema.TPageBlockEmbedPost.Caption*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IPageBlock
  commentId: T:OpenTl.Schema.IPageBlock
  parent: OpenTl.Schema
  isExternal: false
  name: IPageBlock
  nameWithType: IPageBlock
  fullName: OpenTl.Schema.IPageBlock
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
  isExternal: false
  name: UrlAsBinary
  nameWithType: TPageBlockEmbedPost.UrlAsBinary
  fullName: OpenTl.Schema.TPageBlockEmbedPost.UrlAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TPageBlockEmbedPost.Url*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.Url
  isExternal: false
  name: Url
  nameWithType: TPageBlockEmbedPost.Url
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TPageBlockEmbedPost.WebpageId*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.WebpageId
  isExternal: false
  name: WebpageId
  nameWithType: TPageBlockEmbedPost.WebpageId
  fullName: OpenTl.Schema.TPageBlockEmbedPost.WebpageId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
  isExternal: false
  name: AuthorPhotoId
  nameWithType: TPageBlockEmbedPost.AuthorPhotoId
  fullName: OpenTl.Schema.TPageBlockEmbedPost.AuthorPhotoId
- uid: OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
  isExternal: false
  name: AuthorAsBinary
  nameWithType: TPageBlockEmbedPost.AuthorAsBinary
  fullName: OpenTl.Schema.TPageBlockEmbedPost.AuthorAsBinary
- uid: OpenTl.Schema.TPageBlockEmbedPost.Author*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.Author
  isExternal: false
  name: Author
  nameWithType: TPageBlockEmbedPost.Author
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Author
- uid: OpenTl.Schema.TPageBlockEmbedPost.Date*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.Date
  isExternal: false
  name: Date
  nameWithType: TPageBlockEmbedPost.Date
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Date
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TPageBlockEmbedPost.Blocks*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.Blocks
  isExternal: false
  name: Blocks
  nameWithType: TPageBlockEmbedPost.Blocks
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Blocks
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IPageBlock}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IPageBlock}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IPageBlock>
  nameWithType: TVector<IPageBlock>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IPageBlock>
  nameWithType.vb: TVector(Of IPageBlock)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IPageBlock)
  name.vb: TVector(Of IPageBlock)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IPageBlock
    name: IPageBlock
    nameWithType: IPageBlock
    fullName: OpenTl.Schema.IPageBlock
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IPageBlock
    name: IPageBlock
    nameWithType: IPageBlock
    fullName: OpenTl.Schema.IPageBlock
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TPageBlockEmbedPost.Caption*
  commentId: Overload:OpenTl.Schema.TPageBlockEmbedPost.Caption
  isExternal: false
  name: Caption
  nameWithType: TPageBlockEmbedPost.Caption
  fullName: OpenTl.Schema.TPageBlockEmbedPost.Caption
- uid: OpenTl.Schema.IRichText
  commentId: T:OpenTl.Schema.IRichText
  parent: OpenTl.Schema
  isExternal: false
  name: IRichText
  nameWithType: IRichText
  fullName: OpenTl.Schema.IRichText
