### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.IBotResults
  commentId: T:OpenTl.Schema.Messages.IBotResults
  id: IBotResults
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.IBotResults.CacheTime
  - OpenTl.Schema.Messages.IBotResults.Flags
  - OpenTl.Schema.Messages.IBotResults.Gallery
  - OpenTl.Schema.Messages.IBotResults.NextOffset
  - OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  - OpenTl.Schema.Messages.IBotResults.QueryId
  - OpenTl.Schema.Messages.IBotResults.Results
  - OpenTl.Schema.Messages.IBotResults.SwitchPm
  - OpenTl.Schema.Messages.IBotResults.Users
  langs:
  - csharp
  - vb
  name: IBotResults
  nameWithType: IBotResults
  fullName: OpenTl.Schema.Messages.IBotResults
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IBotResults
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public interface IBotResults : IObject'
    content.vb: >-
      Public Interface IBotResults

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Messages.IBotResults.Flags
  commentId: P:OpenTl.Schema.Messages.IBotResults.Flags
  id: Flags
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IBotResults.Flags
  fullName: OpenTl.Schema.Messages.IBotResults.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Property Flags As BitArray
  overload: OpenTl.Schema.Messages.IBotResults.Flags*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.Gallery
  commentId: P:OpenTl.Schema.Messages.IBotResults.Gallery
  id: Gallery
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: Gallery
  nameWithType: IBotResults.Gallery
  fullName: OpenTl.Schema.Messages.IBotResults.Gallery
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Gallery
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: bool Gallery { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Gallery As Boolean
  overload: OpenTl.Schema.Messages.IBotResults.Gallery*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.QueryId
  commentId: P:OpenTl.Schema.Messages.IBotResults.QueryId
  id: QueryId
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: QueryId
  nameWithType: IBotResults.QueryId
  fullName: OpenTl.Schema.Messages.IBotResults.QueryId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: QueryId
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: long QueryId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Property QueryId As Long
  overload: OpenTl.Schema.Messages.IBotResults.QueryId*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  commentId: P:OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  id: NextOffsetAsBinary
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: NextOffsetAsBinary
  nameWithType: IBotResults.NextOffsetAsBinary
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NextOffsetAsBinary
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: byte[] NextOffsetAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property NextOffsetAsBinary As Byte()
  overload: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.NextOffset
  commentId: P:OpenTl.Schema.Messages.IBotResults.NextOffset
  id: NextOffset
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: NextOffset
  nameWithType: IBotResults.NextOffset
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffset
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NextOffset
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: string NextOffset { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property NextOffset As String
  overload: OpenTl.Schema.Messages.IBotResults.NextOffset*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.SwitchPm
  commentId: P:OpenTl.Schema.Messages.IBotResults.SwitchPm
  id: SwitchPm
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: SwitchPm
  nameWithType: IBotResults.SwitchPm
  fullName: OpenTl.Schema.Messages.IBotResults.SwitchPm
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SwitchPm
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 20
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: IInlineBotSwitchPM SwitchPm { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInlineBotSwitchPM
    content.vb: Property SwitchPm As IInlineBotSwitchPM
  overload: OpenTl.Schema.Messages.IBotResults.SwitchPm*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.Results
  commentId: P:OpenTl.Schema.Messages.IBotResults.Results
  id: Results
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: IBotResults.Results
  fullName: OpenTl.Schema.Messages.IBotResults.Results
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Results
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: TVector<IBotInlineResult> Results { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
    content.vb: Property Results As TVector(Of IBotInlineResult)
  overload: OpenTl.Schema.Messages.IBotResults.Results*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.CacheTime
  commentId: P:OpenTl.Schema.Messages.IBotResults.CacheTime
  id: CacheTime
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: CacheTime
  nameWithType: IBotResults.CacheTime
  fullName: OpenTl.Schema.Messages.IBotResults.CacheTime
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CacheTime
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 24
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: int CacheTime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property CacheTime As Integer
  overload: OpenTl.Schema.Messages.IBotResults.CacheTime*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IBotResults.Users
  commentId: P:OpenTl.Schema.Messages.IBotResults.Users
  id: Users
  parent: OpenTl.Schema.Messages.IBotResults
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: IBotResults.Users
  fullName: OpenTl.Schema.Messages.IBotResults.Users
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Users
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/IBotResults.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: TVector<IUser> Users { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
    content.vb: Property Users As TVector(Of IUser)
  overload: OpenTl.Schema.Messages.IBotResults.Users*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.IBotResults.Flags*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.Flags
  isExternal: false
  name: Flags
  nameWithType: IBotResults.Flags
  fullName: OpenTl.Schema.Messages.IBotResults.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Messages.IBotResults.Gallery*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.Gallery
  isExternal: false
  name: Gallery
  nameWithType: IBotResults.Gallery
  fullName: OpenTl.Schema.Messages.IBotResults.Gallery
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Messages.IBotResults.QueryId*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.QueryId
  isExternal: false
  name: QueryId
  nameWithType: IBotResults.QueryId
  fullName: OpenTl.Schema.Messages.IBotResults.QueryId
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  isExternal: false
  name: NextOffsetAsBinary
  nameWithType: IBotResults.NextOffsetAsBinary
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Messages.IBotResults.NextOffset*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.NextOffset
  isExternal: false
  name: NextOffset
  nameWithType: IBotResults.NextOffset
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffset
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Messages.IBotResults.SwitchPm*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.SwitchPm
  isExternal: false
  name: SwitchPm
  nameWithType: IBotResults.SwitchPm
  fullName: OpenTl.Schema.Messages.IBotResults.SwitchPm
- uid: OpenTl.Schema.IInlineBotSwitchPM
  commentId: T:OpenTl.Schema.IInlineBotSwitchPM
  parent: OpenTl.Schema
  isExternal: false
  name: IInlineBotSwitchPM
  nameWithType: IInlineBotSwitchPM
  fullName: OpenTl.Schema.IInlineBotSwitchPM
- uid: OpenTl.Schema.Messages.IBotResults.Results*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.Results
  isExternal: false
  name: Results
  nameWithType: IBotResults.Results
  fullName: OpenTl.Schema.Messages.IBotResults.Results
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IBotInlineResult>
  nameWithType: TVector<IBotInlineResult>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IBotInlineResult>
  nameWithType.vb: TVector(Of IBotInlineResult)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IBotInlineResult)
  name.vb: TVector(Of IBotInlineResult)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IBotInlineResult
    name: IBotInlineResult
    nameWithType: IBotInlineResult
    fullName: OpenTl.Schema.IBotInlineResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IBotInlineResult
    name: IBotInlineResult
    nameWithType: IBotInlineResult
    fullName: OpenTl.Schema.IBotInlineResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Messages.IBotResults.CacheTime*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.CacheTime
  isExternal: false
  name: CacheTime
  nameWithType: IBotResults.CacheTime
  fullName: OpenTl.Schema.Messages.IBotResults.CacheTime
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Messages.IBotResults.Users*
  commentId: Overload:OpenTl.Schema.Messages.IBotResults.Users
  isExternal: false
  name: Users
  nameWithType: IBotResults.Users
  fullName: OpenTl.Schema.Messages.IBotResults.Users
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IUser>
  nameWithType: TVector<IUser>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IUser>
  nameWithType.vb: TVector(Of IUser)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IUser)
  name.vb: TVector(Of IUser)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: )
    nameWithType: )
    fullName: )
