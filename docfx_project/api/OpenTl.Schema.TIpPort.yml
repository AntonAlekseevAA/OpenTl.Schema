### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TIpPort
  commentId: T:OpenTl.Schema.TIpPort
  id: TIpPort
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TIpPort.Ipv4
  - OpenTl.Schema.TIpPort.Port
  langs:
  - csharp
  - vb
  name: TIpPort
  nameWithType: TIpPort
  fullName: OpenTl.Schema.TIpPort
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/Entities/TIpPort.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TIpPort
    path: ../src/OpenTl.Schema/Entities/TIpPort.cs
    startLine: 2
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TIpPort : object'
    content.vb: >-
      Public Class TIpPort

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TIpPort.Ipv4
  commentId: P:OpenTl.Schema.TIpPort.Ipv4
  id: Ipv4
  parent: OpenTl.Schema.TIpPort
  langs:
  - csharp
  - vb
  name: Ipv4
  nameWithType: TIpPort.Ipv4
  fullName: OpenTl.Schema.TIpPort.Ipv4
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/Entities/TIpPort.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Ipv4
    path: ../src/OpenTl.Schema/Entities/TIpPort.cs
    startLine: 4
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Ipv4 { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Ipv4 As Integer
  overload: OpenTl.Schema.TIpPort.Ipv4*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TIpPort.Port
  commentId: P:OpenTl.Schema.TIpPort.Port
  id: Port
  parent: OpenTl.Schema.TIpPort
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: TIpPort.Port
  fullName: OpenTl.Schema.TIpPort.Port
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/Entities/TIpPort.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Port
    path: ../src/OpenTl.Schema/Entities/TIpPort.cs
    startLine: 6
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: OpenTl.Schema.TIpPort.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.TIpPort.Ipv4*
  commentId: Overload:OpenTl.Schema.TIpPort.Ipv4
  isExternal: false
  name: Ipv4
  nameWithType: TIpPort.Ipv4
  fullName: OpenTl.Schema.TIpPort.Ipv4
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TIpPort.Port*
  commentId: Overload:OpenTl.Schema.TIpPort.Port
  isExternal: false
  name: Port
  nameWithType: TIpPort.Port
  fullName: OpenTl.Schema.TIpPort.Port
