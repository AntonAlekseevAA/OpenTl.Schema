### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Account.RequestChangePhone
  commentId: T:OpenTl.Schema.Account.RequestChangePhone
  id: RequestChangePhone
  parent: OpenTl.Schema.Account
  children:
  - OpenTl.Schema.Account.RequestChangePhone.PhoneCode
  - OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
  - OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
  - OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
  - OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
  - OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
  langs:
  - csharp
  - vb
  name: RequestChangePhone
  nameWithType: RequestChangePhone
  fullName: OpenTl.Schema.Account.RequestChangePhone
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestChangePhone
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: 'public class RequestChangePhone : object, IRequest<IUser>, IRequest, IObject'
    content.vb: >-
      Public Class RequestChangePhone

          Inherits Object

          Implements IRequest(Of IUser), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.IUser}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
  id: PhoneNumberAsBinary
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneNumberAsBinary
  nameWithType: RequestChangePhone.PhoneNumberAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneNumberAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;PhoneNumber&apos; property
  example: []
  syntax:
    content: public byte[] PhoneNumberAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PhoneNumberAsBinary As Byte()
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
  id: PhoneNumber
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: RequestChangePhone.PhoneNumber
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneNumber
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 19
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneNumber As String
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
  id: PhoneCodeHashAsBinary
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneCodeHashAsBinary
  nameWithType: RequestChangePhone.PhoneCodeHashAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCodeHashAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;PhoneCodeHash&apos; property
  example: []
  syntax:
    content: public byte[] PhoneCodeHashAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PhoneCodeHashAsBinary As Byte()
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
  id: PhoneCodeHash
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneCodeHash
  nameWithType: RequestChangePhone.PhoneCodeHash
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCodeHash
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string PhoneCodeHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneCodeHash As String
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
  id: PhoneCodeAsBinary
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneCodeAsBinary
  nameWithType: RequestChangePhone.PhoneCodeAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCodeAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;PhoneCode&apos; property
  example: []
  syntax:
    content: public byte[] PhoneCodeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PhoneCodeAsBinary As Byte()
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCode
  commentId: P:OpenTl.Schema.Account.RequestChangePhone.PhoneCode
  id: PhoneCode
  parent: OpenTl.Schema.Account.RequestChangePhone
  langs:
  - csharp
  - vb
  name: PhoneCode
  nameWithType: RequestChangePhone.PhoneCode
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCode
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PhoneCode
    path: ../src/OpenTl.Schema/_generated/Account/RequestChangePhone.cs
    startLine: 33
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string PhoneCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneCode As String
  overload: OpenTl.Schema.Account.RequestChangePhone.PhoneCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Account
  commentId: N:OpenTl.Schema.Account
  isExternal: false
  name: OpenTl.Schema.Account
  nameWithType: OpenTl.Schema.Account
  fullName: OpenTl.Schema.Account
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.IUser}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.IUser}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IUser>
  nameWithType: IRequest<IUser>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.IUser>
  nameWithType.vb: IRequest(Of IUser)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.IUser)
  name.vb: IRequest(Of IUser)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
  isExternal: false
  name: PhoneNumberAsBinary
  nameWithType: RequestChangePhone.PhoneNumberAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneNumberAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneNumber*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
  isExternal: false
  name: PhoneNumber
  nameWithType: RequestChangePhone.PhoneNumber
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneNumber
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
  isExternal: false
  name: PhoneCodeHashAsBinary
  nameWithType: RequestChangePhone.PhoneCodeHashAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHashAsBinary
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
  isExternal: false
  name: PhoneCodeHash
  nameWithType: RequestChangePhone.PhoneCodeHash
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeHash
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
  isExternal: false
  name: PhoneCodeAsBinary
  nameWithType: RequestChangePhone.PhoneCodeAsBinary
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCodeAsBinary
- uid: OpenTl.Schema.Account.RequestChangePhone.PhoneCode*
  commentId: Overload:OpenTl.Schema.Account.RequestChangePhone.PhoneCode
  isExternal: false
  name: PhoneCode
  nameWithType: RequestChangePhone.PhoneCode
  fullName: OpenTl.Schema.Account.RequestChangePhone.PhoneCode
