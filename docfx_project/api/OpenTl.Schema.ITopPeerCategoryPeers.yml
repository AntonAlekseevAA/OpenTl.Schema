### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.ITopPeerCategoryPeers
  commentId: T:OpenTl.Schema.ITopPeerCategoryPeers
  id: ITopPeerCategoryPeers
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.ITopPeerCategoryPeers.Category
  - OpenTl.Schema.ITopPeerCategoryPeers.Count
  - OpenTl.Schema.ITopPeerCategoryPeers.Peers
  langs:
  - csharp
  - vb
  name: ITopPeerCategoryPeers
  nameWithType: ITopPeerCategoryPeers
  fullName: OpenTl.Schema.ITopPeerCategoryPeers
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ITopPeerCategoryPeers
    path: ../src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface ITopPeerCategoryPeers : IObject'
    content.vb: >-
      Public Interface ITopPeerCategoryPeers
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Category
  commentId: P:OpenTl.Schema.ITopPeerCategoryPeers.Category
  id: Category
  parent: OpenTl.Schema.ITopPeerCategoryPeers
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: ITopPeerCategoryPeers.Category
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Category
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Category
    path: ../src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: ITopPeerCategory Category { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.ITopPeerCategory
    content.vb: Property Category As ITopPeerCategory
  overload: OpenTl.Schema.ITopPeerCategoryPeers.Category*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Count
  commentId: P:OpenTl.Schema.ITopPeerCategoryPeers.Count
  id: Count
  parent: OpenTl.Schema.ITopPeerCategoryPeers
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ITopPeerCategoryPeers.Count
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Count
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Count
    path: ../src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: int Count { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Count As Integer
  overload: OpenTl.Schema.ITopPeerCategoryPeers.Count*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Peers
  commentId: P:OpenTl.Schema.ITopPeerCategoryPeers.Peers
  id: Peers
  parent: OpenTl.Schema.ITopPeerCategoryPeers
  langs:
  - csharp
  - vb
  name: Peers
  nameWithType: ITopPeerCategoryPeers.Peers
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Peers
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Peers
    path: ../src/OpenTl.Schema/_generated/_Entities/TopPeerCategoryPeers/ITopPeerCategoryPeers.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: TVector<ITopPeer> Peers { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.ITopPeer}
    content.vb: Property Peers As TVector(Of ITopPeer)
  overload: OpenTl.Schema.ITopPeerCategoryPeers.Peers*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Category*
  commentId: Overload:OpenTl.Schema.ITopPeerCategoryPeers.Category
  isExternal: false
  name: Category
  nameWithType: ITopPeerCategoryPeers.Category
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Category
- uid: OpenTl.Schema.ITopPeerCategory
  commentId: T:OpenTl.Schema.ITopPeerCategory
  parent: OpenTl.Schema
  isExternal: false
  name: ITopPeerCategory
  nameWithType: ITopPeerCategory
  fullName: OpenTl.Schema.ITopPeerCategory
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Count*
  commentId: Overload:OpenTl.Schema.ITopPeerCategoryPeers.Count
  isExternal: false
  name: Count
  nameWithType: ITopPeerCategoryPeers.Count
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.ITopPeerCategoryPeers.Peers*
  commentId: Overload:OpenTl.Schema.ITopPeerCategoryPeers.Peers
  isExternal: false
  name: Peers
  nameWithType: ITopPeerCategoryPeers.Peers
  fullName: OpenTl.Schema.ITopPeerCategoryPeers.Peers
- uid: OpenTl.Schema.TVector{OpenTl.Schema.ITopPeer}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.ITopPeer}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<ITopPeer>
  nameWithType: TVector<ITopPeer>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.ITopPeer>
  nameWithType.vb: TVector(Of ITopPeer)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.ITopPeer)
  name.vb: TVector(Of ITopPeer)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.ITopPeer
    name: ITopPeer
    nameWithType: ITopPeer
    fullName: OpenTl.Schema.ITopPeer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.ITopPeer
    name: ITopPeer
    nameWithType: ITopPeer
    fullName: OpenTl.Schema.ITopPeer
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
