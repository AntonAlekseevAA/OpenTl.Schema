### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.TBotResults
  commentId: T:OpenTl.Schema.Messages.TBotResults
  id: TBotResults
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.TBotResults.CacheTime
  - OpenTl.Schema.Messages.TBotResults.Flags
  - OpenTl.Schema.Messages.TBotResults.Gallery
  - OpenTl.Schema.Messages.TBotResults.NextOffset
  - OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
  - OpenTl.Schema.Messages.TBotResults.QueryId
  - OpenTl.Schema.Messages.TBotResults.Results
  - OpenTl.Schema.Messages.TBotResults.SwitchPm
  - OpenTl.Schema.Messages.TBotResults.Users
  langs:
  - csharp
  - vb
  name: TBotResults
  nameWithType: TBotResults
  fullName: OpenTl.Schema.Messages.TBotResults
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TBotResults
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class TBotResults : IBotResults, IObject'
    content.vb: >-
      Public Class TBotResults
          Implements IBotResults, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.Messages.IBotResults
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.TBotResults.Flags
  commentId: P:OpenTl.Schema.Messages.TBotResults.Flags
  id: Flags
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TBotResults.Flags
  fullName: OpenTl.Schema.Messages.TBotResults.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Messages.TBotResults.Flags*
  implements:
  - OpenTl.Schema.Messages.IBotResults.Flags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.Gallery
  commentId: P:OpenTl.Schema.Messages.TBotResults.Gallery
  id: Gallery
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: Gallery
  nameWithType: TBotResults.Gallery
  fullName: OpenTl.Schema.Messages.TBotResults.Gallery
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Gallery
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public bool Gallery { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Gallery As Boolean
  overload: OpenTl.Schema.Messages.TBotResults.Gallery*
  implements:
  - OpenTl.Schema.Messages.IBotResults.Gallery
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.QueryId
  commentId: P:OpenTl.Schema.Messages.TBotResults.QueryId
  id: QueryId
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: QueryId
  nameWithType: TBotResults.QueryId
  fullName: OpenTl.Schema.Messages.TBotResults.QueryId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: QueryId
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public long QueryId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property QueryId As Long
  overload: OpenTl.Schema.Messages.TBotResults.QueryId*
  implements:
  - OpenTl.Schema.Messages.IBotResults.QueryId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
  commentId: P:OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
  id: NextOffsetAsBinary
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: NextOffsetAsBinary
  nameWithType: TBotResults.NextOffsetAsBinary
  fullName: OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NextOffsetAsBinary
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  summary: Binary representation for the &apos;NextOffset&apos; property
  example: []
  syntax:
    content: public byte[] NextOffsetAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property NextOffsetAsBinary As Byte()
  overload: OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary*
  implements:
  - OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.NextOffset
  commentId: P:OpenTl.Schema.Messages.TBotResults.NextOffset
  id: NextOffset
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: NextOffset
  nameWithType: TBotResults.NextOffset
  fullName: OpenTl.Schema.Messages.TBotResults.NextOffset
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NextOffset
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 30
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public string NextOffset { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NextOffset As String
  overload: OpenTl.Schema.Messages.TBotResults.NextOffset*
  implements:
  - OpenTl.Schema.Messages.IBotResults.NextOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.SwitchPm
  commentId: P:OpenTl.Schema.Messages.TBotResults.SwitchPm
  id: SwitchPm
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: SwitchPm
  nameWithType: TBotResults.SwitchPm
  fullName: OpenTl.Schema.Messages.TBotResults.SwitchPm
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SwitchPm
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public IInlineBotSwitchPM SwitchPm { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInlineBotSwitchPM
    content.vb: Public Property SwitchPm As IInlineBotSwitchPM
  overload: OpenTl.Schema.Messages.TBotResults.SwitchPm*
  implements:
  - OpenTl.Schema.Messages.IBotResults.SwitchPm
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.Results
  commentId: P:OpenTl.Schema.Messages.TBotResults.Results
  id: Results
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: TBotResults.Results
  fullName: OpenTl.Schema.Messages.TBotResults.Results
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Results
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public TVector<IBotInlineResult> Results { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
    content.vb: Public Property Results As TVector(Of IBotInlineResult)
  overload: OpenTl.Schema.Messages.TBotResults.Results*
  implements:
  - OpenTl.Schema.Messages.IBotResults.Results
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.CacheTime
  commentId: P:OpenTl.Schema.Messages.TBotResults.CacheTime
  id: CacheTime
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: CacheTime
  nameWithType: TBotResults.CacheTime
  fullName: OpenTl.Schema.Messages.TBotResults.CacheTime
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CacheTime
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public int CacheTime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CacheTime As Integer
  overload: OpenTl.Schema.Messages.TBotResults.CacheTime*
  implements:
  - OpenTl.Schema.Messages.IBotResults.CacheTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Messages.TBotResults.Users
  commentId: P:OpenTl.Schema.Messages.TBotResults.Users
  id: Users
  parent: OpenTl.Schema.Messages.TBotResults
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: TBotResults.Users
  fullName: OpenTl.Schema.Messages.TBotResults.Users
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Users
    path: ../src/OpenTl.Schema/_generated/Messages/BotResults/TBotResults.cs
    startLine: 42
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public TVector<IUser> Users { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
    content.vb: Public Property Users As TVector(Of IUser)
  overload: OpenTl.Schema.Messages.TBotResults.Users*
  implements:
  - OpenTl.Schema.Messages.IBotResults.Users
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.Messages.IBotResults
  commentId: T:OpenTl.Schema.Messages.IBotResults
  parent: OpenTl.Schema.Messages
  isExternal: false
  name: IBotResults
  nameWithType: IBotResults
  fullName: OpenTl.Schema.Messages.IBotResults
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Messages.TBotResults.Flags*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.Flags
  isExternal: false
  name: Flags
  nameWithType: TBotResults.Flags
  fullName: OpenTl.Schema.Messages.TBotResults.Flags
- uid: OpenTl.Schema.Messages.IBotResults.Flags
  commentId: P:OpenTl.Schema.Messages.IBotResults.Flags
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: Flags
  nameWithType: IBotResults.Flags
  fullName: OpenTl.Schema.Messages.IBotResults.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.Messages.TBotResults.Gallery*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.Gallery
  isExternal: false
  name: Gallery
  nameWithType: TBotResults.Gallery
  fullName: OpenTl.Schema.Messages.TBotResults.Gallery
- uid: OpenTl.Schema.Messages.IBotResults.Gallery
  commentId: P:OpenTl.Schema.Messages.IBotResults.Gallery
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: Gallery
  nameWithType: IBotResults.Gallery
  fullName: OpenTl.Schema.Messages.IBotResults.Gallery
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Messages.TBotResults.QueryId*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.QueryId
  isExternal: false
  name: QueryId
  nameWithType: TBotResults.QueryId
  fullName: OpenTl.Schema.Messages.TBotResults.QueryId
- uid: OpenTl.Schema.Messages.IBotResults.QueryId
  commentId: P:OpenTl.Schema.Messages.IBotResults.QueryId
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: QueryId
  nameWithType: IBotResults.QueryId
  fullName: OpenTl.Schema.Messages.IBotResults.QueryId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
  isExternal: false
  name: NextOffsetAsBinary
  nameWithType: TBotResults.NextOffsetAsBinary
  fullName: OpenTl.Schema.Messages.TBotResults.NextOffsetAsBinary
- uid: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  commentId: P:OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: NextOffsetAsBinary
  nameWithType: IBotResults.NextOffsetAsBinary
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffsetAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Messages.TBotResults.NextOffset*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.NextOffset
  isExternal: false
  name: NextOffset
  nameWithType: TBotResults.NextOffset
  fullName: OpenTl.Schema.Messages.TBotResults.NextOffset
- uid: OpenTl.Schema.Messages.IBotResults.NextOffset
  commentId: P:OpenTl.Schema.Messages.IBotResults.NextOffset
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: NextOffset
  nameWithType: IBotResults.NextOffset
  fullName: OpenTl.Schema.Messages.IBotResults.NextOffset
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Messages.TBotResults.SwitchPm*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.SwitchPm
  isExternal: false
  name: SwitchPm
  nameWithType: TBotResults.SwitchPm
  fullName: OpenTl.Schema.Messages.TBotResults.SwitchPm
- uid: OpenTl.Schema.Messages.IBotResults.SwitchPm
  commentId: P:OpenTl.Schema.Messages.IBotResults.SwitchPm
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: SwitchPm
  nameWithType: IBotResults.SwitchPm
  fullName: OpenTl.Schema.Messages.IBotResults.SwitchPm
- uid: OpenTl.Schema.IInlineBotSwitchPM
  commentId: T:OpenTl.Schema.IInlineBotSwitchPM
  parent: OpenTl.Schema
  isExternal: false
  name: IInlineBotSwitchPM
  nameWithType: IInlineBotSwitchPM
  fullName: OpenTl.Schema.IInlineBotSwitchPM
- uid: OpenTl.Schema.Messages.TBotResults.Results*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.Results
  isExternal: false
  name: Results
  nameWithType: TBotResults.Results
  fullName: OpenTl.Schema.Messages.TBotResults.Results
- uid: OpenTl.Schema.Messages.IBotResults.Results
  commentId: P:OpenTl.Schema.Messages.IBotResults.Results
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: Results
  nameWithType: IBotResults.Results
  fullName: OpenTl.Schema.Messages.IBotResults.Results
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IBotInlineResult}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IBotInlineResult>
  nameWithType: TVector<IBotInlineResult>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IBotInlineResult>
  nameWithType.vb: TVector(Of IBotInlineResult)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IBotInlineResult)
  name.vb: TVector(Of IBotInlineResult)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IBotInlineResult
    name: IBotInlineResult
    nameWithType: IBotInlineResult
    fullName: OpenTl.Schema.IBotInlineResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IBotInlineResult
    name: IBotInlineResult
    nameWithType: IBotInlineResult
    fullName: OpenTl.Schema.IBotInlineResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Messages.TBotResults.CacheTime*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.CacheTime
  isExternal: false
  name: CacheTime
  nameWithType: TBotResults.CacheTime
  fullName: OpenTl.Schema.Messages.TBotResults.CacheTime
- uid: OpenTl.Schema.Messages.IBotResults.CacheTime
  commentId: P:OpenTl.Schema.Messages.IBotResults.CacheTime
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: CacheTime
  nameWithType: IBotResults.CacheTime
  fullName: OpenTl.Schema.Messages.IBotResults.CacheTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Messages.TBotResults.Users*
  commentId: Overload:OpenTl.Schema.Messages.TBotResults.Users
  isExternal: false
  name: Users
  nameWithType: TBotResults.Users
  fullName: OpenTl.Schema.Messages.TBotResults.Users
- uid: OpenTl.Schema.Messages.IBotResults.Users
  commentId: P:OpenTl.Schema.Messages.IBotResults.Users
  parent: OpenTl.Schema.Messages.IBotResults
  isExternal: false
  name: Users
  nameWithType: IBotResults.Users
  fullName: OpenTl.Schema.Messages.IBotResults.Users
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IUser}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IUser>
  nameWithType: TVector<IUser>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IUser>
  nameWithType.vb: TVector(Of IUser)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IUser)
  name.vb: TVector(Of IUser)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IUser
    name: IUser
    nameWithType: IUser
    fullName: OpenTl.Schema.IUser
  - name: )
    nameWithType: )
    fullName: )
