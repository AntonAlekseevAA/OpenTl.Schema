### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  commentId: T:OpenTl.Schema.TInputBotInlineMessageMediaVenue
  id: TInputBotInlineMessageMediaVenue
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
  - OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  langs:
  - csharp
  - vb
  name: TInputBotInlineMessageMediaVenue
  nameWithType: TInputBotInlineMessageMediaVenue
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TInputBotInlineMessageMediaVenue
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TInputBotInlineMessageMediaVenue : IInputBotInlineMessage, IObject'
    content.vb: >-
      Public Class TInputBotInlineMessageMediaVenue
          Implements IInputBotInlineMessage, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IInputBotInlineMessage
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
  id: Flags
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TInputBotInlineMessageMediaVenue.Flags
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags*
  implements:
  - OpenTl.Schema.IInputBotInlineMessage.Flags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
  id: GeoPoint
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: GeoPoint
  nameWithType: TInputBotInlineMessageMediaVenue.GeoPoint
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: GeoPoint
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IInputGeoPoint GeoPoint { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputGeoPoint
    content.vb: Public Property GeoPoint As IInputGeoPoint
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
  id: TitleAsBinary
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: TitleAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.TitleAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TitleAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Title&apos; property
  example: []
  syntax:
    content: public byte[] TitleAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property TitleAsBinary As Byte()
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
  id: Title
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TInputBotInlineMessageMediaVenue.Title
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Title
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
  id: AddressAsBinary
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: AddressAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.AddressAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AddressAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 28
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Address&apos; property
  example: []
  syntax:
    content: public byte[] AddressAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AddressAsBinary As Byte()
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
  id: Address
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: TInputBotInlineMessageMediaVenue.Address
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Address
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
  id: ProviderAsBinary
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: ProviderAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.ProviderAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ProviderAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 35
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Provider&apos; property
  example: []
  syntax:
    content: public byte[] ProviderAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property ProviderAsBinary As Byte()
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
  id: Provider
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: TInputBotInlineMessageMediaVenue.Provider
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Provider
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Provider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Provider As String
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  id: VenueIdAsBinary
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: VenueIdAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: VenueIdAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 42
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;VenueId&apos; property
  example: []
  syntax:
    content: public byte[] VenueIdAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property VenueIdAsBinary As Byte()
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
  id: VenueId
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: VenueId
  nameWithType: TInputBotInlineMessageMediaVenue.VenueId
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: VenueId
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 46
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string VenueId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VenueId As String
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
  commentId: P:OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
  id: ReplyMarkup
  parent: OpenTl.Schema.TInputBotInlineMessageMediaVenue
  langs:
  - csharp
  - vb
  name: ReplyMarkup
  nameWithType: TInputBotInlineMessageMediaVenue.ReplyMarkup
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ReplyMarkup
    path: ../src/OpenTl.Schema/_generated/_Entities/InputBotInlineMessage/TInputBotInlineMessageMediaVenue.cs
    startLine: 48
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IReplyMarkup ReplyMarkup { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IReplyMarkup
    content.vb: Public Property ReplyMarkup As IReplyMarkup
  overload: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup*
  implements:
  - OpenTl.Schema.IInputBotInlineMessage.ReplyMarkup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IInputBotInlineMessage
  commentId: T:OpenTl.Schema.IInputBotInlineMessage
  parent: OpenTl.Schema
  isExternal: false
  name: IInputBotInlineMessage
  nameWithType: IInputBotInlineMessage
  fullName: OpenTl.Schema.IInputBotInlineMessage
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
  isExternal: false
  name: Flags
  nameWithType: TInputBotInlineMessageMediaVenue.Flags
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Flags
- uid: OpenTl.Schema.IInputBotInlineMessage.Flags
  commentId: P:OpenTl.Schema.IInputBotInlineMessage.Flags
  parent: OpenTl.Schema.IInputBotInlineMessage
  isExternal: false
  name: Flags
  nameWithType: IInputBotInlineMessage.Flags
  fullName: OpenTl.Schema.IInputBotInlineMessage.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
  isExternal: false
  name: GeoPoint
  nameWithType: TInputBotInlineMessageMediaVenue.GeoPoint
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.GeoPoint
- uid: OpenTl.Schema.IInputGeoPoint
  commentId: T:OpenTl.Schema.IInputGeoPoint
  parent: OpenTl.Schema
  isExternal: false
  name: IInputGeoPoint
  nameWithType: IInputGeoPoint
  fullName: OpenTl.Schema.IInputGeoPoint
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
  isExternal: false
  name: TitleAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.TitleAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.TitleAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
  isExternal: false
  name: Title
  nameWithType: TInputBotInlineMessageMediaVenue.Title
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
  isExternal: false
  name: AddressAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.AddressAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.AddressAsBinary
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
  isExternal: false
  name: Address
  nameWithType: TInputBotInlineMessageMediaVenue.Address
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Address
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
  isExternal: false
  name: ProviderAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.ProviderAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ProviderAsBinary
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
  isExternal: false
  name: Provider
  nameWithType: TInputBotInlineMessageMediaVenue.Provider
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.Provider
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  isExternal: false
  name: VenueIdAsBinary
  nameWithType: TInputBotInlineMessageMediaVenue.VenueIdAsBinary
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueIdAsBinary
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
  isExternal: false
  name: VenueId
  nameWithType: TInputBotInlineMessageMediaVenue.VenueId
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.VenueId
- uid: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup*
  commentId: Overload:OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
  isExternal: false
  name: ReplyMarkup
  nameWithType: TInputBotInlineMessageMediaVenue.ReplyMarkup
  fullName: OpenTl.Schema.TInputBotInlineMessageMediaVenue.ReplyMarkup
- uid: OpenTl.Schema.IInputBotInlineMessage.ReplyMarkup
  commentId: P:OpenTl.Schema.IInputBotInlineMessage.ReplyMarkup
  parent: OpenTl.Schema.IInputBotInlineMessage
  isExternal: false
  name: ReplyMarkup
  nameWithType: IInputBotInlineMessage.ReplyMarkup
  fullName: OpenTl.Schema.IInputBotInlineMessage.ReplyMarkup
- uid: OpenTl.Schema.IReplyMarkup
  commentId: T:OpenTl.Schema.IReplyMarkup
  parent: OpenTl.Schema
  isExternal: false
  name: IReplyMarkup
  nameWithType: IReplyMarkup
  fullName: OpenTl.Schema.IReplyMarkup
