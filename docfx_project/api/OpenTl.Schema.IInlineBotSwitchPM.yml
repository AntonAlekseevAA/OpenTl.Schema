### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.IInlineBotSwitchPM
  commentId: T:OpenTl.Schema.IInlineBotSwitchPM
  id: IInlineBotSwitchPM
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.IInlineBotSwitchPM.StartParam
  - OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
  - OpenTl.Schema.IInlineBotSwitchPM.Text
  - OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
  langs:
  - csharp
  - vb
  name: IInlineBotSwitchPM
  nameWithType: IInlineBotSwitchPM
  fullName: OpenTl.Schema.IInlineBotSwitchPM
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IInlineBotSwitchPM
    path: ../src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public interface IInlineBotSwitchPM : IObject'
    content.vb: >-
      Public Interface IInlineBotSwitchPM
          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
  commentId: P:OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
  id: TextAsBinary
  parent: OpenTl.Schema.IInlineBotSwitchPM
  langs:
  - csharp
  - vb
  name: TextAsBinary
  nameWithType: IInlineBotSwitchPM.TextAsBinary
  fullName: OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TextAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] TextAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property TextAsBinary As Byte()
  overload: OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IInlineBotSwitchPM.Text
  commentId: P:OpenTl.Schema.IInlineBotSwitchPM.Text
  id: Text
  parent: OpenTl.Schema.IInlineBotSwitchPM
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: IInlineBotSwitchPM.Text
  fullName: OpenTl.Schema.IInlineBotSwitchPM.Text
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Text
    path: ../src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
    startLine: 12
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Text As String
  overload: OpenTl.Schema.IInlineBotSwitchPM.Text*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
  commentId: P:OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
  id: StartParamAsBinary
  parent: OpenTl.Schema.IInlineBotSwitchPM
  langs:
  - csharp
  - vb
  name: StartParamAsBinary
  nameWithType: IInlineBotSwitchPM.StartParamAsBinary
  fullName: OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: StartParamAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: byte[] StartParamAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Property StartParamAsBinary As Byte()
  overload: OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.IInlineBotSwitchPM.StartParam
  commentId: P:OpenTl.Schema.IInlineBotSwitchPM.StartParam
  id: StartParam
  parent: OpenTl.Schema.IInlineBotSwitchPM
  langs:
  - csharp
  - vb
  name: StartParam
  nameWithType: IInlineBotSwitchPM.StartParam
  fullName: OpenTl.Schema.IInlineBotSwitchPM.StartParam
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: StartParam
    path: ../src/OpenTl.Schema/_generated/_Entities/InlineBotSwitchPM/IInlineBotSwitchPM.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: string StartParam { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property StartParam As String
  overload: OpenTl.Schema.IInlineBotSwitchPM.StartParam*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary*
  commentId: Overload:OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
  isExternal: false
  name: TextAsBinary
  nameWithType: IInlineBotSwitchPM.TextAsBinary
  fullName: OpenTl.Schema.IInlineBotSwitchPM.TextAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.IInlineBotSwitchPM.Text*
  commentId: Overload:OpenTl.Schema.IInlineBotSwitchPM.Text
  isExternal: false
  name: Text
  nameWithType: IInlineBotSwitchPM.Text
  fullName: OpenTl.Schema.IInlineBotSwitchPM.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary*
  commentId: Overload:OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
  isExternal: false
  name: StartParamAsBinary
  nameWithType: IInlineBotSwitchPM.StartParamAsBinary
  fullName: OpenTl.Schema.IInlineBotSwitchPM.StartParamAsBinary
- uid: OpenTl.Schema.IInlineBotSwitchPM.StartParam*
  commentId: Overload:OpenTl.Schema.IInlineBotSwitchPM.StartParam
  isExternal: false
  name: StartParam
  nameWithType: IInlineBotSwitchPM.StartParam
  fullName: OpenTl.Schema.IInlineBotSwitchPM.StartParam
