### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.RequestGetStickerSet
  commentId: T:OpenTl.Schema.Messages.RequestGetStickerSet
  id: RequestGetStickerSet
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
  langs:
  - csharp
  - vb
  name: RequestGetStickerSet
  nameWithType: RequestGetStickerSet
  fullName: OpenTl.Schema.Messages.RequestGetStickerSet
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestGetStickerSet
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetStickerSet.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public class RequestGetStickerSet : object, IRequest<IStickerSet>, IRequest, IObject'
    content.vb: >-
      Public Class RequestGetStickerSet

          Inherits Object

          Implements IRequest(Of IStickerSet), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IStickerSet}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
  commentId: P:OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
  id: Stickerset
  parent: OpenTl.Schema.Messages.RequestGetStickerSet
  langs:
  - csharp
  - vb
  name: Stickerset
  nameWithType: RequestGetStickerSet.Stickerset
  fullName: OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/RequestGetStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Stickerset
    path: ../src/OpenTl.Schema/_generated/Messages/RequestGetStickerSet.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: public IInputStickerSet Stickerset { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputStickerSet
    content.vb: Public Property Stickerset As IInputStickerSet
  overload: OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IStickerSet}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.Messages.IStickerSet}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IStickerSet>
  nameWithType: IRequest<IStickerSet>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.Messages.IStickerSet>
  nameWithType.vb: IRequest(Of IStickerSet)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.Messages.IStickerSet)
  name.vb: IRequest(Of IStickerSet)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.Messages.IStickerSet
    name: IStickerSet
    nameWithType: IStickerSet
    fullName: OpenTl.Schema.Messages.IStickerSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.Messages.IStickerSet
    name: IStickerSet
    nameWithType: IStickerSet
    fullName: OpenTl.Schema.Messages.IStickerSet
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset*
  commentId: Overload:OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
  isExternal: false
  name: Stickerset
  nameWithType: RequestGetStickerSet.Stickerset
  fullName: OpenTl.Schema.Messages.RequestGetStickerSet.Stickerset
- uid: OpenTl.Schema.IInputStickerSet
  commentId: T:OpenTl.Schema.IInputStickerSet
  parent: OpenTl.Schema
  isExternal: false
  name: IInputStickerSet
  nameWithType: IInputStickerSet
  fullName: OpenTl.Schema.IInputStickerSet
