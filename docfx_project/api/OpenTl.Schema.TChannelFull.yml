### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TChannelFull
  commentId: T:OpenTl.Schema.TChannelFull
  id: TChannelFull
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TChannelFull.About
  - OpenTl.Schema.TChannelFull.AboutAsBinary
  - OpenTl.Schema.TChannelFull.AdminsCount
  - OpenTl.Schema.TChannelFull.AvailableMinId
  - OpenTl.Schema.TChannelFull.BannedCount
  - OpenTl.Schema.TChannelFull.BotInfo
  - OpenTl.Schema.TChannelFull.CanSetStickers
  - OpenTl.Schema.TChannelFull.CanSetUsername
  - OpenTl.Schema.TChannelFull.CanViewParticipants
  - OpenTl.Schema.TChannelFull.ChatPhoto
  - OpenTl.Schema.TChannelFull.ExportedInvite
  - OpenTl.Schema.TChannelFull.Flags
  - OpenTl.Schema.TChannelFull.HiddenPrehistory
  - OpenTl.Schema.TChannelFull.Id
  - OpenTl.Schema.TChannelFull.KickedCount
  - OpenTl.Schema.TChannelFull.MigratedFromChatId
  - OpenTl.Schema.TChannelFull.MigratedFromMaxId
  - OpenTl.Schema.TChannelFull.NotifySettings
  - OpenTl.Schema.TChannelFull.ParticipantsCount
  - OpenTl.Schema.TChannelFull.PinnedMsgId
  - OpenTl.Schema.TChannelFull.ReadInboxMaxId
  - OpenTl.Schema.TChannelFull.ReadOutboxMaxId
  - OpenTl.Schema.TChannelFull.Stickerset
  - OpenTl.Schema.TChannelFull.UnreadCount
  langs:
  - csharp
  - vb
  name: TChannelFull
  nameWithType: TChannelFull
  fullName: OpenTl.Schema.TChannelFull
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TChannelFull
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TChannelFull : IChatFull, IObject'
    content.vb: >-
      Public Class TChannelFull
          Implements IChatFull, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IChatFull
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TChannelFull.Flags
  commentId: P:OpenTl.Schema.TChannelFull.Flags
  id: Flags
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TChannelFull.Flags
  fullName: OpenTl.Schema.TChannelFull.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.TChannelFull.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.CanViewParticipants
  commentId: P:OpenTl.Schema.TChannelFull.CanViewParticipants
  id: CanViewParticipants
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: CanViewParticipants
  nameWithType: TChannelFull.CanViewParticipants
  fullName: OpenTl.Schema.TChannelFull.CanViewParticipants
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CanViewParticipants
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool CanViewParticipants { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanViewParticipants As Boolean
  overload: OpenTl.Schema.TChannelFull.CanViewParticipants*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.CanSetUsername
  commentId: P:OpenTl.Schema.TChannelFull.CanSetUsername
  id: CanSetUsername
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: CanSetUsername
  nameWithType: TChannelFull.CanSetUsername
  fullName: OpenTl.Schema.TChannelFull.CanSetUsername
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CanSetUsername
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool CanSetUsername { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanSetUsername As Boolean
  overload: OpenTl.Schema.TChannelFull.CanSetUsername*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.CanSetStickers
  commentId: P:OpenTl.Schema.TChannelFull.CanSetStickers
  id: CanSetStickers
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: CanSetStickers
  nameWithType: TChannelFull.CanSetStickers
  fullName: OpenTl.Schema.TChannelFull.CanSetStickers
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CanSetStickers
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool CanSetStickers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanSetStickers As Boolean
  overload: OpenTl.Schema.TChannelFull.CanSetStickers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.HiddenPrehistory
  commentId: P:OpenTl.Schema.TChannelFull.HiddenPrehistory
  id: HiddenPrehistory
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: HiddenPrehistory
  nameWithType: TChannelFull.HiddenPrehistory
  fullName: OpenTl.Schema.TChannelFull.HiddenPrehistory
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: HiddenPrehistory
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public bool HiddenPrehistory { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HiddenPrehistory As Boolean
  overload: OpenTl.Schema.TChannelFull.HiddenPrehistory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.Id
  commentId: P:OpenTl.Schema.TChannelFull.Id
  id: Id
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TChannelFull.Id
  fullName: OpenTl.Schema.TChannelFull.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 33
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: OpenTl.Schema.TChannelFull.Id*
  implements:
  - OpenTl.Schema.IChatFull.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.AboutAsBinary
  commentId: P:OpenTl.Schema.TChannelFull.AboutAsBinary
  id: AboutAsBinary
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: AboutAsBinary
  nameWithType: TChannelFull.AboutAsBinary
  fullName: OpenTl.Schema.TChannelFull.AboutAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AboutAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 37
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;About&apos; property
  example: []
  syntax:
    content: public byte[] AboutAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AboutAsBinary As Byte()
  overload: OpenTl.Schema.TChannelFull.AboutAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.About
  commentId: P:OpenTl.Schema.TChannelFull.About
  id: About
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: About
  nameWithType: TChannelFull.About
  fullName: OpenTl.Schema.TChannelFull.About
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: About
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 41
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string About { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property About As String
  overload: OpenTl.Schema.TChannelFull.About*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.ParticipantsCount
  commentId: P:OpenTl.Schema.TChannelFull.ParticipantsCount
  id: ParticipantsCount
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: ParticipantsCount
  nameWithType: TChannelFull.ParticipantsCount
  fullName: OpenTl.Schema.TChannelFull.ParticipantsCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ParticipantsCount
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 43
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int ParticipantsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ParticipantsCount As Integer
  overload: OpenTl.Schema.TChannelFull.ParticipantsCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.AdminsCount
  commentId: P:OpenTl.Schema.TChannelFull.AdminsCount
  id: AdminsCount
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: AdminsCount
  nameWithType: TChannelFull.AdminsCount
  fullName: OpenTl.Schema.TChannelFull.AdminsCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AdminsCount
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 47
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int AdminsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AdminsCount As Integer
  overload: OpenTl.Schema.TChannelFull.AdminsCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.KickedCount
  commentId: P:OpenTl.Schema.TChannelFull.KickedCount
  id: KickedCount
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: KickedCount
  nameWithType: TChannelFull.KickedCount
  fullName: OpenTl.Schema.TChannelFull.KickedCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: KickedCount
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 51
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int KickedCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property KickedCount As Integer
  overload: OpenTl.Schema.TChannelFull.KickedCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.BannedCount
  commentId: P:OpenTl.Schema.TChannelFull.BannedCount
  id: BannedCount
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: BannedCount
  nameWithType: TChannelFull.BannedCount
  fullName: OpenTl.Schema.TChannelFull.BannedCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: BannedCount
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 55
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int BannedCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BannedCount As Integer
  overload: OpenTl.Schema.TChannelFull.BannedCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.ReadInboxMaxId
  commentId: P:OpenTl.Schema.TChannelFull.ReadInboxMaxId
  id: ReadInboxMaxId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: ReadInboxMaxId
  nameWithType: TChannelFull.ReadInboxMaxId
  fullName: OpenTl.Schema.TChannelFull.ReadInboxMaxId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ReadInboxMaxId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 59
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int ReadInboxMaxId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadInboxMaxId As Integer
  overload: OpenTl.Schema.TChannelFull.ReadInboxMaxId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.ReadOutboxMaxId
  commentId: P:OpenTl.Schema.TChannelFull.ReadOutboxMaxId
  id: ReadOutboxMaxId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: ReadOutboxMaxId
  nameWithType: TChannelFull.ReadOutboxMaxId
  fullName: OpenTl.Schema.TChannelFull.ReadOutboxMaxId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ReadOutboxMaxId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 62
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int ReadOutboxMaxId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadOutboxMaxId As Integer
  overload: OpenTl.Schema.TChannelFull.ReadOutboxMaxId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.UnreadCount
  commentId: P:OpenTl.Schema.TChannelFull.UnreadCount
  id: UnreadCount
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: UnreadCount
  nameWithType: TChannelFull.UnreadCount
  fullName: OpenTl.Schema.TChannelFull.UnreadCount
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: UnreadCount
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 65
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int UnreadCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UnreadCount As Integer
  overload: OpenTl.Schema.TChannelFull.UnreadCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.ChatPhoto
  commentId: P:OpenTl.Schema.TChannelFull.ChatPhoto
  id: ChatPhoto
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: ChatPhoto
  nameWithType: TChannelFull.ChatPhoto
  fullName: OpenTl.Schema.TChannelFull.ChatPhoto
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ChatPhoto
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 68
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IPhoto ChatPhoto { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPhoto
    content.vb: Public Property ChatPhoto As IPhoto
  overload: OpenTl.Schema.TChannelFull.ChatPhoto*
  implements:
  - OpenTl.Schema.IChatFull.ChatPhoto
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.NotifySettings
  commentId: P:OpenTl.Schema.TChannelFull.NotifySettings
  id: NotifySettings
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: NotifySettings
  nameWithType: TChannelFull.NotifySettings
  fullName: OpenTl.Schema.TChannelFull.NotifySettings
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NotifySettings
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 71
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IPeerNotifySettings NotifySettings { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IPeerNotifySettings
    content.vb: Public Property NotifySettings As IPeerNotifySettings
  overload: OpenTl.Schema.TChannelFull.NotifySettings*
  implements:
  - OpenTl.Schema.IChatFull.NotifySettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.ExportedInvite
  commentId: P:OpenTl.Schema.TChannelFull.ExportedInvite
  id: ExportedInvite
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: ExportedInvite
  nameWithType: TChannelFull.ExportedInvite
  fullName: OpenTl.Schema.TChannelFull.ExportedInvite
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ExportedInvite
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 74
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IExportedChatInvite ExportedInvite { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IExportedChatInvite
    content.vb: Public Property ExportedInvite As IExportedChatInvite
  overload: OpenTl.Schema.TChannelFull.ExportedInvite*
  implements:
  - OpenTl.Schema.IChatFull.ExportedInvite
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.BotInfo
  commentId: P:OpenTl.Schema.TChannelFull.BotInfo
  id: BotInfo
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: BotInfo
  nameWithType: TChannelFull.BotInfo
  fullName: OpenTl.Schema.TChannelFull.BotInfo
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: BotInfo
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 77
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public TVector<IBotInfo> BotInfo { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IBotInfo}
    content.vb: Public Property BotInfo As TVector(Of IBotInfo)
  overload: OpenTl.Schema.TChannelFull.BotInfo*
  implements:
  - OpenTl.Schema.IChatFull.BotInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.MigratedFromChatId
  commentId: P:OpenTl.Schema.TChannelFull.MigratedFromChatId
  id: MigratedFromChatId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: MigratedFromChatId
  nameWithType: TChannelFull.MigratedFromChatId
  fullName: OpenTl.Schema.TChannelFull.MigratedFromChatId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MigratedFromChatId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 80
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int MigratedFromChatId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MigratedFromChatId As Integer
  overload: OpenTl.Schema.TChannelFull.MigratedFromChatId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.MigratedFromMaxId
  commentId: P:OpenTl.Schema.TChannelFull.MigratedFromMaxId
  id: MigratedFromMaxId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: MigratedFromMaxId
  nameWithType: TChannelFull.MigratedFromMaxId
  fullName: OpenTl.Schema.TChannelFull.MigratedFromMaxId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MigratedFromMaxId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 84
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int MigratedFromMaxId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MigratedFromMaxId As Integer
  overload: OpenTl.Schema.TChannelFull.MigratedFromMaxId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.PinnedMsgId
  commentId: P:OpenTl.Schema.TChannelFull.PinnedMsgId
  id: PinnedMsgId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: PinnedMsgId
  nameWithType: TChannelFull.PinnedMsgId
  fullName: OpenTl.Schema.TChannelFull.PinnedMsgId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: PinnedMsgId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 88
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int PinnedMsgId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PinnedMsgId As Integer
  overload: OpenTl.Schema.TChannelFull.PinnedMsgId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.Stickerset
  commentId: P:OpenTl.Schema.TChannelFull.Stickerset
  id: Stickerset
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: Stickerset
  nameWithType: TChannelFull.Stickerset
  fullName: OpenTl.Schema.TChannelFull.Stickerset
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Stickerset
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 92
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IStickerSet Stickerset { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IStickerSet
    content.vb: Public Property Stickerset As IStickerSet
  overload: OpenTl.Schema.TChannelFull.Stickerset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TChannelFull.AvailableMinId
  commentId: P:OpenTl.Schema.TChannelFull.AvailableMinId
  id: AvailableMinId
  parent: OpenTl.Schema.TChannelFull
  langs:
  - csharp
  - vb
  name: AvailableMinId
  nameWithType: TChannelFull.AvailableMinId
  fullName: OpenTl.Schema.TChannelFull.AvailableMinId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AvailableMinId
    path: ../src/OpenTl.Schema/_generated/_Entities/ChatFull/TChannelFull.cs
    startLine: 96
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int AvailableMinId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AvailableMinId As Integer
  overload: OpenTl.Schema.TChannelFull.AvailableMinId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IChatFull
  commentId: T:OpenTl.Schema.IChatFull
  parent: OpenTl.Schema
  isExternal: false
  name: IChatFull
  nameWithType: IChatFull
  fullName: OpenTl.Schema.IChatFull
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TChannelFull.Flags*
  commentId: Overload:OpenTl.Schema.TChannelFull.Flags
  isExternal: false
  name: Flags
  nameWithType: TChannelFull.Flags
  fullName: OpenTl.Schema.TChannelFull.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.TChannelFull.CanViewParticipants*
  commentId: Overload:OpenTl.Schema.TChannelFull.CanViewParticipants
  isExternal: false
  name: CanViewParticipants
  nameWithType: TChannelFull.CanViewParticipants
  fullName: OpenTl.Schema.TChannelFull.CanViewParticipants
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.TChannelFull.CanSetUsername*
  commentId: Overload:OpenTl.Schema.TChannelFull.CanSetUsername
  isExternal: false
  name: CanSetUsername
  nameWithType: TChannelFull.CanSetUsername
  fullName: OpenTl.Schema.TChannelFull.CanSetUsername
- uid: OpenTl.Schema.TChannelFull.CanSetStickers*
  commentId: Overload:OpenTl.Schema.TChannelFull.CanSetStickers
  isExternal: false
  name: CanSetStickers
  nameWithType: TChannelFull.CanSetStickers
  fullName: OpenTl.Schema.TChannelFull.CanSetStickers
- uid: OpenTl.Schema.TChannelFull.HiddenPrehistory*
  commentId: Overload:OpenTl.Schema.TChannelFull.HiddenPrehistory
  isExternal: false
  name: HiddenPrehistory
  nameWithType: TChannelFull.HiddenPrehistory
  fullName: OpenTl.Schema.TChannelFull.HiddenPrehistory
- uid: OpenTl.Schema.TChannelFull.Id*
  commentId: Overload:OpenTl.Schema.TChannelFull.Id
  isExternal: false
  name: Id
  nameWithType: TChannelFull.Id
  fullName: OpenTl.Schema.TChannelFull.Id
- uid: OpenTl.Schema.IChatFull.Id
  commentId: P:OpenTl.Schema.IChatFull.Id
  parent: OpenTl.Schema.IChatFull
  isExternal: false
  name: Id
  nameWithType: IChatFull.Id
  fullName: OpenTl.Schema.IChatFull.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TChannelFull.AboutAsBinary*
  commentId: Overload:OpenTl.Schema.TChannelFull.AboutAsBinary
  isExternal: false
  name: AboutAsBinary
  nameWithType: TChannelFull.AboutAsBinary
  fullName: OpenTl.Schema.TChannelFull.AboutAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TChannelFull.About*
  commentId: Overload:OpenTl.Schema.TChannelFull.About
  isExternal: false
  name: About
  nameWithType: TChannelFull.About
  fullName: OpenTl.Schema.TChannelFull.About
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.TChannelFull.ParticipantsCount*
  commentId: Overload:OpenTl.Schema.TChannelFull.ParticipantsCount
  isExternal: false
  name: ParticipantsCount
  nameWithType: TChannelFull.ParticipantsCount
  fullName: OpenTl.Schema.TChannelFull.ParticipantsCount
- uid: OpenTl.Schema.TChannelFull.AdminsCount*
  commentId: Overload:OpenTl.Schema.TChannelFull.AdminsCount
  isExternal: false
  name: AdminsCount
  nameWithType: TChannelFull.AdminsCount
  fullName: OpenTl.Schema.TChannelFull.AdminsCount
- uid: OpenTl.Schema.TChannelFull.KickedCount*
  commentId: Overload:OpenTl.Schema.TChannelFull.KickedCount
  isExternal: false
  name: KickedCount
  nameWithType: TChannelFull.KickedCount
  fullName: OpenTl.Schema.TChannelFull.KickedCount
- uid: OpenTl.Schema.TChannelFull.BannedCount*
  commentId: Overload:OpenTl.Schema.TChannelFull.BannedCount
  isExternal: false
  name: BannedCount
  nameWithType: TChannelFull.BannedCount
  fullName: OpenTl.Schema.TChannelFull.BannedCount
- uid: OpenTl.Schema.TChannelFull.ReadInboxMaxId*
  commentId: Overload:OpenTl.Schema.TChannelFull.ReadInboxMaxId
  isExternal: false
  name: ReadInboxMaxId
  nameWithType: TChannelFull.ReadInboxMaxId
  fullName: OpenTl.Schema.TChannelFull.ReadInboxMaxId
- uid: OpenTl.Schema.TChannelFull.ReadOutboxMaxId*
  commentId: Overload:OpenTl.Schema.TChannelFull.ReadOutboxMaxId
  isExternal: false
  name: ReadOutboxMaxId
  nameWithType: TChannelFull.ReadOutboxMaxId
  fullName: OpenTl.Schema.TChannelFull.ReadOutboxMaxId
- uid: OpenTl.Schema.TChannelFull.UnreadCount*
  commentId: Overload:OpenTl.Schema.TChannelFull.UnreadCount
  isExternal: false
  name: UnreadCount
  nameWithType: TChannelFull.UnreadCount
  fullName: OpenTl.Schema.TChannelFull.UnreadCount
- uid: OpenTl.Schema.TChannelFull.ChatPhoto*
  commentId: Overload:OpenTl.Schema.TChannelFull.ChatPhoto
  isExternal: false
  name: ChatPhoto
  nameWithType: TChannelFull.ChatPhoto
  fullName: OpenTl.Schema.TChannelFull.ChatPhoto
- uid: OpenTl.Schema.IChatFull.ChatPhoto
  commentId: P:OpenTl.Schema.IChatFull.ChatPhoto
  parent: OpenTl.Schema.IChatFull
  isExternal: false
  name: ChatPhoto
  nameWithType: IChatFull.ChatPhoto
  fullName: OpenTl.Schema.IChatFull.ChatPhoto
- uid: OpenTl.Schema.IPhoto
  commentId: T:OpenTl.Schema.IPhoto
  parent: OpenTl.Schema
  isExternal: false
  name: IPhoto
  nameWithType: IPhoto
  fullName: OpenTl.Schema.IPhoto
- uid: OpenTl.Schema.TChannelFull.NotifySettings*
  commentId: Overload:OpenTl.Schema.TChannelFull.NotifySettings
  isExternal: false
  name: NotifySettings
  nameWithType: TChannelFull.NotifySettings
  fullName: OpenTl.Schema.TChannelFull.NotifySettings
- uid: OpenTl.Schema.IChatFull.NotifySettings
  commentId: P:OpenTl.Schema.IChatFull.NotifySettings
  parent: OpenTl.Schema.IChatFull
  isExternal: false
  name: NotifySettings
  nameWithType: IChatFull.NotifySettings
  fullName: OpenTl.Schema.IChatFull.NotifySettings
- uid: OpenTl.Schema.IPeerNotifySettings
  commentId: T:OpenTl.Schema.IPeerNotifySettings
  parent: OpenTl.Schema
  isExternal: false
  name: IPeerNotifySettings
  nameWithType: IPeerNotifySettings
  fullName: OpenTl.Schema.IPeerNotifySettings
- uid: OpenTl.Schema.TChannelFull.ExportedInvite*
  commentId: Overload:OpenTl.Schema.TChannelFull.ExportedInvite
  isExternal: false
  name: ExportedInvite
  nameWithType: TChannelFull.ExportedInvite
  fullName: OpenTl.Schema.TChannelFull.ExportedInvite
- uid: OpenTl.Schema.IChatFull.ExportedInvite
  commentId: P:OpenTl.Schema.IChatFull.ExportedInvite
  parent: OpenTl.Schema.IChatFull
  isExternal: false
  name: ExportedInvite
  nameWithType: IChatFull.ExportedInvite
  fullName: OpenTl.Schema.IChatFull.ExportedInvite
- uid: OpenTl.Schema.IExportedChatInvite
  commentId: T:OpenTl.Schema.IExportedChatInvite
  parent: OpenTl.Schema
  isExternal: false
  name: IExportedChatInvite
  nameWithType: IExportedChatInvite
  fullName: OpenTl.Schema.IExportedChatInvite
- uid: OpenTl.Schema.TChannelFull.BotInfo*
  commentId: Overload:OpenTl.Schema.TChannelFull.BotInfo
  isExternal: false
  name: BotInfo
  nameWithType: TChannelFull.BotInfo
  fullName: OpenTl.Schema.TChannelFull.BotInfo
- uid: OpenTl.Schema.IChatFull.BotInfo
  commentId: P:OpenTl.Schema.IChatFull.BotInfo
  parent: OpenTl.Schema.IChatFull
  isExternal: false
  name: BotInfo
  nameWithType: IChatFull.BotInfo
  fullName: OpenTl.Schema.IChatFull.BotInfo
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IBotInfo}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IBotInfo}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IBotInfo>
  nameWithType: TVector<IBotInfo>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IBotInfo>
  nameWithType.vb: TVector(Of IBotInfo)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IBotInfo)
  name.vb: TVector(Of IBotInfo)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IBotInfo
    name: IBotInfo
    nameWithType: IBotInfo
    fullName: OpenTl.Schema.IBotInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IBotInfo
    name: IBotInfo
    nameWithType: IBotInfo
    fullName: OpenTl.Schema.IBotInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TChannelFull.MigratedFromChatId*
  commentId: Overload:OpenTl.Schema.TChannelFull.MigratedFromChatId
  isExternal: false
  name: MigratedFromChatId
  nameWithType: TChannelFull.MigratedFromChatId
  fullName: OpenTl.Schema.TChannelFull.MigratedFromChatId
- uid: OpenTl.Schema.TChannelFull.MigratedFromMaxId*
  commentId: Overload:OpenTl.Schema.TChannelFull.MigratedFromMaxId
  isExternal: false
  name: MigratedFromMaxId
  nameWithType: TChannelFull.MigratedFromMaxId
  fullName: OpenTl.Schema.TChannelFull.MigratedFromMaxId
- uid: OpenTl.Schema.TChannelFull.PinnedMsgId*
  commentId: Overload:OpenTl.Schema.TChannelFull.PinnedMsgId
  isExternal: false
  name: PinnedMsgId
  nameWithType: TChannelFull.PinnedMsgId
  fullName: OpenTl.Schema.TChannelFull.PinnedMsgId
- uid: OpenTl.Schema.TChannelFull.Stickerset*
  commentId: Overload:OpenTl.Schema.TChannelFull.Stickerset
  isExternal: false
  name: Stickerset
  nameWithType: TChannelFull.Stickerset
  fullName: OpenTl.Schema.TChannelFull.Stickerset
- uid: OpenTl.Schema.IStickerSet
  commentId: T:OpenTl.Schema.IStickerSet
  parent: OpenTl.Schema
  isExternal: false
  name: IStickerSet
  nameWithType: IStickerSet
  fullName: OpenTl.Schema.IStickerSet
- uid: OpenTl.Schema.TChannelFull.AvailableMinId*
  commentId: Overload:OpenTl.Schema.TChannelFull.AvailableMinId
  isExternal: false
  name: AvailableMinId
  nameWithType: TChannelFull.AvailableMinId
  fullName: OpenTl.Schema.TChannelFull.AvailableMinId
