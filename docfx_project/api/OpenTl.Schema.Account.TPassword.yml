### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Account.TPassword
  commentId: T:OpenTl.Schema.Account.TPassword
  id: TPassword
  parent: OpenTl.Schema.Account
  children:
  - OpenTl.Schema.Account.TPassword.CurrentSalt
  - OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
  - OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
  - OpenTl.Schema.Account.TPassword.HasRecovery
  - OpenTl.Schema.Account.TPassword.Hint
  - OpenTl.Schema.Account.TPassword.HintAsBinary
  - OpenTl.Schema.Account.TPassword.NewSalt
  langs:
  - csharp
  - vb
  name: TPassword
  nameWithType: TPassword
  fullName: OpenTl.Schema.Account.TPassword
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TPassword
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: 'public class TPassword : object, IPassword, IObject'
    content.vb: >-
      Public Class TPassword

          Inherits Object

          Implements IPassword, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.Account.IPassword
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Account.TPassword.CurrentSalt
  commentId: P:OpenTl.Schema.Account.TPassword.CurrentSalt
  id: CurrentSalt
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: CurrentSalt
  nameWithType: TPassword.CurrentSalt
  fullName: OpenTl.Schema.Account.TPassword.CurrentSalt
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: CurrentSalt
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public byte[] CurrentSalt { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property CurrentSalt As Byte()
  overload: OpenTl.Schema.Account.TPassword.CurrentSalt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.NewSalt
  commentId: P:OpenTl.Schema.Account.TPassword.NewSalt
  id: NewSalt
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: NewSalt
  nameWithType: TPassword.NewSalt
  fullName: OpenTl.Schema.Account.TPassword.NewSalt
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NewSalt
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public byte[] NewSalt { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property NewSalt As Byte()
  overload: OpenTl.Schema.Account.TPassword.NewSalt*
  implements:
  - OpenTl.Schema.Account.IPassword.NewSalt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.HintAsBinary
  commentId: P:OpenTl.Schema.Account.TPassword.HintAsBinary
  id: HintAsBinary
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: HintAsBinary
  nameWithType: TPassword.HintAsBinary
  fullName: OpenTl.Schema.Account.TPassword.HintAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: HintAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;Hint&apos; property
  example: []
  syntax:
    content: public byte[] HintAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property HintAsBinary As Byte()
  overload: OpenTl.Schema.Account.TPassword.HintAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.Hint
  commentId: P:OpenTl.Schema.Account.TPassword.Hint
  id: Hint
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: Hint
  nameWithType: TPassword.Hint
  fullName: OpenTl.Schema.Account.TPassword.Hint
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Hint
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string Hint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Hint As String
  overload: OpenTl.Schema.Account.TPassword.Hint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.HasRecovery
  commentId: P:OpenTl.Schema.Account.TPassword.HasRecovery
  id: HasRecovery
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: HasRecovery
  nameWithType: TPassword.HasRecovery
  fullName: OpenTl.Schema.Account.TPassword.HasRecovery
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: HasRecovery
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 27
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public bool HasRecovery { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasRecovery As Boolean
  overload: OpenTl.Schema.Account.TPassword.HasRecovery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
  commentId: P:OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
  id: EmailUnconfirmedPatternAsBinary
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: EmailUnconfirmedPatternAsBinary
  nameWithType: TPassword.EmailUnconfirmedPatternAsBinary
  fullName: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmailUnconfirmedPatternAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 31
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;EmailUnconfirmedPattern&apos; property
  example: []
  syntax:
    content: public byte[] EmailUnconfirmedPatternAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property EmailUnconfirmedPatternAsBinary As Byte()
  overload: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary*
  implements:
  - OpenTl.Schema.Account.IPassword.EmailUnconfirmedPatternAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
  commentId: P:OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
  id: EmailUnconfirmedPattern
  parent: OpenTl.Schema.Account.TPassword
  langs:
  - csharp
  - vb
  name: EmailUnconfirmedPattern
  nameWithType: TPassword.EmailUnconfirmedPattern
  fullName: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmailUnconfirmedPattern
    path: ../src/OpenTl.Schema/_generated/Account/Password/TPassword.cs
    startLine: 35
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string EmailUnconfirmedPattern { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EmailUnconfirmedPattern As String
  overload: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern*
  implements:
  - OpenTl.Schema.Account.IPassword.EmailUnconfirmedPattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Account
  commentId: N:OpenTl.Schema.Account
  isExternal: false
  name: OpenTl.Schema.Account
  nameWithType: OpenTl.Schema.Account
  fullName: OpenTl.Schema.Account
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.Account.IPassword
  commentId: T:OpenTl.Schema.Account.IPassword
  parent: OpenTl.Schema.Account
  isExternal: false
  name: IPassword
  nameWithType: IPassword
  fullName: OpenTl.Schema.Account.IPassword
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Account.TPassword.CurrentSalt*
  commentId: Overload:OpenTl.Schema.Account.TPassword.CurrentSalt
  isExternal: false
  name: CurrentSalt
  nameWithType: TPassword.CurrentSalt
  fullName: OpenTl.Schema.Account.TPassword.CurrentSalt
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Account.TPassword.NewSalt*
  commentId: Overload:OpenTl.Schema.Account.TPassword.NewSalt
  isExternal: false
  name: NewSalt
  nameWithType: TPassword.NewSalt
  fullName: OpenTl.Schema.Account.TPassword.NewSalt
- uid: OpenTl.Schema.Account.IPassword.NewSalt
  commentId: P:OpenTl.Schema.Account.IPassword.NewSalt
  parent: OpenTl.Schema.Account.IPassword
  isExternal: false
  name: NewSalt
  nameWithType: IPassword.NewSalt
  fullName: OpenTl.Schema.Account.IPassword.NewSalt
- uid: OpenTl.Schema.Account.TPassword.HintAsBinary*
  commentId: Overload:OpenTl.Schema.Account.TPassword.HintAsBinary
  isExternal: false
  name: HintAsBinary
  nameWithType: TPassword.HintAsBinary
  fullName: OpenTl.Schema.Account.TPassword.HintAsBinary
- uid: OpenTl.Schema.Account.TPassword.Hint*
  commentId: Overload:OpenTl.Schema.Account.TPassword.Hint
  isExternal: false
  name: Hint
  nameWithType: TPassword.Hint
  fullName: OpenTl.Schema.Account.TPassword.Hint
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Account.TPassword.HasRecovery*
  commentId: Overload:OpenTl.Schema.Account.TPassword.HasRecovery
  isExternal: false
  name: HasRecovery
  nameWithType: TPassword.HasRecovery
  fullName: OpenTl.Schema.Account.TPassword.HasRecovery
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary*
  commentId: Overload:OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
  isExternal: false
  name: EmailUnconfirmedPatternAsBinary
  nameWithType: TPassword.EmailUnconfirmedPatternAsBinary
  fullName: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPatternAsBinary
- uid: OpenTl.Schema.Account.IPassword.EmailUnconfirmedPatternAsBinary
  commentId: P:OpenTl.Schema.Account.IPassword.EmailUnconfirmedPatternAsBinary
  parent: OpenTl.Schema.Account.IPassword
  isExternal: false
  name: EmailUnconfirmedPatternAsBinary
  nameWithType: IPassword.EmailUnconfirmedPatternAsBinary
  fullName: OpenTl.Schema.Account.IPassword.EmailUnconfirmedPatternAsBinary
- uid: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern*
  commentId: Overload:OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
  isExternal: false
  name: EmailUnconfirmedPattern
  nameWithType: TPassword.EmailUnconfirmedPattern
  fullName: OpenTl.Schema.Account.TPassword.EmailUnconfirmedPattern
- uid: OpenTl.Schema.Account.IPassword.EmailUnconfirmedPattern
  commentId: P:OpenTl.Schema.Account.IPassword.EmailUnconfirmedPattern
  parent: OpenTl.Schema.Account.IPassword
  isExternal: false
  name: EmailUnconfirmedPattern
  nameWithType: IPassword.EmailUnconfirmedPattern
  fullName: OpenTl.Schema.Account.IPassword.EmailUnconfirmedPattern
