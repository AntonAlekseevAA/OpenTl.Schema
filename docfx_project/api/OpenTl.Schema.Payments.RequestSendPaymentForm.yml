### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm
  commentId: T:OpenTl.Schema.Payments.RequestSendPaymentForm
  id: RequestSendPaymentForm
  parent: OpenTl.Schema.Payments
  children:
  - OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
  - OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
  - OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
  - OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
  - OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
  - OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
  - OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
  langs:
  - csharp
  - vb
  name: RequestSendPaymentForm
  nameWithType: RequestSendPaymentForm
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestSendPaymentForm
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: 'public class RequestSendPaymentForm : IRequest<IPaymentResult>, IRequest, IObject'
    content.vb: >-
      Public Class RequestSendPaymentForm
          Implements IRequest(Of IPaymentResult), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.Payments.IPaymentResult}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
  id: Flags
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RequestSendPaymentForm.Flags
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: System.Collections.BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.Flags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
  id: MsgId
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: MsgId
  nameWithType: RequestSendPaymentForm.MsgId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: MsgId
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: public int MsgId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MsgId As Integer
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
  id: RequestedInfoIdAsBinary
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: RequestedInfoIdAsBinary
  nameWithType: RequestSendPaymentForm.RequestedInfoIdAsBinary
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestedInfoIdAsBinary
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  summary: Binary representation for the &apos;RequestedInfoId&apos; property
  example: []
  syntax:
    content: public byte[] RequestedInfoIdAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property RequestedInfoIdAsBinary As Byte()
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
  id: RequestedInfoId
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: RequestedInfoId
  nameWithType: RequestSendPaymentForm.RequestedInfoId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestedInfoId
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: public string RequestedInfoId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RequestedInfoId As String
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
  id: ShippingOptionIdAsBinary
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: ShippingOptionIdAsBinary
  nameWithType: RequestSendPaymentForm.ShippingOptionIdAsBinary
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ShippingOptionIdAsBinary
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  summary: Binary representation for the &apos;ShippingOptionId&apos; property
  example: []
  syntax:
    content: public byte[] ShippingOptionIdAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property ShippingOptionIdAsBinary As Byte()
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
  id: ShippingOptionId
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: ShippingOptionId
  nameWithType: RequestSendPaymentForm.ShippingOptionId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ShippingOptionId
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 34
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: public string ShippingOptionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShippingOptionId As String
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
  commentId: P:OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
  id: Credentials
  parent: OpenTl.Schema.Payments.RequestSendPaymentForm
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: RequestSendPaymentForm.Credentials
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Credentials
    path: ../src/OpenTl.Schema/_generated/Payments/RequestSendPaymentForm.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Payments
  syntax:
    content: public IInputPaymentCredentials Credentials { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IInputPaymentCredentials
    content.vb: Public Property Credentials As IInputPaymentCredentials
  overload: OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Payments
  commentId: N:OpenTl.Schema.Payments
  isExternal: false
  name: OpenTl.Schema.Payments
  nameWithType: OpenTl.Schema.Payments
  fullName: OpenTl.Schema.Payments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.Payments.IPaymentResult}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.Payments.IPaymentResult}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IPaymentResult>
  nameWithType: IRequest<IPaymentResult>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.Payments.IPaymentResult>
  nameWithType.vb: IRequest(Of IPaymentResult)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.Payments.IPaymentResult)
  name.vb: IRequest(Of IPaymentResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.Payments.IPaymentResult
    name: IPaymentResult
    nameWithType: IPaymentResult
    fullName: OpenTl.Schema.Payments.IPaymentResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.Payments.IPaymentResult
    name: IPaymentResult
    nameWithType: IPaymentResult
    fullName: OpenTl.Schema.Payments.IPaymentResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.Flags*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
  isExternal: false
  name: Flags
  nameWithType: RequestSendPaymentForm.Flags
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.Flags
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
  isExternal: false
  name: MsgId
  nameWithType: RequestSendPaymentForm.MsgId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.MsgId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
  isExternal: false
  name: RequestedInfoIdAsBinary
  nameWithType: RequestSendPaymentForm.RequestedInfoIdAsBinary
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoIdAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
  isExternal: false
  name: RequestedInfoId
  nameWithType: RequestSendPaymentForm.RequestedInfoId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.RequestedInfoId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
  isExternal: false
  name: ShippingOptionIdAsBinary
  nameWithType: RequestSendPaymentForm.ShippingOptionIdAsBinary
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionIdAsBinary
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
  isExternal: false
  name: ShippingOptionId
  nameWithType: RequestSendPaymentForm.ShippingOptionId
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.ShippingOptionId
- uid: OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials*
  commentId: Overload:OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
  isExternal: false
  name: Credentials
  nameWithType: RequestSendPaymentForm.Credentials
  fullName: OpenTl.Schema.Payments.RequestSendPaymentForm.Credentials
- uid: OpenTl.Schema.IInputPaymentCredentials
  commentId: T:OpenTl.Schema.IInputPaymentCredentials
  parent: OpenTl.Schema
  isExternal: false
  name: IInputPaymentCredentials
  nameWithType: IInputPaymentCredentials
  fullName: OpenTl.Schema.IInputPaymentCredentials
