### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Account.TPasswordInputSettings
  commentId: T:OpenTl.Schema.Account.TPasswordInputSettings
  id: TPasswordInputSettings
  parent: OpenTl.Schema.Account
  children:
  - OpenTl.Schema.Account.TPasswordInputSettings.Email
  - OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
  - OpenTl.Schema.Account.TPasswordInputSettings.Flags
  - OpenTl.Schema.Account.TPasswordInputSettings.Hint
  - OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
  - OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
  - OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
  langs:
  - csharp
  - vb
  name: TPasswordInputSettings
  nameWithType: TPasswordInputSettings
  fullName: OpenTl.Schema.Account.TPasswordInputSettings
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TPasswordInputSettings
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: 'public class TPasswordInputSettings : object, IPasswordInputSettings, IObject'
    content.vb: >-
      Public Class TPasswordInputSettings

          Inherits Object

          Implements IPasswordInputSettings, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Flags
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.Flags
  id: Flags
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: TPasswordInputSettings.Flags
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Flags
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Flags
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public BitArray Flags { get; set; }
    parameters: []
    return:
      type: BitArray
    content.vb: Public Property Flags As BitArray
  overload: OpenTl.Schema.Account.TPasswordInputSettings.Flags*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.Flags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
  id: NewSalt
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: NewSalt
  nameWithType: TPasswordInputSettings.NewSalt
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NewSalt
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public byte[] NewSalt { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property NewSalt As Byte()
  overload: OpenTl.Schema.Account.TPasswordInputSettings.NewSalt*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.NewSalt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
  id: NewPasswordHash
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: NewPasswordHash
  nameWithType: TPasswordInputSettings.NewPasswordHash
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NewPasswordHash
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public byte[] NewPasswordHash { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property NewPasswordHash As Byte()
  overload: OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.NewPasswordHash
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
  id: HintAsBinary
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: HintAsBinary
  nameWithType: TPasswordInputSettings.HintAsBinary
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: HintAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 26
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;Hint&apos; property
  example: []
  syntax:
    content: public byte[] HintAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property HintAsBinary As Byte()
  overload: OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.HintAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Hint
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.Hint
  id: Hint
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: Hint
  nameWithType: TPasswordInputSettings.Hint
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Hint
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Hint
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 31
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string Hint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Hint As String
  overload: OpenTl.Schema.Account.TPasswordInputSettings.Hint*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.Hint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
  id: EmailAsBinary
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: EmailAsBinary
  nameWithType: TPasswordInputSettings.EmailAsBinary
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: EmailAsBinary
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 34
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  summary: Binary representation for the &apos;Email&apos; property
  example: []
  syntax:
    content: public byte[] EmailAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property EmailAsBinary As Byte()
  overload: OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.EmailAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Email
  commentId: P:OpenTl.Schema.Account.TPasswordInputSettings.Email
  id: Email
  parent: OpenTl.Schema.Account.TPasswordInputSettings
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: TPasswordInputSettings.Email
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Email
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Email
    path: ../src/OpenTl.Schema/_generated/Account/PasswordInputSettings/TPasswordInputSettings.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Account
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: OpenTl.Schema.Account.TPasswordInputSettings.Email*
  implements:
  - OpenTl.Schema.Account.IPasswordInputSettings.Email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema.Account
  commentId: N:OpenTl.Schema.Account
  isExternal: false
  name: OpenTl.Schema.Account
  nameWithType: OpenTl.Schema.Account
  fullName: OpenTl.Schema.Account
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.Account.IPasswordInputSettings
  commentId: T:OpenTl.Schema.Account.IPasswordInputSettings
  parent: OpenTl.Schema.Account
  isExternal: false
  name: IPasswordInputSettings
  nameWithType: IPasswordInputSettings
  fullName: OpenTl.Schema.Account.IPasswordInputSettings
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Flags*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.Flags
  isExternal: false
  name: Flags
  nameWithType: TPasswordInputSettings.Flags
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Flags
- uid: OpenTl.Schema.Account.IPasswordInputSettings.Flags
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.Flags
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: Flags
  nameWithType: IPasswordInputSettings.Flags
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.Flags
- uid: BitArray
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: BitArray
- uid: OpenTl.Schema.Account.TPasswordInputSettings.NewSalt*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
  isExternal: false
  name: NewSalt
  nameWithType: TPasswordInputSettings.NewSalt
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.NewSalt
- uid: OpenTl.Schema.Account.IPasswordInputSettings.NewSalt
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.NewSalt
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: NewSalt
  nameWithType: IPasswordInputSettings.NewSalt
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.NewSalt
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
  isExternal: false
  name: NewPasswordHash
  nameWithType: TPasswordInputSettings.NewPasswordHash
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.NewPasswordHash
- uid: OpenTl.Schema.Account.IPasswordInputSettings.NewPasswordHash
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.NewPasswordHash
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: NewPasswordHash
  nameWithType: IPasswordInputSettings.NewPasswordHash
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.NewPasswordHash
- uid: OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
  isExternal: false
  name: HintAsBinary
  nameWithType: TPasswordInputSettings.HintAsBinary
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.HintAsBinary
- uid: OpenTl.Schema.Account.IPasswordInputSettings.HintAsBinary
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.HintAsBinary
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: HintAsBinary
  nameWithType: IPasswordInputSettings.HintAsBinary
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.HintAsBinary
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Hint*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.Hint
  isExternal: false
  name: Hint
  nameWithType: TPasswordInputSettings.Hint
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Hint
- uid: OpenTl.Schema.Account.IPasswordInputSettings.Hint
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.Hint
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: Hint
  nameWithType: IPasswordInputSettings.Hint
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.Hint
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
  isExternal: false
  name: EmailAsBinary
  nameWithType: TPasswordInputSettings.EmailAsBinary
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.EmailAsBinary
- uid: OpenTl.Schema.Account.IPasswordInputSettings.EmailAsBinary
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.EmailAsBinary
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: EmailAsBinary
  nameWithType: IPasswordInputSettings.EmailAsBinary
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.EmailAsBinary
- uid: OpenTl.Schema.Account.TPasswordInputSettings.Email*
  commentId: Overload:OpenTl.Schema.Account.TPasswordInputSettings.Email
  isExternal: false
  name: Email
  nameWithType: TPasswordInputSettings.Email
  fullName: OpenTl.Schema.Account.TPasswordInputSettings.Email
- uid: OpenTl.Schema.Account.IPasswordInputSettings.Email
  commentId: P:OpenTl.Schema.Account.IPasswordInputSettings.Email
  parent: OpenTl.Schema.Account.IPasswordInputSettings
  isExternal: false
  name: Email
  nameWithType: IPasswordInputSettings.Email
  fullName: OpenTl.Schema.Account.IPasswordInputSettings.Email
