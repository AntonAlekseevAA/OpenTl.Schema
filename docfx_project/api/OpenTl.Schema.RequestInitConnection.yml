### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.RequestInitConnection
  commentId: T:OpenTl.Schema.RequestInitConnection
  id: RequestInitConnection
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.RequestInitConnection.ApiId
  - OpenTl.Schema.RequestInitConnection.AppVersion
  - OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
  - OpenTl.Schema.RequestInitConnection.DeviceModel
  - OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
  - OpenTl.Schema.RequestInitConnection.LangCode
  - OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
  - OpenTl.Schema.RequestInitConnection.LangPack
  - OpenTl.Schema.RequestInitConnection.LangPackAsBinary
  - OpenTl.Schema.RequestInitConnection.Query
  - OpenTl.Schema.RequestInitConnection.SystemLangCode
  - OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
  - OpenTl.Schema.RequestInitConnection.SystemVersion
  - OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
  langs:
  - csharp
  - vb
  name: RequestInitConnection
  nameWithType: RequestInitConnection
  fullName: OpenTl.Schema.RequestInitConnection
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: RequestInitConnection
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class RequestInitConnection : object, IRequest<IObject>, IRequest, IObject'
    content.vb: >-
      Public Class RequestInitConnection

          Inherits Object

          Implements IRequest(Of IObject), IRequest, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IRequest{OpenTl.Schema.IObject}
  - OpenTl.Schema.IRequest
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.RequestInitConnection.ApiId
  commentId: P:OpenTl.Schema.RequestInitConnection.ApiId
  id: ApiId
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: ApiId
  nameWithType: RequestInitConnection.ApiId
  fullName: OpenTl.Schema.RequestInitConnection.ApiId
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: ApiId
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int ApiId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ApiId As Integer
  overload: OpenTl.Schema.RequestInitConnection.ApiId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
  id: DeviceModelAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: DeviceModelAsBinary
  nameWithType: RequestInitConnection.DeviceModelAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModelAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 18
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;DeviceModel&apos; property
  example: []
  syntax:
    content: public byte[] DeviceModelAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property DeviceModelAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.DeviceModel
  commentId: P:OpenTl.Schema.RequestInitConnection.DeviceModel
  id: DeviceModel
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: DeviceModel
  nameWithType: RequestInitConnection.DeviceModel
  fullName: OpenTl.Schema.RequestInitConnection.DeviceModel
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: DeviceModel
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 22
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string DeviceModel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DeviceModel As String
  overload: OpenTl.Schema.RequestInitConnection.DeviceModel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
  id: SystemVersionAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: SystemVersionAsBinary
  nameWithType: RequestInitConnection.SystemVersionAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;SystemVersion&apos; property
  example: []
  syntax:
    content: public byte[] SystemVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SystemVersionAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.SystemVersion
  commentId: P:OpenTl.Schema.RequestInitConnection.SystemVersion
  id: SystemVersion
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: SystemVersion
  nameWithType: RequestInitConnection.SystemVersion
  fullName: OpenTl.Schema.RequestInitConnection.SystemVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 29
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string SystemVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemVersion As String
  overload: OpenTl.Schema.RequestInitConnection.SystemVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
  id: AppVersionAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: AppVersionAsBinary
  nameWithType: RequestInitConnection.AppVersionAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersionAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 32
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;AppVersion&apos; property
  example: []
  syntax:
    content: public byte[] AppVersionAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property AppVersionAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.AppVersionAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.AppVersion
  commentId: P:OpenTl.Schema.RequestInitConnection.AppVersion
  id: AppVersion
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: AppVersion
  nameWithType: RequestInitConnection.AppVersion
  fullName: OpenTl.Schema.RequestInitConnection.AppVersion
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: AppVersion
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 36
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string AppVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppVersion As String
  overload: OpenTl.Schema.RequestInitConnection.AppVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
  id: SystemLangCodeAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: SystemLangCodeAsBinary
  nameWithType: RequestInitConnection.SystemLangCodeAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemLangCodeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 39
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;SystemLangCode&apos; property
  example: []
  syntax:
    content: public byte[] SystemLangCodeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SystemLangCodeAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.SystemLangCode
  commentId: P:OpenTl.Schema.RequestInitConnection.SystemLangCode
  id: SystemLangCode
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: SystemLangCode
  nameWithType: RequestInitConnection.SystemLangCode
  fullName: OpenTl.Schema.RequestInitConnection.SystemLangCode
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: SystemLangCode
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 43
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string SystemLangCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemLangCode As String
  overload: OpenTl.Schema.RequestInitConnection.SystemLangCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.LangPackAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.LangPackAsBinary
  id: LangPackAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: LangPackAsBinary
  nameWithType: RequestInitConnection.LangPackAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.LangPackAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LangPackAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 46
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;LangPack&apos; property
  example: []
  syntax:
    content: public byte[] LangPackAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property LangPackAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.LangPackAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.LangPack
  commentId: P:OpenTl.Schema.RequestInitConnection.LangPack
  id: LangPack
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: LangPack
  nameWithType: RequestInitConnection.LangPack
  fullName: OpenTl.Schema.RequestInitConnection.LangPack
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LangPack
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 50
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string LangPack { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LangPack As String
  overload: OpenTl.Schema.RequestInitConnection.LangPack*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
  commentId: P:OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
  id: LangCodeAsBinary
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: LangCodeAsBinary
  nameWithType: RequestInitConnection.LangCodeAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LangCodeAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 53
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;LangCode&apos; property
  example: []
  syntax:
    content: public byte[] LangCodeAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property LangCodeAsBinary As Byte()
  overload: OpenTl.Schema.RequestInitConnection.LangCodeAsBinary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.LangCode
  commentId: P:OpenTl.Schema.RequestInitConnection.LangCode
  id: LangCode
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: LangCode
  nameWithType: RequestInitConnection.LangCode
  fullName: OpenTl.Schema.RequestInitConnection.LangCode
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: LangCode
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 57
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string LangCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LangCode As String
  overload: OpenTl.Schema.RequestInitConnection.LangCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.RequestInitConnection.Query
  commentId: P:OpenTl.Schema.RequestInitConnection.Query
  id: Query
  parent: OpenTl.Schema.RequestInitConnection
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: RequestInitConnection.Query
  fullName: OpenTl.Schema.RequestInitConnection.Query
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Query
    path: ../src/OpenTl.Schema/_generated/_Entities/RequestInitConnection.cs
    startLine: 59
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public IObject Query { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IObject
    content.vb: Public Property Query As IObject
  overload: OpenTl.Schema.RequestInitConnection.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IRequest{OpenTl.Schema.IObject}
  commentId: T:OpenTl.Schema.IRequest{OpenTl.Schema.IObject}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.IRequest`1
  name: IRequest<IObject>
  nameWithType: IRequest<IObject>
  fullName: OpenTl.Schema.IRequest<OpenTl.Schema.IObject>
  nameWithType.vb: IRequest(Of IObject)
  fullName.vb: OpenTl.Schema.IRequest(Of OpenTl.Schema.IObject)
  name.vb: IRequest(Of IObject)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IRequest
  commentId: T:OpenTl.Schema.IRequest
  parent: OpenTl.Schema
  isExternal: false
  name: IRequest
  nameWithType: IRequest
  fullName: OpenTl.Schema.IRequest
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.IRequest`1
  commentId: T:OpenTl.Schema.IRequest`1
  isExternal: false
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: OpenTl.Schema.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: OpenTl.Schema.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: OpenTl.Schema.IRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.RequestInitConnection.ApiId*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.ApiId
  isExternal: false
  name: ApiId
  nameWithType: RequestInitConnection.ApiId
  fullName: OpenTl.Schema.RequestInitConnection.ApiId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
  isExternal: false
  name: DeviceModelAsBinary
  nameWithType: RequestInitConnection.DeviceModelAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.DeviceModelAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.RequestInitConnection.DeviceModel*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.DeviceModel
  isExternal: false
  name: DeviceModel
  nameWithType: RequestInitConnection.DeviceModel
  fullName: OpenTl.Schema.RequestInitConnection.DeviceModel
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
  isExternal: false
  name: SystemVersionAsBinary
  nameWithType: RequestInitConnection.SystemVersionAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.SystemVersionAsBinary
- uid: OpenTl.Schema.RequestInitConnection.SystemVersion*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.SystemVersion
  isExternal: false
  name: SystemVersion
  nameWithType: RequestInitConnection.SystemVersion
  fullName: OpenTl.Schema.RequestInitConnection.SystemVersion
- uid: OpenTl.Schema.RequestInitConnection.AppVersionAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
  isExternal: false
  name: AppVersionAsBinary
  nameWithType: RequestInitConnection.AppVersionAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.AppVersionAsBinary
- uid: OpenTl.Schema.RequestInitConnection.AppVersion*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.AppVersion
  isExternal: false
  name: AppVersion
  nameWithType: RequestInitConnection.AppVersion
  fullName: OpenTl.Schema.RequestInitConnection.AppVersion
- uid: OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
  isExternal: false
  name: SystemLangCodeAsBinary
  nameWithType: RequestInitConnection.SystemLangCodeAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.SystemLangCodeAsBinary
- uid: OpenTl.Schema.RequestInitConnection.SystemLangCode*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.SystemLangCode
  isExternal: false
  name: SystemLangCode
  nameWithType: RequestInitConnection.SystemLangCode
  fullName: OpenTl.Schema.RequestInitConnection.SystemLangCode
- uid: OpenTl.Schema.RequestInitConnection.LangPackAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.LangPackAsBinary
  isExternal: false
  name: LangPackAsBinary
  nameWithType: RequestInitConnection.LangPackAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.LangPackAsBinary
- uid: OpenTl.Schema.RequestInitConnection.LangPack*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.LangPack
  isExternal: false
  name: LangPack
  nameWithType: RequestInitConnection.LangPack
  fullName: OpenTl.Schema.RequestInitConnection.LangPack
- uid: OpenTl.Schema.RequestInitConnection.LangCodeAsBinary*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
  isExternal: false
  name: LangCodeAsBinary
  nameWithType: RequestInitConnection.LangCodeAsBinary
  fullName: OpenTl.Schema.RequestInitConnection.LangCodeAsBinary
- uid: OpenTl.Schema.RequestInitConnection.LangCode*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.LangCode
  isExternal: false
  name: LangCode
  nameWithType: RequestInitConnection.LangCode
  fullName: OpenTl.Schema.RequestInitConnection.LangCode
- uid: OpenTl.Schema.RequestInitConnection.Query*
  commentId: Overload:OpenTl.Schema.RequestInitConnection.Query
  isExternal: false
  name: Query
  nameWithType: RequestInitConnection.Query
  fullName: OpenTl.Schema.RequestInitConnection.Query
