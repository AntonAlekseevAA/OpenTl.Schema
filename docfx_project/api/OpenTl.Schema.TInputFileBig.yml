### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.TInputFileBig
  commentId: T:OpenTl.Schema.TInputFileBig
  id: TInputFileBig
  parent: OpenTl.Schema
  children:
  - OpenTl.Schema.TInputFileBig.Id
  - OpenTl.Schema.TInputFileBig.Name
  - OpenTl.Schema.TInputFileBig.NameAsBinary
  - OpenTl.Schema.TInputFileBig.Parts
  langs:
  - csharp
  - vb
  name: TInputFileBig
  nameWithType: TInputFileBig
  fullName: OpenTl.Schema.TInputFileBig
  type: Class
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: TInputFileBig
    path: ../src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: 'public class TInputFileBig : object, IInputFile, IObject'
    content.vb: >-
      Public Class TInputFileBig

          Inherits Object

          Implements IInputFile, IObject
  inheritance:
  - System.Object
  implements:
  - OpenTl.Schema.IInputFile
  - OpenTl.Schema.IObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenTl.Schema.TInputFileBig.Id
  commentId: P:OpenTl.Schema.TInputFileBig.Id
  id: Id
  parent: OpenTl.Schema.TInputFileBig
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TInputFileBig.Id
  fullName: OpenTl.Schema.TInputFileBig.Id
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Id
    path: ../src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
    startLine: 14
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public long Id { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Id As Long
  overload: OpenTl.Schema.TInputFileBig.Id*
  implements:
  - OpenTl.Schema.IInputFile.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputFileBig.Parts
  commentId: P:OpenTl.Schema.TInputFileBig.Parts
  id: Parts
  parent: OpenTl.Schema.TInputFileBig
  langs:
  - csharp
  - vb
  name: Parts
  nameWithType: TInputFileBig.Parts
  fullName: OpenTl.Schema.TInputFileBig.Parts
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Parts
    path: ../src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
    startLine: 17
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public int Parts { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Parts As Integer
  overload: OpenTl.Schema.TInputFileBig.Parts*
  implements:
  - OpenTl.Schema.IInputFile.Parts
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputFileBig.NameAsBinary
  commentId: P:OpenTl.Schema.TInputFileBig.NameAsBinary
  id: NameAsBinary
  parent: OpenTl.Schema.TInputFileBig
  langs:
  - csharp
  - vb
  name: NameAsBinary
  nameWithType: TInputFileBig.NameAsBinary
  fullName: OpenTl.Schema.TInputFileBig.NameAsBinary
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: NameAsBinary
    path: ../src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
    startLine: 21
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  summary: Binary representation for the &apos;Name&apos; property
  example: []
  syntax:
    content: public byte[] NameAsBinary { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property NameAsBinary As Byte()
  overload: OpenTl.Schema.TInputFileBig.NameAsBinary*
  implements:
  - OpenTl.Schema.IInputFile.NameAsBinary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenTl.Schema.TInputFileBig.Name
  commentId: P:OpenTl.Schema.TInputFileBig.Name
  id: Name
  parent: OpenTl.Schema.TInputFileBig
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TInputFileBig.Name
  fullName: OpenTl.Schema.TInputFileBig.Name
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Name
    path: ../src/OpenTl.Schema/_generated/_Entities/InputFile/TInputFileBig.cs
    startLine: 25
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: OpenTl.Schema.TInputFileBig.Name*
  implements:
  - OpenTl.Schema.IInputFile.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenTl.Schema.IInputFile
  commentId: T:OpenTl.Schema.IInputFile
  parent: OpenTl.Schema
  isExternal: false
  name: IInputFile
  nameWithType: IInputFile
  fullName: OpenTl.Schema.IInputFile
- uid: OpenTl.Schema.IObject
  commentId: T:OpenTl.Schema.IObject
  parent: OpenTl.Schema
  isExternal: false
  name: IObject
  nameWithType: IObject
  fullName: OpenTl.Schema.IObject
- uid: OpenTl.Schema.TInputFileBig.Id*
  commentId: Overload:OpenTl.Schema.TInputFileBig.Id
  isExternal: false
  name: Id
  nameWithType: TInputFileBig.Id
  fullName: OpenTl.Schema.TInputFileBig.Id
- uid: OpenTl.Schema.IInputFile.Id
  commentId: P:OpenTl.Schema.IInputFile.Id
  parent: OpenTl.Schema.IInputFile
  isExternal: false
  name: Id
  nameWithType: IInputFile.Id
  fullName: OpenTl.Schema.IInputFile.Id
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OpenTl.Schema.TInputFileBig.Parts*
  commentId: Overload:OpenTl.Schema.TInputFileBig.Parts
  isExternal: false
  name: Parts
  nameWithType: TInputFileBig.Parts
  fullName: OpenTl.Schema.TInputFileBig.Parts
- uid: OpenTl.Schema.IInputFile.Parts
  commentId: P:OpenTl.Schema.IInputFile.Parts
  parent: OpenTl.Schema.IInputFile
  isExternal: false
  name: Parts
  nameWithType: IInputFile.Parts
  fullName: OpenTl.Schema.IInputFile.Parts
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OpenTl.Schema.TInputFileBig.NameAsBinary*
  commentId: Overload:OpenTl.Schema.TInputFileBig.NameAsBinary
  isExternal: false
  name: NameAsBinary
  nameWithType: TInputFileBig.NameAsBinary
  fullName: OpenTl.Schema.TInputFileBig.NameAsBinary
- uid: OpenTl.Schema.IInputFile.NameAsBinary
  commentId: P:OpenTl.Schema.IInputFile.NameAsBinary
  parent: OpenTl.Schema.IInputFile
  isExternal: false
  name: NameAsBinary
  nameWithType: IInputFile.NameAsBinary
  fullName: OpenTl.Schema.IInputFile.NameAsBinary
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenTl.Schema.TInputFileBig.Name*
  commentId: Overload:OpenTl.Schema.TInputFileBig.Name
  isExternal: false
  name: Name
  nameWithType: TInputFileBig.Name
  fullName: OpenTl.Schema.TInputFileBig.Name
- uid: OpenTl.Schema.IInputFile.Name
  commentId: P:OpenTl.Schema.IInputFile.Name
  parent: OpenTl.Schema.IInputFile
  isExternal: false
  name: Name
  nameWithType: IInputFile.Name
  fullName: OpenTl.Schema.IInputFile.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
