### YamlMime:ManagedReference
items:
- uid: OpenTl.Schema.Messages.IStickerSet
  commentId: T:OpenTl.Schema.Messages.IStickerSet
  id: IStickerSet
  parent: OpenTl.Schema.Messages
  children:
  - OpenTl.Schema.Messages.IStickerSet.Documents
  - OpenTl.Schema.Messages.IStickerSet.Packs
  - OpenTl.Schema.Messages.IStickerSet.Set
  langs:
  - csharp
  - vb
  name: IStickerSet
  nameWithType: IStickerSet
  fullName: OpenTl.Schema.Messages.IStickerSet
  type: Interface
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: IStickerSet
    path: ../src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
    startLine: 9
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: 'public interface IStickerSet : IObject'
    content.vb: >-
      Public Interface IStickerSet

          Inherits IObject
  extensionMethods:
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  - OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OpenTl.Schema.Messages.IStickerSet.Set
  commentId: P:OpenTl.Schema.Messages.IStickerSet.Set
  id: Set
  parent: OpenTl.Schema.Messages.IStickerSet
  langs:
  - csharp
  - vb
  name: Set
  nameWithType: IStickerSet.Set
  fullName: OpenTl.Schema.Messages.IStickerSet.Set
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Set
    path: ../src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
    startLine: 11
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: IStickerSet Set { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.IStickerSet
    content.vb: Property Set As IStickerSet
  overload: OpenTl.Schema.Messages.IStickerSet.Set*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IStickerSet.Packs
  commentId: P:OpenTl.Schema.Messages.IStickerSet.Packs
  id: Packs
  parent: OpenTl.Schema.Messages.IStickerSet
  langs:
  - csharp
  - vb
  name: Packs
  nameWithType: IStickerSet.Packs
  fullName: OpenTl.Schema.Messages.IStickerSet.Packs
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Packs
    path: ../src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
    startLine: 13
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: TVector<IStickerPack> Packs { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IStickerPack}
    content.vb: Property Packs As TVector(Of IStickerPack)
  overload: OpenTl.Schema.Messages.IStickerSet.Packs*
  modifiers.csharp:
  - get
  - set
- uid: OpenTl.Schema.Messages.IStickerSet.Documents
  commentId: P:OpenTl.Schema.Messages.IStickerSet.Documents
  id: Documents
  parent: OpenTl.Schema.Messages.IStickerSet
  langs:
  - csharp
  - vb
  name: Documents
  nameWithType: IStickerSet.Documents
  fullName: OpenTl.Schema.Messages.IStickerSet.Documents
  type: Property
  source:
    remote:
      path: src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
      branch: master
      repo: https://github.com/OpenTl/OpenTl.Schema.git
    id: Documents
    path: ../src/OpenTl.Schema/_generated/Messages/StickerSet/IStickerSet.cs
    startLine: 15
  assemblies:
  - OpenTl.Schema
  namespace: OpenTl.Schema.Messages
  syntax:
    content: TVector<IDocument> Documents { get; set; }
    parameters: []
    return:
      type: OpenTl.Schema.TVector{OpenTl.Schema.IDocument}
    content.vb: Property Documents As TVector(Of IDocument)
  overload: OpenTl.Schema.Messages.IStickerSet.Documents*
  modifiers.csharp:
  - get
  - set
references:
- uid: OpenTl.Schema.Messages
  commentId: N:OpenTl.Schema.Messages
  isExternal: false
  name: OpenTl.Schema.Messages
  nameWithType: OpenTl.Schema.Messages
  fullName: OpenTl.Schema.Messages
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.As``1
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  name: As<T>()
  nameWithType: Utils.As<T>()
  fullName: OpenTl.Schema.Utils.As<T>()
  nameWithType.vb: Utils.As(Of T)()
  fullName.vb: OpenTl.Schema.Utils.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.Cast``1
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  name: Cast<T>()
  nameWithType: Utils.Cast<T>()
  fullName: OpenTl.Schema.Utils.Cast<T>()
  nameWithType.vb: Utils.Cast(Of T)()
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)()
  name.vb: Cast(Of T)()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.IObject.OpenTl.Schema.Utils.IsEmpty
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  parent: OpenTl.Schema.Utils
  definition: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  name: IsEmpty()
  nameWithType: Utils.IsEmpty()
  fullName: OpenTl.Schema.Utils.IsEmpty()
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
  isExternal: false
  name: As<T>(IObject)
  nameWithType: Utils.As<T>(IObject)
  fullName: OpenTl.Schema.Utils.As<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.As(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.As(Of T)(OpenTl.Schema.IObject)
  name.vb: As(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As<T>
    nameWithType: Utils.As<T>
    fullName: OpenTl.Schema.Utils.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.As``1(OpenTl.Schema.IObject)
    name: As(Of T)
    nameWithType: Utils.As(Of T)
    fullName: OpenTl.Schema.Utils.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils
  commentId: T:OpenTl.Schema.Utils
  parent: OpenTl.Schema
  isExternal: false
  name: Utils
  nameWithType: Utils
  fullName: OpenTl.Schema.Utils
- uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
  isExternal: false
  name: Cast<T>(IObject)
  nameWithType: Utils.Cast<T>(IObject)
  fullName: OpenTl.Schema.Utils.Cast<T>(OpenTl.Schema.IObject)
  nameWithType.vb: Utils.Cast(Of T)(IObject)
  fullName.vb: OpenTl.Schema.Utils.Cast(Of T)(OpenTl.Schema.IObject)
  name.vb: Cast(Of T)(IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast<T>
    nameWithType: Utils.Cast<T>
    fullName: OpenTl.Schema.Utils.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.Cast``1(OpenTl.Schema.IObject)
    name: Cast(Of T)
    nameWithType: Utils.Cast(Of T)
    fullName: OpenTl.Schema.Utils.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  commentId: M:OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  isExternal: false
  name: IsEmpty(IObject)
  nameWithType: Utils.IsEmpty(IObject)
  fullName: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
  spec.csharp:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OpenTl.Schema.Utils.IsEmpty(OpenTl.Schema.IObject)
    name: IsEmpty
    nameWithType: Utils.IsEmpty
    fullName: OpenTl.Schema.Utils.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: OpenTl.Schema.IObject
    name: IObject
    nameWithType: IObject
    fullName: OpenTl.Schema.IObject
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema
  commentId: N:OpenTl.Schema
  isExternal: false
  name: OpenTl.Schema
  nameWithType: OpenTl.Schema
  fullName: OpenTl.Schema
- uid: OpenTl.Schema.Messages.IStickerSet.Set*
  commentId: Overload:OpenTl.Schema.Messages.IStickerSet.Set
  isExternal: false
  name: Set
  nameWithType: IStickerSet.Set
  fullName: OpenTl.Schema.Messages.IStickerSet.Set
- uid: OpenTl.Schema.IStickerSet
  commentId: T:OpenTl.Schema.IStickerSet
  parent: OpenTl.Schema
  isExternal: false
  name: IStickerSet
  nameWithType: IStickerSet
  fullName: OpenTl.Schema.IStickerSet
- uid: OpenTl.Schema.Messages.IStickerSet.Packs*
  commentId: Overload:OpenTl.Schema.Messages.IStickerSet.Packs
  isExternal: false
  name: Packs
  nameWithType: IStickerSet.Packs
  fullName: OpenTl.Schema.Messages.IStickerSet.Packs
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IStickerPack}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IStickerPack}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IStickerPack>
  nameWithType: TVector<IStickerPack>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IStickerPack>
  nameWithType.vb: TVector(Of IStickerPack)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IStickerPack)
  name.vb: TVector(Of IStickerPack)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IStickerPack
    name: IStickerPack
    nameWithType: IStickerPack
    fullName: OpenTl.Schema.IStickerPack
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IStickerPack
    name: IStickerPack
    nameWithType: IStickerPack
    fullName: OpenTl.Schema.IStickerPack
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.TVector`1
  commentId: T:OpenTl.Schema.TVector`1
  isExternal: false
  name: TVector<T>
  nameWithType: TVector<T>
  fullName: OpenTl.Schema.TVector<T>
  nameWithType.vb: TVector(Of T)
  fullName.vb: OpenTl.Schema.TVector(Of T)
  name.vb: TVector(Of T)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenTl.Schema.Messages.IStickerSet.Documents*
  commentId: Overload:OpenTl.Schema.Messages.IStickerSet.Documents
  isExternal: false
  name: Documents
  nameWithType: IStickerSet.Documents
  fullName: OpenTl.Schema.Messages.IStickerSet.Documents
- uid: OpenTl.Schema.TVector{OpenTl.Schema.IDocument}
  commentId: T:OpenTl.Schema.TVector{OpenTl.Schema.IDocument}
  parent: OpenTl.Schema
  definition: OpenTl.Schema.TVector`1
  name: TVector<IDocument>
  nameWithType: TVector<IDocument>
  fullName: OpenTl.Schema.TVector<OpenTl.Schema.IDocument>
  nameWithType.vb: TVector(Of IDocument)
  fullName.vb: OpenTl.Schema.TVector(Of OpenTl.Schema.IDocument)
  name.vb: TVector(Of IDocument)
  spec.csharp:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTl.Schema.IDocument
    name: IDocument
    nameWithType: IDocument
    fullName: OpenTl.Schema.IDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OpenTl.Schema.TVector`1
    name: TVector
    nameWithType: TVector
    fullName: OpenTl.Schema.TVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTl.Schema.IDocument
    name: IDocument
    nameWithType: IDocument
    fullName: OpenTl.Schema.IDocument
  - name: )
    nameWithType: )
    fullName: )
